<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MyCoon</title>
    <description>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 13 Apr 2017 02:37:38 +0800</pubDate>
    <lastBuildDate>Thu, 13 Apr 2017 02:37:38 +0800</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>ESP8266 with Arduino - Trials and Errors</title>
        <description>&lt;p&gt;ESP8266 is a popular WiFi module for its extremely affordable price. However, more errors tend to be encountered during the setup of this primitive module. &lt;/p&gt;

&lt;p&gt;In this tutorial, the basic steps of setting up ESP8266 through an Arduino board would be covered, and some personal trials and errors will be shared in hope to save people&amp;#39;s time and life if they are stuck with the same problems as I did.&lt;/p&gt;

&lt;!--more--&gt;

&lt;hr&gt;

&lt;p&gt;&lt;em&gt;I am actually an Arduino beginner and a software person. But in turn, I faced more errors than others, managed to solved them, and have more to share with other people who are also new to Arduino and ESP8266 WiFi module!&lt;/em&gt;&lt;/p&gt;

&lt;h1&gt;Introduction &amp;amp; Setup&lt;/h1&gt;

&lt;h2&gt;What is ESP8266?&lt;/h2&gt;

&lt;p&gt;An extremely affordable hardware component ($USD 3) to connect to WiFi. &lt;/p&gt;

&lt;p&gt;Comes with a variety of different models, which are all based on the same chip. The most popular model is ESP-03, which is of similar price to ESP-01 that I will be using in this tutorial, but with more ports (&lt;em&gt;so regretful, should have picked this one!&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i2.wp.com/randomnerdtutorials.com/wp-content/uploads/2015/01/all_esp_modules1.png?resize=600%2C337&quot; alt=&quot;ESP models&quot;&gt;&lt;/p&gt;

&lt;h2&gt;Components&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://world.taobao.com/item/40484626466.htm&quot;&gt;ESP8266 WiFi module ESP-01&lt;/a&gt; (or other)&lt;/li&gt;
&lt;li&gt;Arduino Mega board (or others)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://world.taobao.com/item/522587064231.htm?spm=a312a.7700714.0.0.LOoy8V#detail&quot;&gt;Logic level converter&lt;/a&gt; (optional)&lt;/li&gt;
&lt;li&gt;Breadboard, wires, ...&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;Before You Start...&lt;/h2&gt;

&lt;p&gt;Ok, here are some advice before you read on.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;If you don&amp;#39;t know what &lt;strong&gt;AT command&lt;/strong&gt; is, DON&amp;#39;T SKIP THE SECTION INTRODUCING IT. I&amp;#39;ll make it simple, I promise, but don&amp;#39;t directly dive into writing the codes before you know the basics of AT commands like I did - you&amp;#39;ll end up wasting more time dealing with errors.&lt;/li&gt;
&lt;li&gt;Always start with the most basic examples.&lt;/li&gt;
&lt;li&gt;Just to let you know, &lt;strong&gt;Arduino is not necessary for you to program ESP8266&lt;/strong&gt;. Interestingly, more tutorials I found online deal with it with a USB to serial converter such as the &lt;strong&gt;FTDI232R&lt;/strong&gt; module. Follow this tutorial if you have an Arduino board with you, or else you can follow the nice tutorials I took reference on in the reference list.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;Getting Started!&lt;/h1&gt;

&lt;p&gt;The following contents will be walked through:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Hooking Up ESP8266 + Sending AT Commands&lt;/li&gt;
&lt;li&gt;Programing ESP8266&lt;/li&gt;
&lt;li&gt;Connecting to WiFi

&lt;ol&gt;
&lt;li&gt;Client Example&lt;/li&gt;
&lt;li&gt;Server Example&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;1. Hooking Up ESP8266 + Sending AT Commands&lt;/h2&gt;

&lt;p&gt;Here are the pins for ESP-01 model:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/pyliaorachel/pyliaorachel.github.io/master/assets/post_img/ESP8266-pins.png&quot; alt=&quot;pins&quot;&gt;&lt;/p&gt;

&lt;h3&gt;Connections&lt;/h3&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align: center&quot;&gt;ESP8266&lt;/th&gt;
&lt;th style=&quot;text-align: center&quot;&gt;Arduino&lt;/th&gt;
&lt;th style=&quot;text-align: center&quot;&gt;Others&lt;/th&gt;
&lt;th style=&quot;text-align: left&quot;&gt;Purpose&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: center&quot;&gt;Vcc&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;3.3V&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;Power supply&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: center&quot;&gt;GND&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;GND&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;GND&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;Ground&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: center&quot;&gt;Rx&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;Rx&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;Receive data in&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: center&quot;&gt;Tx&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;Tx&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;Transmit data out&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: center&quot;&gt;CH_PD&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;Normally 3.3V&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;Chip power down&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: center&quot;&gt;RESET&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;3.3V for normal operations / GND for reset&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;Reset&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: center&quot;&gt;GPIO0&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;- for normal operations / GND for flashing firmware&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;General purpose I/O pins, but used in flashing firmware&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: center&quot;&gt;GPIO2&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;General purpose I/O pin&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;h5&gt;Key Notes&lt;/h5&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;NEVER&lt;/strong&gt; connect Vcc and other pins to 5V.

&lt;ul&gt;
&lt;li&gt;ESP8266 operates on 3.3V; connecting pins to 5V may damage the module.&lt;/li&gt;
&lt;li&gt;For Rx/Tx pins, the one receiving data through Arduino board should theoretically also be logically shifted down to 5V; but many people didn&amp;#39;t encounter problem connecting them directly to each other&amp;#39;s pins, including me.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DON&amp;#39;T&lt;/strong&gt; connect 3.3V power pin of Arduino to ESP8266. Use a &lt;strong&gt;logic level converter&lt;/strong&gt; to bring 5V down to 3.3V.

&lt;ul&gt;
&lt;li&gt;The max limit of current flowing out of that pin is around 50 mA, which usually is not enough. That&amp;#39;s why we need a &lt;strong&gt;logic level converter&lt;/strong&gt;; there are &lt;a href=&quot;http://randomnerdtutorials.com/how-to-level-shift-5v-to-3-3v/&quot;&gt;other ways&lt;/a&gt; to bring 5V down to 3.3V, but using logic level converter ensures a better transmission performance. You can also connect it to external power source, which should be the best way.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rx-Rx, Tx-Tx&lt;/strong&gt; for uploading program from computer to ESP8266 &lt;strong&gt;via Arduino board&lt;/strong&gt;; &lt;strong&gt;Rx-Tx, Tx-Rx&lt;/strong&gt; for letting Arduino board talk to ESP8266.

&lt;ul&gt;
&lt;li&gt;Think of Rx-Rx, Tx-Tx as making Arduino board a channel between the computer and ESP8266; whatever goes to the Arduino board goes to ESP8266, and whatever ESP8266 sends back goes to the computer! &lt;/li&gt;
&lt;li&gt;Think of Rx-Tx, Tx-Rx as making Arduino talk to ESP8266, so probably you would have some program in Arduino sending and receiving data/commands via its own serial ports.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;I don&amp;#39;t know what CH_PD port does. So you just leave it at 3.3V.&lt;/li&gt;
&lt;li&gt;If thinking of ESP8266 as an Arduino board, Rx, Tx, GPIO0, and GPIO2 are the possible digital pins, where Rx/Tx are the predefined Serial ports.

&lt;ul&gt;
&lt;li&gt;If you are programming directly into ESP8266, then when using up Rx and Tx, you would probably find yourself out of Serial ports for debugging. I&amp;#39;m not sure how it can be solved, but probably you can &lt;a href=&quot;https://github.com/esp8266/Arduino/blob/master/doc/reference.md&quot;&gt;set GPIO2 as the TX pin&lt;/a&gt; or &lt;a href=&quot;http://www.forward.com.au/pfod/ESP8266/GPIOpins/index.html&quot;&gt;extend your ports&lt;/a&gt;. Not sure if they make sense for ESP-01 model (try it and tell me).&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.forward.com.au/pfod/ESP8266/GPIOpins/index.html&quot;&gt;Learn more on GPIO ports&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;2. Programing ESP8266&lt;/h2&gt;

&lt;h2&gt;3. Connecting to WiFi&lt;/h2&gt;

&lt;h3&gt;1. Client Example&lt;/h3&gt;

&lt;h3&gt;2. Server Example&lt;/h3&gt;
</description>
        <pubDate>Thu, 13 Apr 2017 00:00:00 +0800</pubDate>
        <link>/tutorial/hardware/arduino/2017/04/13/esp8266-with-arduino-trials-and-errors.html</link>
        <guid isPermaLink="true">/tutorial/hardware/arduino/2017/04/13/esp8266-with-arduino-trials-and-errors.html</guid>
        
        <category>arduino</category>
        
        <category>esp8266</category>
        
        
        <category>Tutorial</category>
        
        <category>Hardware</category>
        
        <category>Arduino</category>
        
      </item>
    
      <item>
        <title>Django SQLite DB Cleanup</title>
        <description>&lt;p&gt;To beginners of Django, you may want to play with the sqlite db configuration commands before you actually implement something related to your project. The cleanup afterwards may be harmful due to the lack of clear instructions found online, and many cleanup should be done manually. Some useful commands and solutions to weird issues will be addressed.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h4&gt;DB Commands&lt;/h4&gt;

&lt;h6&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/1.10/topics/migrations/&quot;&gt;Migrations&lt;/a&gt;&lt;/h6&gt;

&lt;p&gt;&lt;code&gt;python manage.py makemigrations&lt;/code&gt;: creating new migrations based on the changes you have made to your models&lt;br&gt;
&lt;code&gt;python manage.py migrate&lt;/code&gt;: applying &amp;amp; unapplying migrations&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Issues

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/9373871/django-migrate-table-forum-user-already-exists&quot;&gt;table not exists errors&lt;/a&gt; occur

&lt;ul&gt;
&lt;li&gt;Run &lt;code&gt;python manage.py migrate --fake&lt;/code&gt; instead&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/21457563/operationalerror-no-such-column&quot;&gt;column not exists errors&lt;/a&gt; occur

&lt;ul&gt;
&lt;li&gt;Probably due to schema changes not synced with DB tables; check schema with &lt;code&gt;python manage.py inspectdb&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Suggest cleaning up the entire database in the following section&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h6&gt;Clean Up&lt;/h6&gt;

&lt;p&gt;This is only used when you want to clean up the &lt;strong&gt;entire database&lt;/strong&gt;, e.g. you&amp;#39;re playing with your DB and wants to start implementing real things now.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Dump all data in the DB: &lt;code&gt;python manage.py flush&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://simpleisbetterthancomplex.com/tutorial/2016/07/26/how-to-reset-migrations.html&quot;&gt;Reset migrations&lt;/a&gt;:&lt;br&gt;
&lt;code&gt;find . -path &amp;quot;*/migrations/*.py&amp;quot; -not -name &amp;quot;__init__.py&amp;quot; -delete&lt;/code&gt;&lt;br&gt;
&lt;code&gt;find . -path &amp;quot;*/migrations/*.pyc&amp;quot;  -delete&lt;/code&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.techiediaries.com/how-to-reset-migrations-in-django-17-18-19-and-110/&quot;&gt;Discard current schema&lt;/a&gt;: &lt;code&gt;rm db.sqlite3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Run migrations again&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now all things should be reset.&lt;/p&gt;

&lt;h6&gt;Schema&lt;/h6&gt;

&lt;p&gt;Suppose now you already have a bunch of data and you really don&amp;#39;t wanna dump them away. But after you modify the models, you found that the database schema won&amp;#39;t be updated!  &lt;/p&gt;

&lt;p&gt;Here is the suggested way:  &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;sqlite3 db.sqlite&lt;/code&gt;: enter the sqlite3 shell&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; .schema&lt;/code&gt;: check schema&lt;/li&gt;
&lt;li&gt;Verify your schema. If not matched with models, identify the outdated table and proceed with the following steps; otherwise, there must be other problems.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; drop table [table_name]&lt;/code&gt;: drop the table&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; create table [table_name] (...);&lt;/code&gt;: create the table again manually with the updated fields&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://simpleisbetterthancomplex.com/tutorial/2016/07/26/how-to-reset-migrations.html&quot;&gt;Reset migrations&lt;/a&gt;:&lt;br&gt;
&lt;code&gt;find . -path &amp;quot;*/migrations/*.py&amp;quot; -not -name &amp;quot;__init__.py&amp;quot; -delete&lt;/code&gt;&lt;br&gt;
&lt;code&gt;find . -path &amp;quot;*/migrations/*.pyc&amp;quot;  -delete&lt;/code&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Run migrations again&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now you can check schema with &lt;code&gt;python manage.py inspectdb&lt;/code&gt; again, and the related model should be updated.  &lt;/p&gt;

&lt;p&gt;This might not be the most perfect solution, but I bet there is no other simple way to update the schema without dumping the database all away; at least after all of the research, this is the only effective way I found to solve my problem. &lt;/p&gt;
</description>
        <pubDate>Wed, 29 Mar 2017 00:00:00 +0800</pubDate>
        <link>/blog/tech/django/2017/03/29/django-sqlite-db-cleanup.html</link>
        <guid isPermaLink="true">/blog/tech/django/2017/03/29/django-sqlite-db-cleanup.html</guid>
        
        <category>django</category>
        
        <category>sqlite</category>
        
        
        <category>Blog</category>
        
        <category>Tech</category>
        
        <category>Django</category>
        
      </item>
    
      <item>
        <title>Granny</title>
        <description>&lt;p align=&quot;center&quot;&gt;&lt;img width=&quot;400px&quot; height=&quot;400px&quot; src=&quot;https://raw.githubusercontent.com/pyliaorachel/granny/master/img/granny-icon.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/pyliaorachel/granny&quot;&gt;Granny&lt;/a&gt; is an app aimed at helping people to understand their emotions without having to overcome many difficulties when trying to find an assistant. You can easily open the app and talk to Granny, and Granny will respond with a face reflective of your emotions. Emotion history will also be kepted as a diary &lt;em&gt;(not yet implemented)&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;Details can be found &lt;a href=&quot;https://devpost.com/software/granny&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;!--more--&gt;

&lt;hr&gt;

&lt;p&gt;&lt;img width=&quot;245px&quot; height=&quot;416px&quot; src=&quot;https://raw.githubusercontent.com/pyliaorachel/granny/master/img/happy_granny.gif&quot; /&gt;
&lt;img width=&quot;245px&quot; height=&quot;414px&quot; src=&quot;https://raw.githubusercontent.com/pyliaorachel/granny/master/img/sad_neutral_granny.gif&quot; /&gt;
&lt;img width=&quot;245px&quot; height=&quot;414px&quot; src=&quot;https://raw.githubusercontent.com/pyliaorachel/granny/master/img/surprised_angry_granny.gif&quot; /&gt;&lt;/p&gt;

&lt;h2&gt;React Native&lt;/h2&gt;

&lt;p&gt;This app was created in a hackathon and won us the first prize. It was built on &lt;a href=&quot;https://facebook.github.io/react-native/&quot;&gt;React Native&lt;/a&gt;, which extremely accelerated the development of the app. I strongly recommend this powerful yet easy-to-learn framework for any developers ready to attend a hackathon.&lt;/p&gt;

&lt;p&gt;Some problems encountered with Android development and solutions:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Make sure in &lt;code&gt;android/app/build.bundle&lt;/code&gt;, &lt;code&gt;buildToolsVersion&lt;/code&gt;(in my case, 23.0.1) has the same version as your SDK.&lt;/li&gt;
&lt;li&gt;To enable developer mode on an android device, go to &lt;code&gt;Settings &amp;gt; About Phone &amp;gt; Build Number&lt;/code&gt; and tap on it for 7 times.&lt;/li&gt;
&lt;li&gt;If any error shows up when you open AndroidStudio and is trying to run the app, just follow the instructions to upgrade anything they require.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;Emotion API&lt;/h2&gt;

&lt;p&gt;The hackathon was held by Microsoft, and Azure was required in all projects. We chose &lt;a href=&quot;https://dev.projectoxford.ai/docs/services/5639d931ca73072154c1ce89/operations/563b31ea778daf121cc3a5fa&quot;&gt;Emotion API&lt;/a&gt; to capture the emotions from the user&amp;#39;s face. There is a hidden camera (&lt;a href=&quot;https://github.com/lwansbrough/react-native-camera&quot;&gt;react-native-camera&lt;/a&gt;) capturing user&amp;#39;s face every 3-5 seconds and return the scores of 8 emotions:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;faceRectangle&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;left&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;488&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;top&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;263&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;width&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;148&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;height&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;148&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;scores&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;anger&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;9.075572e-13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;contempt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;7.048959e-9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;disgust&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.02152783e-11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;fear&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.778957e-14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;happiness&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.9999999&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;neutral&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.31694478e-7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;sadness&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;6.04054263e-12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;surprise&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;3.92249462e-11&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We gather the data for 2 purposes:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Granny changes her face in respond to the user&amp;#39;s emotion.&lt;/li&gt;
&lt;li&gt;The cumulated emotion distribution will be kept as the emotion report.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Some problems encountered and solutions:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;When calling the API with &lt;code&gt;Content-Type&lt;/code&gt; specifying &lt;code&gt;application/octet&lt;/code&gt;, the required body format remains confusing (see &lt;a href=&quot;http://stackoverflow.com/questions/37900554/microsoft-cognitive-services-uploading-image&quot;&gt;here&lt;/a&gt;). Eventually &lt;a href=&quot;https://github.com/wkh237/react-native-fetch-blob&quot;&gt;react-native-fetch-blob&lt;/a&gt; saved my life. Here&amp;#39;s the code snippet:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;RNFetchBlob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'POST'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'https://westus.api.cognitive.microsoft.com/emotion/v1.0/recognize'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;'Ocp-Apim-Subscription-Key'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;'Content-Type'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'application/octet-stream'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(...)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;JUST.REMEMBER.TO.TURN.ON.YOUR.PHONE&amp;#39;S.INTERNET.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;User Speech End Detection&lt;/h2&gt;

&lt;p&gt;Although we could simply make up a script and set timeout to continue to the next question for demo purpose, I strongly felt that it would not be amazing at all if everything were fake. Hence I came up with a detection method to detect when the user finishes speaking:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Record background sound amplitude (averaging the first 10 second sampling data).&lt;/li&gt;
&lt;li&gt;Retrieve the audio stream every 1 second, look for 3 consecutive seconds when the amplitude is less than the background (with some scaling).&lt;/li&gt;
&lt;li&gt;If so, go to next question.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The first problem is that we couldn&amp;#39;t find a package that fit our need to retrieve the audio stream and the amplitudes. We decided to use &lt;a href=&quot;https://github.com/jsierles/react-native-audio&quot;&gt;react-native-audio&lt;/a&gt; and start audio recording while saving the file to &lt;code&gt;/dev/null&lt;/code&gt;. We can now register a listener for &lt;code&gt;onProgress&lt;/code&gt;, which triggers the callback about every 1 second. The only field returned is &lt;code&gt;currentTime&lt;/code&gt; though, so we modified the package itself to actually return &lt;code&gt;maxAmplitude&lt;/code&gt; as well (see &lt;a href=&quot;https://github.com/pyliaorachel/granny&quot;&gt;github&lt;/a&gt; for the line of code I added. Boom! It&amp;#39;s working!&lt;/p&gt;

&lt;p&gt;Another problem is that &lt;a href=&quot;https://github.com/jsierles/react-native-audio/issues/111&quot;&gt;&lt;code&gt;onProgress&lt;/code&gt; seems not well supported on Android devices&lt;/a&gt;. Use &lt;code&gt;DeviceEventEmitter&lt;/code&gt; instead.&lt;/p&gt;

&lt;p&gt;Lastly, remember to turn off the camera&amp;#39;s capture sounds!&lt;/p&gt;

&lt;h4&gt;Some Mysterious Problems (and Probably Solutions)&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Some mysterious sound is coming out every 2-6 seconds when the user is talking, and I am not quite sure which of the packages causes this. This makes detecting whether the user has finished speaking or not troublesome because the noise produces quite a high amplitude. I doubt it to be caused by react-native-camera, but no evidence so far, and the problem remains unsolved.&lt;/li&gt;
&lt;li&gt;According to &lt;a href=&quot;https://github.com/facebook/react-native/issues/2481&quot;&gt;this&lt;/a&gt;, no dynamic strings are allowed in &lt;code&gt;Image&lt;/code&gt; source. Require all the images first and alternate between them.&lt;/li&gt;
&lt;li&gt;When I was importing and using color constants (in &lt;code&gt;src/utils/colors.js&lt;/code&gt;), &lt;code&gt;Object.keys(colors)&lt;/code&gt; also includes a &lt;code&gt;default&lt;/code&gt; field. Don&amp;#39;t know how to avoid this, so I simply discarded it.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;Other Notes&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;After uninstalling packages, remember to unlink all references to them everywhere in your code!&lt;/li&gt;
&lt;li&gt;Animations look slow in debugging mode, so don&amp;#39;t panic, it is better than you thought.&lt;/li&gt;
&lt;li&gt;Learning Android &lt;strong&gt;release build&lt;/strong&gt; is awful! XCode requires only 1 press of button... See &lt;a href=&quot;https://github.com/shyjal/reactnative-android-production&quot;&gt;this tutorial&lt;/a&gt; and try to install the release built app. If you have your debug app (or previous version of released app) on your phone, remember to uninstall it by running &lt;code&gt;adb uninstall [package name]&lt;/code&gt; first (see &lt;a href=&quot;http://stackoverflow.com/questions/26794862/failure-install-failed-update-incompatible-even-if-app-appears-to-not-be-insta&quot;&gt;this&lt;/a&gt;)! For example, my case would be &lt;code&gt;adb uninstall com.granny&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Mon, 23 Jan 2017 00:00:00 +0800</pubDate>
        <link>/project/app/2017/01/23/granny.html</link>
        <guid isPermaLink="true">/project/app/2017/01/23/granny.html</guid>
        
        <category>react-native</category>
        
        <category>azure</category>
        
        <category>emotion-api</category>
        
        
        <category>Project</category>
        
        <category>App</category>
        
      </item>
    
      <item>
        <title>Battleship AI</title>
        <description>&lt;p align=&quot;center&quot;&gt;&lt;img width=&quot;600px&quot; height=&quot;300px&quot; src=&quot;http://vignette4.wikia.nocookie.net/habbo/images/9/9d/Battleship_Game.png/revision/latest?cb=20120731170300&amp;path-prefix=en&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/pyliaorachel/battleship-ai&quot;&gt;Battleship&lt;/a&gt; is an AI project for identifying battleships hidden in the map given the information of how many targets there are in each row and column.&lt;/p&gt;

&lt;!--more--&gt;

&lt;hr&gt;

&lt;h2&gt;Battleship Introduction&lt;/h2&gt;

&lt;p&gt;A &lt;strong&gt;Battleship Puzzle&lt;/strong&gt; is a board of size &lt;code&gt;n * n&lt;/code&gt;, with numbers along each row and column indicating the number of grids in this row or column that is occupied by a ship. &lt;/p&gt;

&lt;p&gt;The number of ships of each size is given. Find a placement of the given battleships in the board that matches the number along the columns and rows.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;# Sample Problem    # Input

  1 3 2 2             ships = [0,1,2,1]       // 1 ship of size 1, 2 ships of size 2, etc.
2 ? ? ? ?             row_targets = [2,1,2,3] // 2 ships occupy row 0, 1 ship occupies row 1, etc.
1 ? ? ? ?             col_targets = [1,3,2,2] // 1 ship occupies column 0, 3 ships occupy row 2, etc.
2 ? ? ? ?
3 ? ? ? ?

# Sample Solution

0 0 2 2              # 2 2 represents a ship of size 2 in left-right direction
0 2 0 0
0 2 0 1
3 3 3 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In this project, the problem is modeled into a &lt;a href=&quot;https://en.wikipedia.org/wiki/Constraint_satisfaction_problem&quot;&gt;Constraint Satisfaction Problem (CSP)&lt;/a&gt;, which is solved by the framework provided in class. How do we design the CSP model to suit the problems&amp;#39; need?&lt;/p&gt;

&lt;p&gt;We came up with 3 models, each having its advantages and limitations. Below, how we came up with the models will be described; for more details, e.g. how the state variables/variable domains/constraints are defined, they are well-written in our &lt;a href=&quot;https://github.com/pyliaorachel/battleship-ai/blob/master/csc384-project.pdf&quot;&gt;report&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;CSP Models&lt;/h2&gt;

&lt;h4&gt;Model 2 - Pure CSP&lt;/h4&gt;

&lt;p&gt;Let me present model 2 first, since this was the first one we came up with. The thought was pretty naive - model each grid on board into a variable, where the variable domain values are integers of any valid ship length. Running the framework should solve the problem well.&lt;/p&gt;

&lt;p&gt;A serious problem came up: it was not trivial to separate between ships of the same size in contact with each other. For example:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;0 0 3 0
3 3 3 3
0 0 3 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;is not valid. How to tell though?&lt;/p&gt;

&lt;p&gt;We decided to make the domain value look like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;(ship_id,ship_length) e.g. (0,3) =&amp;gt; the 0th ship of size 3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;to uniquely identify each ship of the same length. Now the separation problem could be solved.&lt;/p&gt;

&lt;p&gt;Some other limitations:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;When creating constraints, the constraint scope includes &lt;strong&gt;all variables on board&lt;/strong&gt; to check if ship numbers are consistent with the given input. The large domain hurts the constraint construction time.&lt;/li&gt;
&lt;li&gt;The method is totally not clever - it wastes a lot of time assigning values to neighbor variables that can&amp;#39;t even form a complete ship!&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Hence model 1 is created.&lt;/p&gt;

&lt;h4&gt;Model 1 - CSP + Custom Backtracking Search&lt;/h4&gt;

&lt;p&gt;The key point is we want to assign &lt;strong&gt;a ship&lt;/strong&gt; at a time instead of &lt;strong&gt;a grid&lt;/strong&gt;. To achieve this, we had to modify the framework a bit and design our own backtracking search (see &lt;a href=&quot;https://github.com/pyliaorachel/battleship-ai/blob/master/battleship_BT.py&quot;&gt;battleship_BT.py&lt;/a&gt;). The backtrack steps are as follows:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;Step 1. Assign a variable (say grid x) with ship size l. The assignments are in top-left to bottom-right direction.
Step 2. Assign all variables starting from grid x towards the right until a ship of size l is formed.
Step 3. Keep going until failure and backtrack to grid x.
Step 4. Assign all variables starting from grid x towards the bottom until a ship of size l is formed.
Step 5. Keep going. If backtrack, assign a ship of different sizes (depends on value ordering heuristic).
Step 6. Valid assignment found. Solved.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This approach significantly sped up our program by avoiding pointless assignments during progress. The construction time was also reduced since we don&amp;#39;t need a constraint with scope including all variables now! But some drawbacks can still be seen:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Writing the customized backtrack search was error-prone. We had to manually assign values to the required variables, reverse the assignments, change directions, check boundaries, etc.&lt;/li&gt;
&lt;li&gt;Variable ordering heuristics seem to have no power in this model, since the assignment must go in a certain direction, in our case, from top-left to bottom-right.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;Model 3 - Pure CSP&lt;/h4&gt;

&lt;p&gt;Although we were pretty happy with the performance of model 2, we still wanted to have a model that was pure CSP (i.e. didn&amp;#39;t require modifying the CSP framework) but was more clever than model 2.&lt;/p&gt;

&lt;p&gt;We made some changes in the variable definition - a variable now represents &lt;strong&gt;a ship&lt;/strong&gt; instead of &lt;strong&gt;a grid&lt;/strong&gt; in hope of avoiding the useless assignment problem. Multiple ship variables of different sizes and in different directions might overlap on the same grid, and the number of variables significantly grew.&lt;/p&gt;

&lt;p&gt;The result was that since the space requirement grew, we got stuck in model construction! The performance in backtracking was believed to be improved though.&lt;/p&gt;

&lt;h3&gt;Comparison&lt;/h3&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align: center&quot;&gt;&lt;/th&gt;
&lt;th style=&quot;text-align: left&quot;&gt;Model 1&lt;/th&gt;
&lt;th style=&quot;text-align: left&quot;&gt;Model 2&lt;/th&gt;
&lt;th style=&quot;text-align: left&quot;&gt;Model 3&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: center&quot;&gt;Type&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;CSP + Search&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;CSP&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;CSP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: center&quot;&gt;Runtime&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;Fast. Fast fast.&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;Slow. Stuck in BT search.&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;Slow. Stuck in model construction.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: center&quot;&gt;Space&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;Exponential.&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;Exponential. Also exponentially larger than model 1.&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;Exponential. Even larger than model 2.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: center&quot;&gt;Advantage&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;Efficiency.&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;Easy to implement.&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;Avoids useless assignments as in model 2 and improves efficiency.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: center&quot;&gt;Drawback&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;1. Customizing BT search is error-prone.&lt;br /&gt;2. Variable ordering heuristics are useless.&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;1. Takes time finding satisfying tuples for each constraint due to large scope and domain.&lt;br /&gt;2. Many useless assignments since neighbor variable assignments may not even form a legal ship.&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;Takes more time than model 2 forming satisfying tuples for each constraint due to big scope and many constraints.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;h2&gt;Playing with Battleship-AI&lt;/h2&gt;

&lt;p&gt;Feel free to follow the instructions &lt;a href=&quot;https://github.com/pyliaorachel/battleship-ai&quot;&gt;here&lt;/a&gt; and find out the battleship placements of your peer!&lt;/p&gt;
</description>
        <pubDate>Tue, 06 Dec 2016 00:00:00 +0800</pubDate>
        <link>/project/ai/2016/12/06/battleship-ai.html</link>
        <guid isPermaLink="true">/project/ai/2016/12/06/battleship-ai.html</guid>
        
        <category>csp</category>
        
        <category>ai</category>
        
        
        <category>Project</category>
        
        <category>AI</category>
        
      </item>
    
      <item>
        <title>Serverside Swift</title>
        <description>&lt;h2&gt;Content&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Basics

&lt;ol&gt;
&lt;li&gt;Terminologies&lt;/li&gt;
&lt;li&gt;Commands&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;Docker Images

&lt;ol&gt;
&lt;li&gt;Image Types&lt;/li&gt;
&lt;li&gt;Create Images&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;Docker Compose

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Run Application&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;!--more--&gt;

&lt;hr&gt;

&lt;h2&gt;Create Swift Package&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;swift package init&lt;/code&gt;&lt;br&gt;
&lt;code&gt;swift build&lt;/code&gt;&lt;br&gt;
&lt;code&gt;swift package generate-xcodeproj&lt;/code&gt;&lt;/p&gt;

&lt;h4&gt;Package.swift&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;name: name of package
targets: binary files
dependencies: [
  .Package(url: &quot;url&quot;, majorVersion: version, minor: version)
]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Swift Basics&lt;/h2&gt;

&lt;h5&gt;Strongly-Typed&lt;/h5&gt;

&lt;p&gt;&lt;code&gt;var myVar = &amp;quot;string&amp;quot;&lt;/code&gt; or &lt;code&gt;var myVar: String&lt;/code&gt;&lt;br&gt;
&lt;code&gt;var myInt = Int(myVar)&lt;/code&gt; or &lt;code&gt;var myInt = (myVar as NSString).integerValue&lt;/code&gt;  &lt;/p&gt;

&lt;h5&gt;Constants &amp;amp; Variables&lt;/h5&gt;

&lt;p&gt;&lt;code&gt;let const = value&lt;/code&gt; vs &lt;code&gt;var const = value&lt;/code&gt;&lt;/p&gt;

&lt;h5&gt;Class&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-swift&quot; data-lang=&quot;swift&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;MyClass&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;myName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;myFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// unnamed parameter&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hello &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;myName&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;myStaticFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;default&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// named parameter&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hello &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;myName&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;MyClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;myFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;MyClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;myStaticFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Building Swift Applicstions&lt;/h2&gt;

&lt;h4&gt;Targets&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Library&lt;/li&gt;
&lt;li&gt;Executable (terminal-like icon)&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;Settings&lt;/h4&gt;

&lt;p&gt;Target &amp;gt; Edit Scheme &amp;gt; Run &amp;gt; Options &amp;gt; Use custom working directory: [project-directory]&lt;/p&gt;
</description>
        <pubDate>Thu, 24 Nov 2016 00:00:00 +0800</pubDate>
        <link>/blog/notes/swift/2016/11/24/serverside-swift.html</link>
        <guid isPermaLink="true">/blog/notes/swift/2016/11/24/serverside-swift.html</guid>
        
        <category>swift</category>
        
        
        <category>Blog</category>
        
        <category>Notes</category>
        
        <category>Swift</category>
        
      </item>
    
      <item>
        <title>ReactJS Data Visualization Libraries in a Hack Night</title>
        <description>&lt;p&gt;At the hackathon last night, we were given a bunch of advertising data to work with so that data can be more understandable. I experimented with several React data visualization libraries, out of which I couldn&amp;#39;t really find a perfect one. I will share the experience working with the libraries, and what pros and cons I found.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;em&gt;All versions of implementation and final demo can be found &lt;a href=&quot;https://github.com/pyliaorachel/hack-with-ix/tree/master&quot;&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Basically, below is just some subjective observations in a hack night, so there may be many mistakes in the description. I do appreciate any corrections!&lt;/p&gt;

&lt;h3&gt;react-chartjs&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/reactjs/react-chartjs&quot;&gt;react-chartjs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/pyliaorachel/hack-with-ix/blob/demo/ui/src/assets/react-chartjs.png?raw=true&quot; alt=&quot;react-chartjs&quot;&gt;&lt;/p&gt;

&lt;p&gt;The main problem is in its documentation, which seems to be fancy but are actually including too many information which is loosely distributed throughout the entire doc.&lt;/p&gt;

&lt;p&gt;Especially the &lt;code&gt;options&lt;/code&gt;, which determines the settings, style, scale, and all other important stuffs, are really messy and not working as expected. I searched through many examples but simply cannot get rid of the gray color in my chart. Discarded it because nobody wants such a chart with not-very-appealing look.&lt;/p&gt;

&lt;p&gt;But I really like that I can work out a formatted x-axis display value. This should be a basic functionality, but surprisingly not many libraries get this well.&lt;/p&gt;

&lt;h5&gt;Data Parsing&lt;/h5&gt;

&lt;p&gt;Use &lt;code&gt;labels&lt;/code&gt; as x-axis or categories, &lt;code&gt;data&lt;/code&gt; in &lt;code&gt;datasets&lt;/code&gt; as y-axis or values.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;chartData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;datasets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// other options&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}],&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Red'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Blue'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Purple'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Yellow'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;Pros&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;labels&lt;/code&gt; to represent x-axis, which is great that I can customize&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;Cons&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Not providing a clear react version documentation but uses &lt;a href=&quot;http://www.chartjs.org/docs/&quot;&gt;chartjs&lt;/a&gt;&amp;#39;s instead, which I don&amp;#39;t really like because of the extensive information&lt;/li&gt;
&lt;li&gt;Demonstration page not clear with how the data look like&lt;/li&gt;
&lt;li&gt;Don&amp;#39;t know why, but some of the &lt;code&gt;options&lt;/code&gt; are not working, and I can&amp;#39;t do the styling because of this&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;react-d3&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/esbullington/react-d3&quot;&gt;react-d3&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/pyliaorachel/hack-with-ix/blob/demo/ui/src/assets/react-d3.png?raw=true&quot; alt=&quot;react-d3&quot;&gt;&lt;/p&gt;

&lt;p&gt;The main problem is in data parsing.&lt;/p&gt;

&lt;p&gt;You need to go through the whole data and explicitly parse out the &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; in a &lt;code&gt;values&lt;/code&gt; array, which is most commonly done by simply setting the &lt;code&gt;field&lt;/code&gt; key in other libraries. This can be helpful if you want even more flexibility, but this is seldom the case.&lt;/p&gt;

&lt;p&gt;And again, where can I easily find the styling instructions? Miserable.&lt;/p&gt;

&lt;h5&gt;Data Parsing&lt;/h5&gt;

&lt;p&gt;Parse points as &lt;code&gt;x-y&lt;/code&gt; pairs in a &lt;code&gt;values&lt;/code&gt; array for coordinate charts.&lt;br&gt;
Parse categories as &lt;code&gt;label&lt;/code&gt; and values as &lt;code&gt;value&lt;/code&gt; for category charts.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lineData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;series1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;strokeWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;strokeDashArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;5,5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;....&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;series2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;70&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;82&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;76&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;82&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pieData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Margarita'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;20.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'John'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;55.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Tim'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;25.0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;Pros&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Nice demonstration page, simple and clear&lt;/li&gt;
&lt;li&gt;Parse the x/y coordinates ourselves, which can be more flexible (but also a con)&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;Cons&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;The styling instructions are somehow hidden deep in the documentation&lt;/li&gt;
&lt;li&gt;Need to parse the x/y coordinates ourselves, which is more tedious (but also a pro)&lt;/li&gt;
&lt;li&gt;Customize displayed x-/y-axis is not flexible enough (only found time on x-axis to be formattable, but the instructions are not clear)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;react-d3-basic&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/react-d3/react-d3-basic&quot;&gt;react-d3-basic&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/pyliaorachel/hack-with-ix/blob/demo/ui/src/assets/react-d3-basic.png?raw=true&quot; alt=&quot;react-d3-basic&quot;&gt;&lt;/p&gt;

&lt;p&gt;To be honest, I choose this as the final working version simply because I KNOW HOW TO STYLE IT. The documentation is the nice ever.&lt;/p&gt;

&lt;p&gt;The main problem is still in data parsing and non-customizable x-axis display value.&lt;/p&gt;

&lt;p&gt;Although the doc is nice, but the data are not especially shown, so I have to look for the &lt;code&gt;.csv&lt;/code&gt; files on github and found some missing. Not a big problem though, but a problem to hackers in hackathons.&lt;/p&gt;

&lt;p&gt;For the x-axis display values, it provides an &lt;code&gt;x&lt;/code&gt; function for you to map. But they are not actually intended for you to map displayed values but only actual values. So if you want the function to return a string representation of a date, it fails because only number values are allowed.&lt;/p&gt;

&lt;p&gt;And the bar-type charts yelled to me miserable errors for a missing &lt;code&gt;bandwidth&lt;/code&gt; function deep in the &lt;code&gt;chartjs&lt;/code&gt; package, probably because I used the bar charts to build some streaming charts. So be careful when implementing them.&lt;/p&gt;

&lt;h5&gt;Data Parsing&lt;/h5&gt;

&lt;p&gt;Use &lt;code&gt;field&lt;/code&gt; for the y-axis filter. Argument in &lt;code&gt;x&lt;/code&gt; function is the data object itself, so be sure the datum is parsed in a way that have both &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; values.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;// sample data
[
  {
    total: 1,
    incineration: 1,
    garbageBury: 1,
    month: 1,
  },
  {
    total: 2,
    incineration: 2,
    garbageBury: 2,
    month: 2,
  },
  ...
]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;chartSeries&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;chartSeries&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'total'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Total'&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'incineration'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Incineration'&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'garbageBury'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Garbage Bury'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;area&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;parseDate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;Pros&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Nice documentation, simple and clear&lt;/li&gt;
&lt;li&gt;Easy to style&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;Cons&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Need more examples on how to parse the data for different charts&lt;/li&gt;
&lt;li&gt;Customized x-/y-axis is not flexible enough&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 21 Nov 2016 00:00:00 +0800</pubDate>
        <link>/blog/tech/reactjs/2016/11/21/reactjs-data-visualization-libraries-in-a-hack-night.html</link>
        <guid isPermaLink="true">/blog/tech/reactjs/2016/11/21/reactjs-data-visualization-libraries-in-a-hack-night.html</guid>
        
        <category>react</category>
        
        <category>react-chartjs</category>
        
        <category>react-d3</category>
        
        <category>react-d3-basic</category>
        
        <category>data visualization</category>
        
        
        <category>Blog</category>
        
        <category>Tech</category>
        
        <category>ReactJS</category>
        
      </item>
    
      <item>
        <title>Docker Beginner</title>
        <description>&lt;h2&gt;Content&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Basics

&lt;ol&gt;
&lt;li&gt;Terminologies&lt;/li&gt;
&lt;li&gt;Commands&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;Docker Images

&lt;ol&gt;
&lt;li&gt;Image Types&lt;/li&gt;
&lt;li&gt;Create Images&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;Docker Compose

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Run Application&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;!--more--&gt;

&lt;hr&gt;

&lt;h2&gt;Basics&lt;/h2&gt;

&lt;h3&gt;Terminologies&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Images&lt;/strong&gt;: the &lt;strong&gt;file system and configuration of an application&lt;/strong&gt; used to &lt;strong&gt;create containers&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;docker inspect image-name&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Containers&lt;/strong&gt;: &lt;strong&gt;running instances of Docker images&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Run the actual applications; includes an application and all of its dependencies &lt;/li&gt;
&lt;li&gt;Share the kernel with other containers&lt;/li&gt;
&lt;li&gt;Run as an isolated process in user space on the host OS &lt;/li&gt;
&lt;li&gt;A container created by &lt;code&gt;docker run&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Docker daemon&lt;/strong&gt;: the background service running on the host that &lt;strong&gt;manages building, running and distributing Docker containers&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Docker client&lt;/strong&gt;: the command line tool that allows the user to interact with the Docker daemon&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Docker Hub&lt;/strong&gt;: a registry of Docker images&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Commands&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;docker login&lt;/code&gt; login to docker hub&lt;br&gt;
&lt;code&gt;docker ps&lt;/code&gt; list current running containers&lt;br&gt;
    - &lt;code&gt;docker ps -a&lt;/code&gt; list containers ran before&lt;br&gt;
&lt;code&gt;docker images&lt;/code&gt; list images&lt;br&gt;
&lt;code&gt;docker pull image-name&lt;/code&gt; pull image from hub&lt;br&gt;
    - &lt;code&gt;image-name:version&lt;/code&gt; specify version e.g. &lt;code&gt;ubuntu:12.04&lt;/code&gt;, &lt;code&gt;ubuntu:latest&lt;/code&gt;
&lt;code&gt;docker push USERNAME/image-name&lt;/code&gt; push image to hub&lt;br&gt;
&lt;code&gt;docker run image-name [command]&lt;/code&gt; executes commands in container&lt;br&gt;
    - &lt;code&gt;docker pull&lt;/code&gt; if image not exists
    - &lt;code&gt;-it&lt;/code&gt; iterative mode; will not exit container&lt;br&gt;
    - &lt;code&gt;-d&lt;/code&gt; detached mode; detach running container from terminal
    - &lt;code&gt;-P&lt;/code&gt; publish all the exposed container ports to random ports on the Docker host
    - &lt;code&gt;-p&lt;/code&gt; specify port number e.g. &lt;code&gt;-p 8888:80&lt;/code&gt; link 8888 on container to 80 on host
    - &lt;code&gt;-e&lt;/code&gt; pass environment variables
        - e.g. &lt;code&gt;-e AUTHOR=&amp;quot;name&amp;quot;&lt;/code&gt;
    - &lt;code&gt;--name&lt;/code&gt; specify container name
&lt;code&gt;docker stop container-name&lt;/code&gt; stop running container&lt;br&gt;
&lt;code&gt;docker rm container1-name container2-name ...&lt;/code&gt; remove containers&lt;br&gt;
    - &lt;code&gt;-f&lt;/code&gt; remove running containers 
&lt;code&gt;docker port container-name&lt;/code&gt; port of running container
&lt;code&gt;docker search image-name&lt;/code&gt; search for images  &lt;/p&gt;

&lt;h2&gt;Docker Images&lt;/h2&gt;

&lt;h3&gt;Image Types&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Base images v.s. child images

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Base image&lt;/strong&gt;: no parent images, usually images with an OS&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Child image&lt;/strong&gt;: build on base images and add additional functionality&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Official images v.s. user images

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Official image&lt;/strong&gt;: no prefix&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;User image&lt;/strong&gt;: &lt;code&gt;user/image-name&lt;/code&gt;; based on &lt;em&gt;base image&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Create Images&lt;/h3&gt;

&lt;h4&gt;Steps&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Create an app&lt;/li&gt;
&lt;li&gt;Write a Dockerfile&lt;/li&gt;
&lt;li&gt;Build the image&lt;/li&gt;
&lt;li&gt;Run your image&lt;/li&gt;
&lt;li&gt;Dockerfile commands summary&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;Dockerfile&lt;/h4&gt;

&lt;p&gt;List of commands the Docker daemon calls while creating an image.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Base Docker image to run from&lt;/li&gt;
&lt;li&gt;Location of your project code&lt;/li&gt;
&lt;li&gt;Dependencies&lt;/li&gt;
&lt;li&gt;Commands to run at start-up&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;# specify base image
FROM alpine:latest # username/imagename:version

# copying files &amp;amp; installing dependencies
RUN apk add --update py-pip # install Python pip package to the alpine linux distribution # RUN add new layers

# install required Python packages &amp;amp; copy files
COPY requirements.txt /usr/src/app/
RUN pip install --no-cache-dir -r /usr/src/app/requirements.txt
COPY app.py /usr/src/app/
COPY templates/index.html /usr/src/app/templates/

# specify port number
EXPOSE 5000

# run application; one CMD per Dockerfile/Image
CMD [&quot;python&quot;, &quot;/usr/src/app/app.py&quot;] # which command to run by default when started
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Build Images&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;docker build -t &amp;lt;USERNAME&amp;gt;/appname [path-to-dockerfile]&lt;/code&gt;&lt;br&gt;
    - &lt;code&gt;-t&lt;/code&gt; optional tag name&lt;/p&gt;

&lt;h2&gt;Docker Compose&lt;/h2&gt;

&lt;p&gt;Define &amp;amp; run multi-container apps.&lt;/p&gt;

&lt;h3&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Describe containers &amp;amp; volumes you want.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;s&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;2&quot;&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;vote&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;./vote&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;python app.py&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
     &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;./vote:/app&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;5000:80&quot;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;networks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;front-tier&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;back-tier&lt;/span&gt;

  &lt;span class=&quot;s&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;./result&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;nodemon --debug server.js&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;./result:/app&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;5001:80&quot;&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;5858:5858&quot;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;networks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;front-tier&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;back-tier&lt;/span&gt;

  &lt;span class=&quot;s&quot;&gt;worker&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;./worker&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;networks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;back-tier&lt;/span&gt;

  &lt;span class=&quot;s&quot;&gt;redis&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;redis:alpine&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;container_name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;redis&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;6379&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;networks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;back-tier&lt;/span&gt;

  &lt;span class=&quot;s&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;postgres:9.4&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;container_name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;db&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;db-data:/var/lib/postgresql/data&quot;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;networks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;back-tier&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;db-data&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;networks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;front-tier&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;back-tier&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Networks&lt;/strong&gt;: containers can communicate with others in the same network&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Run Application&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;docker-compose up -d&lt;/code&gt; start all containers in &lt;code&gt;docker-compose.yml&lt;/code&gt;&lt;br&gt;
    - &lt;code&gt;-d&lt;/code&gt; run in daemon mode in background&lt;/p&gt;

&lt;p&gt;Then build &amp;amp; push to hub.&lt;/p&gt;
</description>
        <pubDate>Thu, 17 Nov 2016 00:00:00 +0800</pubDate>
        <link>/blog/notes/docker/2016/11/17/docker-beginner.html</link>
        <guid isPermaLink="true">/blog/notes/docker/2016/11/17/docker-beginner.html</guid>
        
        <category>docker</category>
        
        
        <category>Blog</category>
        
        <category>Notes</category>
        
        <category>Docker</category>
        
      </item>
    
      <item>
        <title>Shortest Path Algorithms</title>
        <description>&lt;h2&gt;Content&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Dijkstra&amp;#39;s Algorithm&lt;/li&gt;
&lt;li&gt;Bellman-Ford Algorithm&lt;/li&gt;
&lt;li&gt;Floyd–Warshall Algorithm&lt;/li&gt;
&lt;li&gt;Shortest Paths in DAGs&lt;/li&gt;
&lt;/ol&gt;

&lt;!--more--&gt;

&lt;hr&gt;

&lt;h2&gt;Dijkstra&amp;#39;s Algorithm&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.geeksforgeeks.org/greedy-algorithms-set-6-dijkstras-shortest-path-algorithm/&quot;&gt;GeeksForGeeks&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm&quot;&gt;Wiki&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;Features&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Only handles positive edges&lt;/li&gt;
&lt;li&gt;Need &lt;strong&gt;global information&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Similar to &lt;a href=&quot;http://www.geeksforgeeks.org/greedy-algorithms-set-5-prims-minimum-spanning-tree-mst-2/&quot;&gt;Prim&amp;#39;s&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Implementation&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;Dijkstra(G, l, s):
# Input: Graph G = (V, E), directed or undirected;
         positive edge lengths {le : e ∈ E}; vertex s ∈ V
# Output: For all vertices u reachable from s, dist(u) is set to the distance from s to u

    for all u ∈ V : 
        dist(u) = ∞
        prev(u) = nil 
    dist(s) = 0

    H = makequeue(V) # using dist-values as keys 
    while H is not empty:
        u = deletemin(H) # = |V| times
        for all edges (u, v) ∈ E:
            if dist(v) &amp;gt; dist(u) + l(u, v): 
                dist(v) = dist(u) + l(u, v) 
                prev(v) = u 
                decreasekey(H, v) # = |V| + |E| times
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;# Alternative

Initialize dist(s) to 0, other dist(·) values to ∞ 
R = { } # the &quot;known region&quot;
while R != V:
    Pick the node v !∈ R with smallest dist(·) 
    Add v to R
    for all edges (v, z) ∈ E:
        if dist(z) &amp;gt; dist(v) + l(v, z): 
            dist(z) = dist(v) + l(v, z)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Runtime&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Binary heap: &lt;code&gt;O(|E|log|V|)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Array: &lt;code&gt;O(|V|^2)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Bellman-Ford Algorithm&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.geeksforgeeks.org/dynamic-programming-set-23-bellman-ford-algorithm/&quot;&gt;GeeksForGeeks&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;https://en.wikipedia.org/wiki/Bellman%E2%80%93Ford_algorithm&quot;&gt;Wiki&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;Features&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Handles &lt;strong&gt;negative edges&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Only need &lt;strong&gt;local information&lt;/strong&gt; &lt;a href=&quot;http://stackoverflow.com/questions/16273092/difference-between-bellman-ford-and-dijkstras-algorithm&quot;&gt;StackOverflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Implementation&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;Bellman-Ford(G, l, s):
# Input: Directed graph G = (V, E);
         edge lengths {le : e ∈ E} with no negative cycles; 
         vertex s ∈ V
# Output: For all vertices u reachable from s, dist(u) is set to the distance from s to u

    for all u ∈ V : 
        dist(u) = ∞
        prev(u) = nil

    dist(s) = 0
    repeat |V| − 1 times:
        for all e ∈ E: 
            update(e)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Runtime&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;O(|V||E|)&lt;/code&gt;&lt;/p&gt;

&lt;h4&gt;Negative Cycle Detection&lt;/h4&gt;

&lt;p&gt;After &lt;code&gt;|V|-1&lt;/code&gt; times of iterations, apply 1 extra round. If some &lt;code&gt;dist&lt;/code&gt; reduced, then there is negative cycle.&lt;/p&gt;

&lt;h2&gt;Floyd-Warshal Algorithm&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.geeksforgeeks.org/dynamic-programming-set-16-floyd-warshall-algorithm/&quot;&gt;GeeksForGeeks&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;https://en.wikipedia.org/wiki/Floyd%E2%80%93Warshall_algorithm&quot;&gt;Wiki&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;Features&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Handles &lt;strong&gt;negative edges&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Find shortest paths between &lt;strong&gt;all pairs of vertices&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;No &lt;strong&gt;negative cycles&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Implementation&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;Floyd-Warshal(G, l, s):

    for all u ∈ V: 
        dist(u,u) = 0
    for all (u,v) ∈ E:
        dist(u,v) = l(u,v)

    for k = 1..|V|:
        for i = 1..|V|:
            for j = 1..|V|:
                if dist(i,j) &amp;gt; dist(i,k) + dist(k,j)
                    dist(i,j) = dist(i,k) + dist(k,j)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Runtime&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;O(|V|^3)&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;Shortest Paths in DAGs&lt;/h2&gt;

&lt;h4&gt;Features&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Vertices appear in &lt;strong&gt;increasing linearized order&lt;/strong&gt; in any paths&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Implementation&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;Dag-shortest-paths(G, l, s):
# Input: DagG = (V,E);
         edge lengths { le: e ∈ E };
         vertex s ∈ V
# Output: For all vertices u reachable from s, dist(u) is set to the distance from s to u

for all u ∈ V: 
    dist(u) = ∞
    prev(u) = nil

dist(s) = 0
Linearize G # DFS
for each u ∈ V, in linearized order:
    for all edges (u, v) ∈ E: 
        update(u, v)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        <pubDate>Mon, 14 Nov 2016 00:00:00 +0800</pubDate>
        <link>/blog/tech/algorithm/2016/11/14/shortest-path-algorithms.html</link>
        <guid isPermaLink="true">/blog/tech/algorithm/2016/11/14/shortest-path-algorithms.html</guid>
        
        <category>dijkstra's</category>
        
        <category>bellman-ford</category>
        
        <category>floyd–warshall</category>
        
        <category>data structure</category>
        
        <category>algorithm</category>
        
        
        <category>Blog</category>
        
        <category>Tech</category>
        
        <category>Algorithm</category>
        
      </item>
    
      <item>
        <title>Data Stucture Notes</title>
        <description>&lt;p&gt;Data stucture notes for coding competitions.&lt;/p&gt;

&lt;h2&gt;Content&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;BST&lt;/li&gt;
&lt;li&gt;Monotone Queue&lt;/li&gt;
&lt;li&gt;Block List&lt;/li&gt;
&lt;li&gt;Merge-Find Set&lt;/li&gt;
&lt;li&gt;Split &amp;amp; Join AVL&lt;/li&gt;
&lt;li&gt;Persistent AVL&lt;/li&gt;
&lt;/ol&gt;

&lt;!--more--&gt;

&lt;hr&gt;

&lt;h2&gt;BST&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;map&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;Dictionary&lt;/li&gt;
&lt;li&gt;Insertion, deletion, searching &lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lower_bound&lt;/code&gt;, &lt;code&gt;upper_bound&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;Find element in range&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://acm.timus.ru/problem.aspx?space=1&amp;amp;num=1613&quot;&gt;For Fans of Statistics&lt;/a&gt;
&lt;a href=&quot;http://poj.org/problem?id=2418&quot;&gt;Hardwood Species&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Monotone Queue&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Basic operations

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;push&lt;/code&gt; in &lt;code&gt;O(1)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pop&lt;/code&gt; in &lt;code&gt;O(1)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;max&lt;/code&gt;/&lt;code&gt;min&lt;/code&gt; in &lt;code&gt;O(1)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;Insert(k):
    while (queue not empty) and (tail element &amp;gt;= k):
        discard tail
    append k to tail

Min():
    return head of queue
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;http://poj.org/problem?id=2823&quot;&gt;Sliding Window&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Block List&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Structure

&lt;ul&gt;
&lt;li&gt;Partition indices into &lt;code&gt;O(sqrt(n))&lt;/code&gt; segments, each of length &lt;code&gt;O(sqrt(n))&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Basic operations

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;insert&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;delete&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Range operation on &lt;code&gt;[i,j]&lt;/code&gt; in &lt;code&gt;O(sqrt(n))&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;Insert(x):
    # invariant: each segment has elements &amp;gt;= L and &amp;lt; 3L; OR only one segment &amp;lt; 3L

    locate segment S # O(sqrt(n))
    brute force insertion on S # O(L)
    if size(S) == 3L:
        evenly split into 2 segments

Delete(x):
    locate segment S # O(sqrt(n))
    brute force deletion on S # O(L)
    if size(S) == L and S has adjacent segment:
        combine 2 segments
        evenly split into 2 segments

# range operation
# change &amp;amp; sum as example

## change [i,j] to x
Change(i, j, x):
    if i == l and j == r: # O(1)
        b = true
        y = x
        s = x * (r - l + 1)
    else: # O(L)
        if b == true:
            set every element in [l,r] to y
            b = false
        set every element in [i,j] to x
        calculate s

## query [i,j]
Query(i, j):
    if i == l and j == r: # O(1)
        return s
    else: # O(L)
        if b == ture:
            set every element in [l,r] to y
            b = false
        set every element in [i,j] to x
        calculate s
        return s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;http://poj.org/problem?id=3580&quot;&gt;SuperMemo&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Merge-Find Set&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Disjoint-set_data_structure&quot;&gt;Wiki&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Structure

&lt;ul&gt;
&lt;li&gt;A ground set &lt;code&gt;S&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;A collection &lt;code&gt;C&lt;/code&gt; of subsets of &lt;code&gt;S&lt;/code&gt; where 2 different elements in &lt;code&gt;C&lt;/code&gt; are disjoint&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Basic operations

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;union&lt;/code&gt;: union 2 subsets&lt;/li&gt;
&lt;li&gt;&lt;code&gt;find&lt;/code&gt;: find the subset a specific elememt is in&lt;/li&gt;
&lt;li&gt;&lt;code&gt;test&lt;/code&gt;: test where 2 elements are in the same subset&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Implementation (linear)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;P: P[i] = parent of i in S
F(P): forest difined by P

Find(x):
    while P[x] != x:
        x = P[x]
    return x # root

Union(x):
    P[Find(x)] = Find(y)

Test(x, y):
    return Find(x) == Find(y)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Implementation (optimized)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;R: rank of element; init R = {0}

Find(x): # path compression
    if P[x] != x:
        P[x] = Find(P[x])
    return x

Union(x): # union by rank
    x' = Find(x)
    y' = Find(y)
    if R[x'] &amp;lt; R[y']:
        P[x'] = y'
    elif R[x'] &amp;gt; R[y']:
        P[y'] = x'
    else:
        P[x'] = y'
        R[y']++
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Extension 1: Maintaining the Difference&lt;/h3&gt;

&lt;p&gt;For each element &lt;code&gt;i&lt;/code&gt;, &lt;code&gt;V[i]&lt;/code&gt; is the underlying unknown integer. Information &lt;code&gt;V[j] - V[i] = k&lt;/code&gt; comes.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Problem

&lt;ol&gt;
&lt;li&gt;Consistent with previously known information?&lt;/li&gt;
&lt;li&gt;If consistent, record the information&lt;/li&gt;
&lt;li&gt;&lt;code&gt;V[j] - V[i]&lt;/code&gt; uniquely determined?&lt;/li&gt;
&lt;li&gt;If unique, answer the value&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;D: difference; D[i] = V[i] - V[P[i]]; init D = {0}

Find(x):
    if P[x] != x:
        (P[x],d) = Find(P[x])
        D[x] += d
    return (x, D[x])

Union(i, j, k): # V[i] - V[j] = k
    (x',D[i]) = Find(i)
    (y',D[j]) = Find(j)
    if R[x'] &amp;lt; R[y']:
        P[x'] = y'
        D[x'] = D[j] - D[i] - k
    elif R[x'] &amp;gt; R[y']:
        P[y'] = x'
        D[y'] = D[i] - D[j] - k
    else:
        P[x'] = y'
        D[x'] = D[j] - D[i] - k
        R[y']++r

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Apply the data structure&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Provided &lt;code&gt;V[j] - V[i] = k&lt;/code&gt;: &lt;code&gt;Union(i,j,k)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Answer &lt;code&gt;V[j] - V[i]&lt;/code&gt;: if &lt;code&gt;Test(i,j)&lt;/code&gt; then &lt;code&gt;return D[j] - D[i]&lt;/code&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://acm.hdu.edu.cn/showproblem.php?pid=3038&quot;&gt;How Many Answers Are Wrong&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Extension 2: XOR&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://acm.hdu.edu.cn/showproblem.php?pid=3234&quot;&gt;Exclusive-OR&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Split &amp;amp; Join AVL&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Basic operations

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;join&lt;/code&gt;: &lt;code&gt;T1&lt;/code&gt; &amp;amp; &lt;code&gt;T2&lt;/code&gt; are AVL trees, and any keyword in &lt;code&gt;T1&lt;/code&gt; is less than any keyword in &lt;code&gt;T2&lt;/code&gt;. Return a union in &lt;code&gt;O(|h(T1)-h(T2)|)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;split&lt;/code&gt;: return &lt;code&gt;T1&lt;/code&gt; with keywords less than &lt;code&gt;k&lt;/code&gt; &amp;amp; &lt;code&gt;T2&lt;/code&gt; with keywords larger than &lt;code&gt;k&lt;/code&gt; in &lt;code&gt;O(h(T))&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;insert&lt;/code&gt;: &lt;code&gt;split(T,x)&lt;/code&gt;: return &lt;code&gt;join(T1,{x},T2)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;delete&lt;/code&gt;: &lt;code&gt;split(T,x)&lt;/code&gt;: return &lt;code&gt;join(T1,T2)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;intervalSelection&lt;/code&gt;: return &lt;code&gt;T&lt;/code&gt; with elements &lt;code&gt;k1 &amp;lt;= e &amp;lt;= k2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;intervalCut&lt;/code&gt;: cut out interval&lt;/li&gt;
&lt;li&gt;&lt;code&gt;linkAndCut&lt;/code&gt;: &lt;code&gt;intervalCut&lt;/code&gt; and link to another place&lt;/li&gt;
&lt;li&gt;other statistic maintainenance e.g. min, max, sum&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Persistent AVL&lt;/h2&gt;

&lt;p&gt;AVL is link based, and modification operations are &lt;code&gt;join&lt;/code&gt; &amp;amp; &lt;code&gt;split&lt;/code&gt;. Each time &lt;code&gt;O(logn)&lt;/code&gt; nodes visited and modified. Create a copy of &lt;code&gt;root&lt;/code&gt; to modified nodes.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;amp;Itemid=8&amp;amp;category=24&amp;amp;page=show_problem&amp;amp;problem=3983&quot;&gt;Version Controlled Editor&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 09 Nov 2016 00:00:00 +0800</pubDate>
        <link>/blog/notes/competition/2016/11/09/data-structure-notes.html</link>
        <guid isPermaLink="true">/blog/notes/competition/2016/11/09/data-structure-notes.html</guid>
        
        <category>competition</category>
        
        <category>data structure</category>
        
        
        <category>Blog</category>
        
        <category>Notes</category>
        
        <category>Competition</category>
        
      </item>
    
      <item>
        <title>Competition Notes</title>
        <description>&lt;h2&gt;Content&lt;/h2&gt;

&lt;p&gt;Notes for coding competitions.&lt;/p&gt;

&lt;!--more--&gt;

&lt;hr&gt;

&lt;h2&gt;Complexity&lt;/h2&gt;

&lt;h3&gt;TLE&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;10^8&lt;/code&gt; int operations/&lt;code&gt;10^7&lt;/code&gt; floating point operations in a for loop run in around &lt;strong&gt;1 sec&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;n = 20: exponential ok&lt;/li&gt;
&lt;li&gt;n = 100: &lt;code&gt;O(n^3)&lt;/code&gt; ok&lt;/li&gt;
&lt;li&gt;n = 1000: &lt;code&gt;O(n^2)&lt;/code&gt; ok&lt;/li&gt;
&lt;li&gt;n = 10^4: &lt;code&gt;n*polylog(n)&lt;/code&gt; ^ &lt;code&gt;n*sqrt(n)&lt;/code&gt; ok&lt;/li&gt;
&lt;li&gt;n = 10^5: &lt;code&gt;nlogn&lt;/code&gt; ok&lt;/li&gt;
&lt;li&gt;n = 10^6: &lt;code&gt;O(n)&lt;/code&gt; ok&lt;/li&gt;
&lt;li&gt;n = 10^9: &lt;code&gt;O(logn)&lt;/code&gt; ok&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Online Resource&lt;/h2&gt;

&lt;h3&gt;Data Structure&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://acm.timus.ru/problemset.aspx?space=1&amp;amp;tag=structure&quot;&gt;Timus OJ&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 09 Nov 2016 00:00:00 +0800</pubDate>
        <link>/blog/notes/competition/2016/11/09/competition-notes.html</link>
        <guid isPermaLink="true">/blog/notes/competition/2016/11/09/competition-notes.html</guid>
        
        <category>competition</category>
        
        
        <category>Blog</category>
        
        <category>Notes</category>
        
        <category>Competition</category>
        
      </item>
    
  </channel>
</rss>
