<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MyCoon</title>
    <description>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 14 Jun 2018 16:57:25 +0800</pubDate>
    <lastBuildDate>Thu, 14 Jun 2018 16:57:25 +0800</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>Reinforcement Learning 健身房：OpenAI Gym</title>
        <description>&lt;p&gt;不久前火熱的 AlphaGo 圍棋 AI 系統因打敗眾多人類好手而聲名大噪，而稍後推出的進化版 AlphaGo Zero 更是乾淨利落的藉由與自身對抗而習得棋藝，令人嘖嘖稱奇。而這系列圍棋 AI 系統背後即是以 &lt;strong&gt;Reinforcement Learning 強化學習&lt;/strong&gt;為基礎訓練而成。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Gym&lt;/code&gt; 是 OpenAI 所開源的 Reinforcement Learning 工具包。無論是想感受 Reinforcement Learning 是怎麼一回事，或是想嘗試進階 Deep Q-Learning 的開發者，都可以快速方便的調用 &lt;code&gt;gym&lt;/code&gt; 所提供的許多現成環境，專注於演算法的設計與實現。快讓我們一起來成為健身房的永久免費會員！&lt;/p&gt;

&lt;!--more--&gt;

&lt;hr&gt;

&lt;p&gt;&lt;em&gt;* 請注意，以下只針對Python3進行講解與測試，並以 MacOSX 為環境。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;本篇會從基礎 Reinforcement Learning 概念簡介開始，進入 OpenAI gym 簡介，跟著兩個 demo 式的簡單演算法實作 -- &lt;strong&gt;Random Action&lt;/strong&gt; 及 &lt;strong&gt;Hand-Made Policy&lt;/strong&gt;，最後帶至具有學習能力的演算法 --  &lt;strong&gt;Q table 為基礎的 Q-learning&lt;/strong&gt;。與 Deep Learning 結合的 Deep Q-learning 會在之後的進階篇實作。&lt;/p&gt;

&lt;h2&gt;Reinforcement Learning 介紹&lt;/h2&gt;

&lt;p&gt;試想一個大學生，原本總是十二點睡，但離開家住進宿舍後，每天打電動打到兩點才睡，隔天上課昏昏沉沉，GPA 0.87。某天他嘗試十點上床睡覺，發現隔天上課腦袋清晰、神采奕奕，全身舒爽的他開始慢慢調整作息，最終 GPA 4.3。從對一個新環境一無所知，不斷嘗試不同作息時間，進而藉由所獲得的好處（身心感受、GPA等）學會最適合自己的作息，這種學習過程便是 Reinforcement Learning。&lt;/p&gt;

&lt;p&gt;Reinforcement Learning 是 Machine Learning 家族的一員，為一種&lt;strong&gt;目標導向(goal-oriented)&lt;/strong&gt;的學習方法，旨在經由與環境互動過程中獲得的各種獎勵或懲罰，學會如何做決策。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.stack.imgur.com/eoeSq.png&quot; alt=&quot;reinforcement learning&quot;&gt;&lt;/p&gt;

&lt;p&gt;整個決策過程的模擬有以下幾個要素：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Agent&lt;/strong&gt;，藉由 action 跟 environment 互動。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Environment&lt;/strong&gt;，agent 的行動範圍，根據 agent 的 action 給予不同程度的 reward。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;State&lt;/strong&gt;，在特定時間點 agent 身處的狀態。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Action&lt;/strong&gt;，agent 藉由自身 policy 進行的動作。 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Reward&lt;/strong&gt;，environment 給予 agent 所做 action 的獎勵或懲罰。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Agent 的目標是藉由與 environment 不斷互動及獲得 reward，學會最佳 &lt;strong&gt;policy&lt;/strong&gt;，即是 agent 根據身處的 state 決定進行最佳 action 的策略。&lt;/p&gt;

&lt;p&gt;以上是 Reinforcement Learning 的簡單介紹，欲深入了解可參考文末參考資料。&lt;/p&gt;

&lt;h2&gt;OpenAI Gym 介紹&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://gym.openai.com/&quot;&gt;OpenAI Gym&lt;/a&gt; 是由 OpenAI 開源的 Reinforcement Learning 工具包，裡面有許多現成 environment 處理環境模擬及獎勵等等過程，讓開發者專注於演算法開發。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://gym.openai.com/docs/&quot;&gt;安裝過程&lt;/a&gt;非常簡單，首先確保你的 Python version 在 3.5 以上，然後使用 pip 安裝：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;pip install gym
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;接著只需要 &lt;code&gt;import gym&lt;/code&gt; 就能開始體驗 Reinforcement Learning。&lt;/p&gt;

&lt;h2&gt;演算法實作&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Gym&lt;/code&gt; 一系列的 environment 都在&lt;a href=&quot;https://gym.openai.com/envs/#classic_control&quot;&gt;這裡&lt;/a&gt;。我們挑選 &lt;code&gt;CartPole-v0&lt;/code&gt; 當示範，任務是維持小車上的柱子的平衡。它的 environment 只有四種 feature（小車位置，小車速度，柱子角度，柱尖速度），agent 只有兩種 action（向左移，向右移）。網路上有非常多建立在 CartPole 的範例，這邊把常見演算法整合，進階的 Deep Q-Network 則留到下一篇。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/pyliaorachel/openai-gym-cartpole/blob/master/img/cartpole.png?raw=true&quot; alt=&quot;cart pole&quot;&gt;&lt;/p&gt;

&lt;p&gt;GitHub 完整程式碼：&lt;a href=&quot;https://github.com/pyliaorachel/openai-gym-cartpole&quot;&gt;https://github.com/pyliaorachel/openai-gym-cartpole&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Random Action&lt;/h3&gt;

&lt;p&gt;首先用最簡單的例子體驗 &lt;code&gt;gym&lt;/code&gt; 的使用 —— 無論 environment 如何，隨機進行 action，也就是隨機決定要將小車左移或右移。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gym&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'CartPole-v0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 跑 200 個 episode，每個 episode 都是一次任務嘗試&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i_episode&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;observation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 讓 environment 重回初始狀態 &lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;rewards&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 累計各 episode 的 reward &lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;250&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 設個時限，每個 episode 最多跑 250 個 action&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 呈現 environment&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# Key section&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;action_space&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sample&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 在 environment 提供的 action 中隨機挑選&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;observation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reward&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;info&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;step&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 進行 action，environment 返回該 action 的 reward 及前進下個 state&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;rewards&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reward&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 累計 reward&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 任務結束返回 done = True&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Episode finished after {} timesteps, total rewards {}'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rewards&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;精華都在 Key section，agent 選擇並進行一個 action，並從 environment 中獲得 reward。可以看到 agent 並沒有任何學習行為，所以整體 reward 並不高。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/pyliaorachel/openai-gym-cartpole/blob/master/img/random_action.png?raw=true&quot; alt=&quot;random action&quot;&gt;&lt;/p&gt;

&lt;h3&gt;Hand-Made Policy&lt;/h3&gt;

&lt;p&gt;為了讓 agent 不會走得太無腦，再來引進一個簡單的 policy —— 如果柱子向左傾（角度 &amp;lt; 0），則小車左移以維持平衡，否則右移。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;其實正常來說，agent 是不會知道 environment 所提供的這些 feature 和 action 各自是什麼意思，因此這一部分主要是示範 policy 的概念。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# 定義 policy&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;choose_action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;observation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ang&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;observation&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ang&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 柱子左傾則小車左移，否則右移 &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gym&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'CartPole-v0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i_episode&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;observation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;rewards&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;250&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;choose_action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;observation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;observation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reward&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;info&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;step&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;rewards&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reward&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Episode finished after {} timesteps, total rewards {}'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rewards&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;結果：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/pyliaorachel/openai-gym-cartpole/blob/master/img/hand_made_policy.png?raw=true&quot; alt=&quot;hand-made rule&quot;&gt;&lt;/p&gt;

&lt;p&gt;可以看到 agent 所獲得的整體 reward 比 random action 高出許多，不過 agent 依然沒有根據經驗做學習，非常頑固。接下來要來示範真正實用的 learning process —— Q-learning。&lt;/p&gt;

&lt;h3&gt;Q-Learning with Q Table&lt;/h3&gt;

&lt;p&gt;在進入實作前，會先簡單講解 Q-learning 及 Q table 概念，可當作補充。&lt;/p&gt;

&lt;h6&gt;Q-Learning&lt;/h6&gt;

&lt;p&gt;為了學習在某個 state 之下做出好的 action，我們定義所謂的 Q function &lt;code&gt;Q(s, a)&lt;/code&gt;，也就是&lt;strong&gt;根據身處的 state &lt;code&gt;s&lt;/code&gt; 進行 action &lt;code&gt;a&lt;/code&gt; 所預期未來會得到的總 reward&lt;/strong&gt;。如果能求出最佳 Q function&lt;code&gt;Q*(s, a)&lt;/code&gt;，我們的 agent 在任何 state 之下，只要挑選能最大化未來總 reward 的 action ，即 &lt;code&gt;argmax_a Q*(s, a)&lt;/code&gt;，即能在任務中獲得最大 reward。而習得 Q function 的過程正是 Q-learning。&lt;/p&gt;

&lt;p&gt;在學習 Q function 前，要先知道如何表示 Q function。不難發現 Q function 有遞迴特質，可以用遞迴表示：&lt;/p&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;
    &lt;img src=&quot;https://cdn-images-1.medium.com/max/1600/1*jamiG5MkFVHLTFmLggemVg.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;即是當前 reward 和進入下一個 state &lt;code&gt;s&amp;#39;&lt;/code&gt; 後所能獲得最大 discounted reward 的和。這邊的 γ 稱為 discount factor，可以說是對未來 reward 的重視程度。γ 越低，agent 越重視當前所獲得的 reward，並覺得未來獲得的 reward 太遙遠，不足以在當前 state 的決策過程中佔有太大份量。&lt;/p&gt;

&lt;p&gt;接著 agent 要藉由一次次跟 environment 互動中獲得的 reward 來學習 Q function。起初 agent 一無所知時，Q function 的參數都是隨機的。接著從跟 environment 互動的每一步，慢慢更新參數，逼近我們要的最佳 Q function：&lt;/p&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;
    &lt;img src=&quot;https://wikimedia.org/api/rest_v1/media/math/render/svg/845e1915e9fc3b55a3e88cb6fb5f40a41c1b6606&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;這裡 learned value 是每次 action 帶來的一點新資訊，但不能直接取代舊資訊，而是每次更新 α 這麼多比率的新資訊，保留 (1 - α) 比率的舊資訊，最終逐漸收斂。&lt;/p&gt;

&lt;p&gt;整體 Q-learning 步驟大致上如下：&lt;/p&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;
    &lt;img src=&quot;http://www.incompleteideas.net/book/ebook/pseudotmp9.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;ε-greedy 是一種在 exploration 和 exploitation 間取得平衡的方法。Exploration 是讓 agent 大膽嘗試不同 action，確保能夠吸收新知，而 exploitation 是讓 agent 保守沿用現有 policy，讓學習過程收斂。方法很簡單：ε 是隨機選擇 action 的機率，所以平均上有 ε 的時間 agent 會嘗試新 action，而 (1 - ε) 的時間 agent 會根據現有 policy 做決策。&lt;/p&gt;

&lt;h6&gt;Q Table&lt;/h6&gt;

&lt;p&gt;了解 Q-learning 及 ε-greedy 的概念後，那實際上這個 Q function 存在哪裡呢？一個樸實無華的方法就是把各個 state-action pair 的 Q value 存在 table 裡，直接查找或更新，即是所謂 Q table，也是接下來要示範的方法。不過這個方法的壞處是 table 大小有限，不適用於 state 和 action 過多的任務。&lt;/p&gt;

&lt;p&gt;另一個方法是用 neural network 去逼近 Q function，即 Deep Q-Learning，如此一來就不會有容量限制了。這個方法會在之後另寫文章介紹。&lt;/p&gt;

&lt;h6&gt;實作&lt;/h6&gt;

&lt;p&gt;原始碼修改自&lt;a href=&quot;https://medium.com/@tuzzer/cart-pole-balancing-with-q-learning-b54c6068d947&quot;&gt;這篇文章&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;先統整一下。我們的目標是學習到最佳 Q function，過程中以 ε-greedy 方法與 environment 互動，從中獲得 reward 以更新 Q table 裡的 Q value。先看一下基於 ε-greedy 的 policy 定義：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;choose_action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;q_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;action_space&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epsilon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random_sample&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epsilon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 有 ε 的機率會選擇隨機 action&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;action_space&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sample&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 其他時間根據現有 policy 選擇 action，也就是在 Q table 裡目前 state 中，選擇擁有最大 Q value 的 action&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argmax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;q_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;再來是 state 的表示。在 &lt;code&gt;CartPole&lt;/code&gt; 環境裡觀察到的 feature 都是連續值，不適合作為一個 table 的 index，因此要將一個區間一個區間的值包在一起用離散數值表示，也就是下面的 &lt;code&gt;bucket&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;observation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_buckets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state_bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;observation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;observation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 每個 feature 有不同的分配&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;u&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state_bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state_bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 每個 feature 值的範圍上下限&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 低於下限，分配為 0&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 高於上限，分配為最大值&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_buckets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 範圍內，依比例分配&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;u&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_buckets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;tuple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;最後是學習。學習過程中為了方便收斂，一些參數像 ε 和 learning rate 會隨著時間遞減，也就是我們從大膽亂走，到越來越相信已經學到的經驗。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gym&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'CartPole-v0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 準備 Q table&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;## Environment 中各個 feature 的 bucket 分配數量&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;## 1 代表任何值皆表同一 state，也就是這個 feature 其實不重要&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;n_buckets&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;## Action 數量 &lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;n_actions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;action_space&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;## State 範圍 &lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;state_bounds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;observation_space&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;low&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;observation_space&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;high&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;state_bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;state_bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;radians&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;radians&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;## Q table，每個 state-action pair 存一值 &lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;q_table&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zeros&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n_buckets&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n_actions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,))&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 一些學習過程中的參數&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;get_epsilon&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# epsilon-greedy; 隨時間遞減&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;get_lr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# learning rate; 隨時間遞減 &lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gamma&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.99&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# reward discount factor&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Q-learning&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i_episode&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;epsilon&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_epsilon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i_episode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;lr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_lr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i_episode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;observation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;rewards&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;observation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_buckets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state_bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 將連續值轉成離散 &lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;250&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;choose_action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;q_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;action_space&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epsilon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;observation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reward&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;info&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;step&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;rewards&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reward&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;next_state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;observation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_buckets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state_bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# 更新 Q table&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;q_next_max&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;amax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;q_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next_state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 進入下一個 state 後，預期得到最大總 reward&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;q_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,)]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reward&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gamma&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;q_next_max&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;q_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,)])&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 就是那個公式&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# 前進下一 state &lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next_state&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Episode finished after {} timesteps, total rewards {}'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rewards&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;這邊其實偷偷作弊，才會知道哪個 feature 重要哪個不重要，以及 state 的上下限。參數也是原作者調整過的。不過如此一來才能展現好結果：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/pyliaorachel/openai-gym-cartpole/blob/master/img/q_table.png?raw=true&quot; alt=&quot;Q table&quot;&gt;&lt;/p&gt;

&lt;p&gt;可以看到在訓練後期，agent 已經學會如何最大化自己的 reward，也就是維持住小車上的棒子了。&lt;/p&gt;

&lt;h2&gt;結語&lt;/h2&gt;

&lt;p&gt;AlphaGo 帶來的驚奇讓人們期待著 Reinforcement Learning 的無限可能性。此篇帶大家簡單理解 Reinforcement Learning 的學習過程和 OpenAI Gym 的操作，並簡單示範幾個演算法。雖說目前 Reinforcement Learning 打造出許多超越人類的遊戲 AI，但在其他領域的應用，例如 Computer Vision、Natural Language Processing，仍成果有限。期待不久的未來，Reinforcement Learning 能在真正對人類福祉有益的領域有所突破。&lt;/p&gt;

&lt;h2&gt;參考資料&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.nature.com/articles/nature24270&quot;&gt;Mastering the game of Go without human knowledge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://deeplearning4j.org/deepreinforcementlearning&quot;&gt;A Beginner&amp;#39;s Guide to Deep Reinforcement Learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@curiousily/solving-an-mdp-with-q-learning-from-scratch-deep-reinforcement-learning-for-hackers-part-1-45d1d360c120&quot;&gt;Solving an MDP with Q-Learning from scratch — Deep Reinforcement Learning for Hackers (Part 1)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.techbridge.cc/2017/11/04/openai-gym-intro-and-q-learning/&quot;&gt;Open AI Gym 簡介與 Q learning 演算法實作&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://morvanzhou.github.io/tutorials/machine-learning/ML-intro/4-02-RL-methods/&quot;&gt;强化学习方法汇总 (Reinforcement Learning)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@tuzzer/cart-pole-balancing-with-q-learning-b54c6068d947&quot;&gt;Cart-Pole Balancing with Q-Learning&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 01 Jun 2018 00:00:00 +0800</pubDate>
        <link>/blog/tech/python/2018/06/01/openai-gym-for-reinforcement-learning.html</link>
        <guid isPermaLink="true">/blog/tech/python/2018/06/01/openai-gym-for-reinforcement-learning.html</guid>
        
        <category>Python</category>
        
        <category>PyLadies</category>
        
        <category>OpenAI gym</category>
        
        
        <category>Blog</category>
        
        <category>Tech</category>
        
        <category>Python</category>
        
      </item>
    
      <item>
        <title>如Py似C：Python 與 C 的共生法則</title>
        <description>&lt;p&gt;「C君，你做事那麼快，carry 一下我的作業啦！」「好啊Py桑，那你人緣那麼好，記得幫我介紹女朋友喔。」&lt;/p&gt;

&lt;p&gt;C 的高效能及接近底層硬體的特性，使其成為嵌入式系統開發的首選，卻極少有人會厭世到拿它開發網頁；Python 語法簡潔且能快速開發，無論網頁、遊戲、資料科學皆有其應用，但其速度卻會在很多資源有限的地方吃鱉。&lt;/p&gt;

&lt;p&gt;C 與 Python 如何互相截長補短、共生共榮，成為程式語言界的一大課題。此篇將會簡介一些 C 與 Python 的整合方法，見證C君與Py桑如何從死對頭變成相互扶持的好友。&lt;/p&gt;

&lt;!--more--&gt;

&lt;hr&gt;

&lt;p&gt;&lt;em&gt;* 請注意，以下只針對Python3進行講解與測試，並以 MacOSX 為環境。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;假使你正在跑 Python 的專案，卻因為其中某個需要做大量運算的 function 等得不耐煩，又不想整個專案改用效能高但複雜的 C 重寫，那麼如何能只獨立這個 function 改用 C ，並將它置入原本的 Python 專案呢？又或是你的 C 專案裡有一部分寫起來很棘手，能不能改用 Python 快速實現這部分的功能，並插入原本的 C 專案？又或者你手邊拿到的程式碼就剛好是 C 或 Python，如何用另一個語言調用手邊的現有程式而不用重新實現呢？&lt;/p&gt;

&lt;p&gt;接下來將會簡單介紹幾個 Python 調用 C 以及 C 調用 Python 的方法。&lt;/p&gt;

&lt;p&gt;GitHub 原始碼：&lt;a href=&quot;https://github.com/pyliaorachel/python-c-mixing&quot;&gt;https://github.com/pyliaorachel/python-c-mixing&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Python 調用 C&lt;/h2&gt;

&lt;p&gt;假設我們有一個很花時間的 function 叫做 &lt;code&gt;slow_calc&lt;/code&gt;，想用效能高的 C 實現：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;slow_calc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;以下簡介幾個可以讓 Python 調用這個 C function 的 library 或工具。&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;https://docs.python.org/3/c-api/intro.html&quot;&gt;Python/C API&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.python.org/3/extending/building.html&quot;&gt;Python extension module&lt;/a&gt; 是以 Python 以外的語言建立且能夠讓 Python 匯入的 module。Python/C API 即是 C 裡能夠建立 Python extension module 的媒介，只需要引入 &lt;code&gt;Python.h&lt;/code&gt; 這個標頭檔即可開始手刻。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;Python.h&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;這邊注意，這些 extension module 都是針對 CPython，也就是官方以 C 實現的 Python 直譯器。&lt;/p&gt;

&lt;p&gt;為了建立 &lt;code&gt;slow_calc&lt;/code&gt; function 的接口，我們把它寫進 &lt;code&gt;speedup_performance.c&lt;/code&gt; 檔並打包成 Python extension module，大致上有五個步驟：&lt;/p&gt;

&lt;h5&gt;Step 1: 包裝 Function&lt;/h5&gt;

&lt;p&gt;Python 裡的任何 type 都對應到 C 裡的 &lt;code&gt;PyObject&lt;/code&gt;，所以我們要把原本的 function 包裝一下，讓參數和回傳值皆為 &lt;code&gt;PyObject&lt;/code&gt;。這個包裝可以有以下三種參數形式：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;(PyObject *self, PyObject *args)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(PyObject *self, PyObject *args, PyObject *kwargs)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(PyObject *self)&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;args&lt;/code&gt; 是 positional arguments，&lt;code&gt;kwargs&lt;/code&gt; 是 keyword arguments。讓我們試試有 keyword argument 的例子，把前面定義的 &lt;code&gt;slow_calc&lt;/code&gt; function 包成 &lt;code&gt;_slow_calc&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PyObject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;_slow_calc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PyObject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PyObject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PyObject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 參數值
&lt;/span&gt;    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// kwlist 裡存放 keyword 的名字，以 NULL 結束
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwlist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;x&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 回傳值
&lt;/span&gt;    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// PyArg_ParseTupleAndKeywords 會嘗試把接收的 args 及 kwargs 
&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// 包成我們要的 format，也就是 &quot;i|ii&quot;
&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// i 即 int，non-optional 和 optional arguments 以 | 區隔
&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// 成功包好的值存在 x，a，b 中，打包失敗則整個 function 回傳 0，不再繼續下去
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PyArg_ParseTupleAndKeywords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;i|ii&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kwlist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 呼叫原 function，傳入包好的值 
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slow_calc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 把回傳值用 Py_BuildValue 包成 PyObject 以回送給 Python
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Py_BuildValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;i&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;Step 2: 建立 Module&amp;#39;s Method Table&lt;/h5&gt;

&lt;p&gt;把 module 裡的 function 都一一包好後，就要建立一個 module&amp;#39;s method table，也就是這個 module 的 method 列表。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// 每筆形式為 { name, method, flags, doc }
// 即 { 名稱, 對應函數, 哪種 argument 形式, 描述 }
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PyMethodDef&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SpeedupPerformanceMethods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;slow_calc&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_slow_calc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;METH_VARARGS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;METH_KEYWORDS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;A slow calculation method.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 以 NULL 作結
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;這邊的 &lt;code&gt;flags&lt;/code&gt; 可提供的值可參照&lt;a href=&quot;https://docs.python.org/3/c-api/structures.html#c.PyMethodDef&quot;&gt;文件&lt;/a&gt;，主要是告知 arguments 會如何被傳入。&lt;/p&gt;

&lt;h5&gt;Step 3: 定義 Module 結構&lt;/h5&gt;

&lt;p&gt;接著再定義 module：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// 形式為 { base, name, doc, size, module's method table }
// 即 { PyModuleDef_HEAD_INIT, 名稱, 描述, 分配 memory 大小, method 列表 }
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PyModuleDef&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;speedup_performance_module&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PyModuleDef_HEAD_INIT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;speedup_performance&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;A module containing methods with faster performance.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// global state
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;SpeedupPerformanceMethods&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;第一個 &lt;code&gt;base&lt;/code&gt; 皆設為 &lt;code&gt;PyModuleDef_HEAD_INIT&lt;/code&gt; 即可。&lt;code&gt;size&lt;/code&gt; 則是每個 &lt;code&gt;module&lt;/code&gt; 可被分配存放 &lt;code&gt;module state&lt;/code&gt; 的空間大小，設為 &lt;code&gt;-1&lt;/code&gt; 則為 &lt;code&gt;global state&lt;/code&gt;。詳可參照&lt;a href=&quot;https://docs.python.org/3/c-api/module.html#c.PyModuleDef&quot;&gt;文件&lt;/a&gt;。&lt;/p&gt;

&lt;h5&gt;Step 4: 定義 Module Initialization Method&lt;/h5&gt;

&lt;p&gt;當 Python import 這個 module 時會呼叫一個 initialization method，這個 method 必須以 &lt;code&gt;PyInit_&amp;lt;module&amp;gt;&lt;/code&gt; 形式命名：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// PyMODINIT_FUNC 除了回傳 PyObject，還會處理不同平台間的 linkage 問題
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PyMODINIT_FUNC&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;PyInit_speedup_performance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PyModule_Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;speedup_performance_module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;這個 initialization method 被呼叫後，會建立一個 module object，內含 method 列表列出的 function。這樣 Python 就能使用 C 裡提供的 function 了！&lt;/p&gt;

&lt;h5&gt;Step 5: 建立 Extension Module&lt;/h5&gt;

&lt;p&gt;上述程式碼寫完後存在 &lt;code&gt;speedup_performance.c&lt;/code&gt;裡。接著藉著 &lt;code&gt;setup.py&lt;/code&gt; 和 &lt;code&gt;Distutils&lt;/code&gt; 把 extension module 真的做出來：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;distutils.core&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Extension&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;speedup_performance_module&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Extension&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'speedup_performance'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                       &lt;span class=&quot;n&quot;&gt;sources&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'speedup_performance.c'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'SpeedupPerformance'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'A package containing modules for speeding up performance.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;ext_modules&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;speedup_performance_module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然後下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;python3 setup.py build_ext --inplace
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如此會有一個 &lt;code&gt;*.so&lt;/code&gt; 出現在當前目錄，這就是 Python 可以使用的 shared library。讓我們打開 Python 用用看:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;speedup_performance&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slow_calc&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slow_calc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a href=&quot;https://docs.python.org/3.6/library/ctypes.html&quot;&gt;ctypes&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;ctypes&lt;/code&gt; 是 Python 提供的一個 library，可以在 Python 中匯入一些外部 dynamic-link library (DLL) 或 shared library，來調用其中的 function。&lt;/p&gt;

&lt;p&gt;如果是已經存在的 library，可以直接從下面的第二步開始。現在假設我們想把前面提到自己寫的，很花時間運算的 &lt;code&gt;slow_calc&lt;/code&gt; function 打包給 &lt;code&gt;ctypes&lt;/code&gt; 調用，且這個 function 寫在 &lt;code&gt;speedup_performance.c&lt;/code&gt; 裡。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ctypes&lt;/code&gt; 簡單三步驟：&lt;/p&gt;

&lt;h5&gt;Step 1: 建立 Shared Library&lt;/h5&gt;

&lt;p&gt;首先用 gcc 建立 shared library，產生 &lt;code&gt;speedup_performance.so&lt;/code&gt; 檔：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;gcc -shared -fPIC speedup_performance.c -o speedup_performance.so
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;Step 2: 匯入 Library&lt;/h5&gt;

&lt;p&gt;接著在 Python 用 &lt;code&gt;ctypes&lt;/code&gt; 提供的 function 來匯入剛剛建立的 &lt;code&gt;so&lt;/code&gt; 檔：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;ctypes&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cdll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LoadLibrary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'./speedup_performance.so'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如此一來 library 中的 function 就能以 &lt;code&gt;m.func()&lt;/code&gt; 取用。&lt;/p&gt;

&lt;h5&gt;Step 3: 呼叫 Function&lt;/h5&gt;

&lt;p&gt;調用的時候，需要傳入對應原 C function 中的 parameter types。&lt;a href=&quot;https://docs.python.org/3.6/library/ctypes.html#fundamental-data-types&quot;&gt;這邊&lt;/a&gt;有列出每個 C type 對應的 ctypes type，例如我們需要傳入的 &lt;code&gt;int&lt;/code&gt; 對應到 &lt;code&gt;c_int&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slow_calc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c_int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c_int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c_int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a href=&quot;http://www.swig.org/Doc3.0/Contents.html#Contents&quot;&gt;SWIG&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;比起前兩者，SWIG (Simplified Wrapper and Interface Generator) 是一個更全面的建立 C/C++ interface 的工具，支援如 Python，Perl，Ruby 等多種語言。&lt;/p&gt;

&lt;p&gt;在&lt;a href=&quot;http://www.swig.org/Doc3.0/Preface.html#Preface_installation&quot;&gt;安裝&lt;/a&gt;好 SWIG 後，再來一樣嘗試打包我們的 &lt;code&gt;slow_calc&lt;/code&gt; function。這次我們方便起見，把 function 直接寫在 &lt;code&gt;speedup_performance.h&lt;/code&gt; 裡，等一下需要 include。&lt;/p&gt;

&lt;p&gt;大致上有四步驟：&lt;/p&gt;

&lt;h5&gt;Step 1: 建立 Interface File&lt;/h5&gt;

&lt;p&gt;首先要有一個描述 interface 的檔案，習慣命名為 &lt;code&gt;*.i&lt;/code&gt; 或 &lt;code&gt;*.swg&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;讓我們建立一個 &lt;code&gt;speedup_performance.i&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;/* 定義 module 名稱 */
%module speedup_performance

/* 在這個區塊的程式碼會原封不動置入待會產生的 C wrapper */
%{
#include &quot;speedup_performance.h&quot;
%}

/* 告訴 SWIG 你宣告的 function 或 variable */
int slow_calc(int x, int a = 0, int b = 0);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上面被包在 &lt;code&gt;%{ ... %}&lt;/code&gt; 裡的程式碼，主要是一些 header file 或其他 declaration；這些宣告不會被 compile，而是直接置入下一步產生的 C wrapper 檔。但下面的區塊不是也有差不多的宣告嗎？為什麼需要重複？這麼做是因為下面區塊的宣告是讓 SWIG 在 wrapper file 裡建立一些 wrapper function 用的，而不是用來與原本寫的 function 連接。所以要在 wrapper file 重新置入 &lt;code&gt;%{ ... %}&lt;/code&gt; 裡的宣告，wrapper file 裡才能調用原 function，也才可以確保在第三步建立 shared library 的時候的 linkage 可以成功。&lt;/p&gt;

&lt;p&gt;另外我們原本的 &lt;code&gt;slow_calc&lt;/code&gt; 裡並沒有 default argument （因 C 本身並不怎麼支援），但是 SWIG 接受 &lt;a href=&quot;http://www.swig.org/Doc1.3/SWIGPlus.html#SWIGPlus_default_args&quot;&gt;default argument&lt;/a&gt;，所以我們在這裡添加了一些 default values。&lt;/p&gt;

&lt;h6&gt;Step 2: 產生 Wrapper File&lt;/h6&gt;

&lt;p&gt;有了 interface 的資訊後，就可以請 SWIG 建立可以拿來做 extension module 的 &lt;code&gt;speedup_performance.py&lt;/code&gt; 和 wrapper file &lt;code&gt;speedup_performance_wrap.c&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;swig -python speedup_performance.i
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;或是建立 keyword argument 形式：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;swig -python -keyword speedup_performance.i
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;Step 3: 建立 Shared Library&lt;/h5&gt;

&lt;p&gt;這邊同上面 &lt;code&gt;Python/C API&lt;/code&gt; 範例，用 &lt;code&gt;setup.py&lt;/code&gt; 和 &lt;code&gt;Distutils&lt;/code&gt; 建立 shared library：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;distutils.core&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Extension&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Extension module name 要有底線前綴&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;speedup_performance_module&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Extension&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'_speedup_performance'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                       &lt;span class=&quot;n&quot;&gt;sources&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'speedup_performance_wrap.c'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'SpeedupPerformance'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'A package containing modules for speeding up performance.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;ext_modules&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;speedup_performance_module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;這邊注意 extension module 名稱必須有底線前綴，這是&lt;a href=&quot;http://www.swig.org/Doc1.3/Python.html#Python_nn6&quot;&gt;官方文件&lt;/a&gt;上提到的命名規則。&lt;/p&gt;

&lt;p&gt;下個指令建立 &lt;code&gt;*.so&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;python3 setup.py build_ext --inplace
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;Step 4: 匯入 Library &amp;amp; 調用 Function&lt;/h5&gt;

&lt;p&gt;有了 Step 2 的 &lt;code&gt;*.py&lt;/code&gt; 和 Step 3 的 &lt;code&gt;*.so&lt;/code&gt;，就可以成功調用 &lt;code&gt;slow_calc&lt;/code&gt; function 了：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;speedup_performance&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slow_calc&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slow_calc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;C 調用 Python&lt;/h2&gt;

&lt;h3&gt;&lt;a href=&quot;https://docs.python.org/3/c-api/intro.html&quot;&gt;Python/C API&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;Python/C API&lt;/code&gt; 一樣是最基礎的解法。&lt;/p&gt;

&lt;p&gt;現在假設我們有個寫法很複雜，卻不需在意效能的 &lt;code&gt;complex_calc&lt;/code&gt; function 想用 Python 實現：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;complex_calc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;讓我們先把上述 &lt;code&gt;complex_calc&lt;/code&gt; function 寫進 &lt;code&gt;speedup_dev.py&lt;/code&gt; 裡。然後我們在 &lt;code&gt;main.c&lt;/code&gt; 裡先理所當然地：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;Python.h&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;接著三步驟調用這個 function：&lt;/p&gt;

&lt;h5&gt;Step 1: 打包 Function&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;complex_calc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PyObject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pArgs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pKargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pRes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 匯入 `speedup_dev` module &amp;amp; `complex_calc` function 
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;pModule&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PyImport_Import&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PyUnicode_FromString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;speedup_dev&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pFunc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PyObject_GetAttrString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;complex_calc&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 把 arguments 打包成 PyObject
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;pArgs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Py_BuildValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;(i)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pKargs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Py_BuildValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{s:i, s:i}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 呼叫 function 
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;pRes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PyObject_Call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pArgs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pKargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 檢查有沒有呼叫失敗，沒有的話把回傳值從 PyObject 包回 C type 
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pRes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PyLong_AsLong&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pRes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 處理一下 memory allocation 
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;Py_DECREF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Py_DECREF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Py_DECREF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pArgs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Py_DECREF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pKargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Py_DECREF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pRes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;再次重複，跟 Python 溝通的值皆為 &lt;code&gt;PyObject&lt;/code&gt; type，所以需要轉換 argument 和 return value。&lt;/p&gt;

&lt;p&gt;這邊比較麻煩的是要自己&lt;a href=&quot;https://docs.python.org/3.6/extending/extending.html#reference-counting-in-python&quot;&gt;處理 memory allocation&lt;/a&gt; 。每當一個 &lt;code&gt;PyObject&lt;/code&gt; 被創建，它就會有一個 reference count，也就是有多少調用者有責任去管理這個 &lt;code&gt;PyObject&lt;/code&gt;；當 reference count 變為 0，這個 &lt;code&gt;PyObject&lt;/code&gt; 就會被 free。如果根本沒人在管理這個 &lt;code&gt;PyObject&lt;/code&gt;， reference count 卻不為 0，就會有 memory leak 的問題。所以我們要記得在利用完這些 &lt;code&gt;PyObject&lt;/code&gt; 後呼叫 &lt;code&gt;Py_DECREF&lt;/code&gt; 減少 reference count，某些情況下該增加時也要呼叫 &lt;code&gt;Py_INCREF&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;但 reference count 的&lt;a href=&quot;https://docs.python.org/3.6/extending/extending.html#reference-counting-in-python&quot;&gt;規則&lt;/a&gt;有點複雜，自己處理很容易 bug 滿天飛（我可能也有 bug...），這也是使用 &lt;code&gt;Python/C API&lt;/code&gt; 的難點之一。&lt;/p&gt;

&lt;h5&gt;Step 2: 呼叫 Function&lt;/h5&gt;

&lt;p&gt;打包好之後，我們就有一個可以呼叫的 C function 了。不過在調用之前，得先做一點設置：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Initialize Python 直譯器 
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;Py_Initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 設置 Python search path 
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;PySys_SetPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Py_DecodeLocale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 呼叫 function
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;complex_calc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 釋放 Python 直譯器佔用資源
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;Py_Finalize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;除了使用前先 initialize，使用後 finalize 外，還要記得設一下 Python search path，否則會搜不到 module。&lt;/p&gt;

&lt;h5&gt;Step 3: 編譯 &amp;amp; 執行程式&lt;/h5&gt;

&lt;p&gt;用 gcc 編譯程式，產生 &lt;code&gt;main&lt;/code&gt; 執行檔：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;gcc &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;python3-config --cflags --ldflags&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; main.c -o main
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;這邊為了能夠啟用 Python C extension，需要傳入一些必要參數，而 &lt;a href=&quot;https://helpmanual.io/man1/python3-config/&quot;&gt;&lt;code&gt;python3-config&lt;/code&gt;&lt;/a&gt; 即是幫我們印出這些參數傳給 gcc。&lt;/p&gt;

&lt;p&gt;接著執行：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;./main
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;如果不幸在編譯時報錯，例如： &lt;/p&gt;

&lt;p&gt;&lt;code&gt;ld: library not found for -lpython3.6m&lt;/code&gt;  &lt;/p&gt;

&lt;p&gt;那很有可能是系統安裝的 Python 和你自己安裝的 Python 讓路徑產生混淆。 &lt;/p&gt;

&lt;p&gt;解決辦法如&lt;a href=&quot;https://docs.python.org/3.6/extending/embedding.html#compiling-and-linking-under-unix-like-systems&quot;&gt;此文件&lt;/a&gt;所建議，在 &lt;code&gt;python3-config&lt;/code&gt; 前加上絕對路徑。有裝 Anaconda 的可能是 &lt;code&gt;/anaconda3/bin/python3-config&lt;/code&gt;，自己裝 Python 的可能是 &lt;code&gt;/usr/local/bin/python3-config&lt;/code&gt;，系統預設的可能是 &lt;code&gt;/usr/bin/python3-config&lt;/code&gt; 等等，有錯即嘗試另一種。 &lt;/p&gt;

&lt;p&gt;當然，實際路徑因作業系統和安裝情況而異，請先行確認路徑中是否有 &lt;code&gt;python3-config&lt;/code&gt; 或 &lt;code&gt;pythonX.Y-config&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;&lt;a href=&quot;http://docs.cython.org/en/latest/&quot;&gt;Cython&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;相信大家有生之年一定都不想自己處理什麼 reference count 的問題。Cython 是一個跟 Python 寫起來很像的語言，能夠方便且快速的建立 C 的 extension，不只達到 Python 的開發速度，亦能達到 C 的效能。&lt;/p&gt;

&lt;p&gt;先安裝起來：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;pip3 install Cython
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;假設我們有個 &lt;code&gt;complex_and_slow_calc&lt;/code&gt; function 不只寫起來複雜，效能又低：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;complex_and_slow_calc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Cython 可以定義針對 Python、C、或兩者的 function。我們把上述 &lt;code&gt;complex_and_slow_calc&lt;/code&gt; function 用三種寫法一起實現。&lt;/p&gt;

&lt;p&gt;以下四步驟調用：&lt;/p&gt;

&lt;h5&gt;Step 1: 用 Cython 取代 Python&lt;/h5&gt;

&lt;p&gt;先把 Cython 寫在 &lt;code&gt;speedup_dev_and_performance.pyx&lt;/code&gt; 裡，寫法與 Python 極為相似：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;math&lt;/span&gt; 


&lt;span class=&quot;c&quot;&gt;# Python&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;complex_and_slow_calc_p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# C&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cdef&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;complex_and_slow_calc_c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Python &amp;amp; C&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cpdef&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;complex_and_slow_calc_cp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;依照你的 function 需要被 Python  或 C 或兩者調用，有以上三種寫法，&lt;code&gt;def&lt;/code&gt;、&lt;code&gt;cdef&lt;/code&gt;、和 &lt;code&gt;cpdef&lt;/code&gt;，來建立 Python function 或 C function；C function 的優化比較多，速度也比較快。&lt;a href=&quot;http://notes-on-cython.readthedocs.io/en/latest/function_declarations.html&quot;&gt;這邊&lt;/a&gt;有比較詳細的解釋。當然，你只需要針對需求選一個寫就好，這邊同時示範三種寫法，命名用 &lt;code&gt;_p / _c / _cp&lt;/code&gt; 後綴來區別。C function 的 argument 及 return value 都要明確定義 type，跟 C 同理。&lt;/p&gt;

&lt;p&gt;如果在 &lt;code&gt;def&lt;/code&gt; 後加上 &lt;code&gt;public&lt;/code&gt;，那麼這個 function 就會出現在產生的 &lt;code&gt;*.h&lt;/code&gt; 標頭檔裡，所以如果有想要給外部 C 檔調用的 function，也就是我們等一下要做的事，便能加上 &lt;code&gt;public&lt;/code&gt;。&lt;/p&gt;

&lt;h5&gt;Step 2: 建立 Extension&lt;/h5&gt;

&lt;p&gt;同樣使用 &lt;code&gt;setup.py&lt;/code&gt; 和 &lt;code&gt;Distutils&lt;/code&gt; 來建立 extension：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;distutils.core&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setup&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Cython.Build&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cythonize&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ext_modules&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cythonize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'speedup_dev_and_performance.pyx'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;下指令，產生 &lt;code&gt;*.so&lt;/code&gt;，&lt;code&gt;*.c&lt;/code&gt;，和 &lt;code&gt;*.h&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;$ python3 setup.py build_ext --inplace
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;Step 3: 呼叫 Function&lt;/h5&gt;

&lt;p&gt;有了標頭檔 &lt;code&gt;speedup_dev_and_performance.h&lt;/code&gt;，我們建立一個 &lt;code&gt;main.c&lt;/code&gt; 來調用：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;Python.h&amp;gt;
#include &quot;speedup_dev_and_performance.h&quot;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Init module &amp;amp; Python 直譯器 
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;PyImport_AppendInittab&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;speedup_dev_and_performance&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PyInit_speedup_dev_and_performance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Py_Initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PyImport_ImportModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;speedup_dev_and_performance&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 呼叫 function
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;complex_and_slow_calc_c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 釋放 Python 直譯器佔用資源
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;Py_Finalize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;這邊注意到 initialization 多了幾個步驟：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;PyImport_AppendInittab&lt;/code&gt; 把我們要匯入的 module &lt;code&gt;speedup_dev_and_performance&lt;/code&gt; 加到 built-in module table&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Py_Initialize&lt;/code&gt; initialize Python 直譯器 &lt;/li&gt;
&lt;li&gt;再呼叫 &lt;code&gt;PyImport_ImportModule&lt;/code&gt; ，也就是匯入 module， 才能真正 initialize module，因其內部呼叫 &lt;code&gt;PyInit_speedup_dev_and_performance&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;PyInit_&amp;lt;module&amp;gt;&lt;/code&gt; 是在上上步 &lt;code&gt;*.h&lt;/code&gt; 檔裡自動生成的。記得我們的 &lt;code&gt;complex_and_slow_calc&lt;/code&gt; 有 &lt;code&gt;import math&lt;/code&gt; 嗎？如果沒有這第三步，&lt;code&gt;import math&lt;/code&gt; 就會失敗。&lt;/p&gt;

&lt;h5&gt;Step 4: 編譯 &amp;amp; 執行程式&lt;/h5&gt;

&lt;p&gt;同樣用 gcc 編譯程式，產生 &lt;code&gt;main&lt;/code&gt; 執行檔後執行：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;gcc &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;python3-config --cflags --ldflags&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; main.c speedup_dev_and_performance.c -o main 
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;./main
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;3 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;比較&lt;/h2&gt;

&lt;p&gt;說了這麼多，這些方法有哪些優缺點，適合什麼時候用呢？&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align: center&quot;&gt;&lt;/th&gt;
&lt;th&gt;優點&lt;/th&gt;
&lt;th&gt;缺點&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: center&quot;&gt;Python/C API&lt;/td&gt;
&lt;td&gt;最原始，最大的控制權。&lt;/td&gt;
&lt;td&gt;Reference count 很煩。比較需要 C 的基礎。只針對 CPython。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: center&quot;&gt;ctypes&lt;/td&gt;
&lt;td&gt;使用簡單。不需編譯。可直接使用現成 library。基本使用上不需會 C。&lt;/td&gt;
&lt;td&gt;Type 轉換比較麻煩，尤其是 struct、union、array 這種。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: center&quot;&gt;SWIG&lt;/td&gt;
&lt;td&gt;支援多種語言。&lt;/td&gt;
&lt;td&gt;要寫一份煩人的 interface file。Overhead 高。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: center&quot;&gt;Cython&lt;/td&gt;
&lt;td&gt;兼顧開發與執行效能。&lt;/td&gt;
&lt;td&gt;跟 Python 還是不太一樣，需要學新東西。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;不過這些是很粗淺的比較，一些更深入的優劣勢還是需要真的深入使用之後才能體會。&lt;/p&gt;

&lt;h2&gt;結語&lt;/h2&gt;

&lt;p&gt;為了魚與熊掌兼得，前人在 C 與 Python 的整合開發上下了不少功夫，也才有這些方便的工具使用。此篇簡單介紹幾個 Python 與 C 的整合工具，尚未觸及到 C++ 或其他語言，但或許認識這些基本概念能更容易延伸到其他語言。&lt;/p&gt;

&lt;p&gt;這些在蓬勃發展的資訊領域裡可能只是冰山一角，未來也勢必會有更強大的整合工具或新語言出現。我們能做的就是坐以待斃，喔不是，是分析清楚利弊，為自己的專案挑選最適合的工具。&lt;/p&gt;

&lt;h2&gt;參考資料&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.python.org/3/c-api/intro.html&quot;&gt;Python/C API Reference Manual&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.tutorialspoint.com/python/python_further_extensions.htm&quot;&gt;Python - Extension Programming with C&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://pythonextensionpatterns.readthedocs.io/en/latest/refcount.html&quot;&gt;Python Extension Patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.python.org/3.6/extending/extending.html&quot;&gt;Extending and Embedding the Python Interpreter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.python.org/3.6/library/ctypes.html&quot;&gt;ctypes — A foreign function library for Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.swig.org/Doc3.0/Contents.html#Contents&quot;&gt;SWIG Users Manual&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://docs.cython.org/en/latest/&quot;&gt;Cython’s Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://notes-on-cython.readthedocs.io/en/latest/index.html#&quot;&gt;Cython def, cdef and cpdef functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.paypal-engineering.com/2016/09/22/python-by-the-c-side/&quot;&gt;Python by the C side&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.zhihu.com/question/23003213&quot;&gt;如何实现 C/C++ 与 Python 的通信？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.cis.upenn.edu/%7Ecis192/spring2015/files/lec/lec14.pdf&quot;&gt;UPenn CIS192 Python Programming: Mixing C with Python/Modules and Packages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 26 Jan 2018 00:00:00 +0800</pubDate>
        <link>/blog/tech/python/2018/01/26/python-c-mixing.html</link>
        <guid isPermaLink="true">/blog/tech/python/2018/01/26/python-c-mixing.html</guid>
        
        <category>Python</category>
        
        <category>PyLadies</category>
        
        <category>C</category>
        
        
        <category>Blog</category>
        
        <category>Tech</category>
        
        <category>Python</category>
        
      </item>
    
      <item>
        <title>穿越時空的偉人：用PyTorch重現偉人們的神經網絡</title>
        <description>&lt;p&gt;繼上一篇&lt;a href=&quot;https://medium.com/pyladies-taiwan/%E6%B7%B1%E5%BA%A6%E5%AD%B8%E7%BF%92%E6%96%B0%E6%89%8B%E6%9D%91-pytorch%E5%85%A5%E9%96%80-511df3c1c025&quot;&gt;深度學習新手村：PyTorch 入門&lt;/a&gt;後，這一次要來做一點進階應用。筆者今年十一月參與在香港舉辦的 PyCon，其中 Aditthya Ramakrishnan 講者演講的主題 &lt;a href=&quot;https://www.youtube.com/watch?v=r8H1cZjCfIA&quot;&gt;Resurrecting the dead with deep learning&lt;/a&gt; 以 RNN 模型訓練林肯 (Lincoln) 及希特勒 (Hitler)的混合語料庫，創造出講話非常矛盾的林克勒 (Lincler)。&lt;/p&gt;

&lt;p&gt;以此演講為基礎，這次收集並混合了《毛澤東語錄》和《論語》，嘗試模擬出一個「孔澤東」，藉此一窺 RNN 在中文文本生成 (Chinese text generation) 的應用。&lt;/p&gt;

&lt;!--more--&gt;

&lt;hr&gt;

&lt;p&gt;&lt;em&gt;* 請注意，此篇 PyTorch 建立在 Python3 之上，並以 MacOSX 為環境。&lt;/em&gt;&lt;br&gt;
&lt;em&gt;* 預備知識：基礎神經網絡概念&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;人工神經網絡 (artificial neural network) 隨其不同的架構有著不同的應用，其中&lt;strong&gt;循環神經網絡 (recurrent neural network, RNN)&lt;/strong&gt; 能捕捉&lt;strong&gt;時間&lt;/strong&gt;關係，在自然語言處理領域有著廣泛的應用。本文將以簡介 RNN 及其優勢開頭，再進入主專案介紹，按照步驟講解如何以 PyTorch 進行中文文本生成，將歷史人物玩弄於股掌間，打造出一個荒謬的偉人結合體，一同維護世界和平。&lt;/p&gt;

&lt;h2&gt;RNN （相當簡單的）介紹&lt;/h2&gt;

&lt;p&gt;還記得 N 年前的 Google 翻譯嗎？翻譯的結果除了相當生硬不精確，還經常被眾人在茶餘飯後拿來揶揄，令人鼻酸。但 Google 在 2016 年將其打掉重練，推出了一個&lt;a href=&quot;https://research.google.com/pubs/pub45610.html&quot;&gt;新系統&lt;/a&gt;，有嘗試過的應該都會驚艷於它的成長，流暢度與精確度都提升許多，一種小孩長大的感動。這個新系統即是建立在一種稱之為&lt;strong&gt;序列到序列 (sequence to sequence, seq2seq)&lt;/strong&gt; 的模型之上，而此種模型便是以 RNN 為基礎。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;循環神經網絡 (RNN)&lt;/strong&gt; 旨在建立一種&lt;strong&gt;記憶&lt;/strong&gt;，也就是為了不將先前輸出的結果遺忘，將之累積成某種隱藏狀態 (hidden state)，並與當前輸入結合，一起產出結果，再進一步傳遞下去。也因此，RNN 適合接收序列 (sequence) 作為輸入並輸出序列，提供了序列生成一個簡潔的模型。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://karpathy.github.io/assets/rnn/diags.jpeg&quot; alt=&quot;RNN&quot;&gt;&lt;/p&gt;

&lt;p&gt;最原始的 RNN 有其限制，學者為了突破這些限制而發展出了一些變形，其中廣泛應用的&lt;strong&gt;長短期記憶 (Long Short-Term Memory, LSTM)&lt;/strong&gt; 即是為了解決 &lt;a href=&quot;http://harinisuresh.com/2016/10/09/lstms/&quot;&gt;vanishing gradient&lt;/a&gt; 問題而提出，也是我們接下來實作中應用的模型。&lt;/p&gt;

&lt;p&gt;礙於篇（本）幅（人）有（太）限（懶），沒辦法完整解釋這些模型背後的原理，但想要應用或覺得生命有限的話，不妨就將之視為黑盒子。若有興趣進一步了解，可以膜拜一下&lt;a href=&quot;https://karpathy.github.io/2015/05/21/rnn-effectiveness/&quot;&gt;這篇詳盡介紹&lt;/a&gt;和&lt;a href=&quot;http://colah.github.io/posts/2015-08-Understanding-LSTMs/&quot;&gt;這篇&lt;/a&gt;。&lt;/p&gt;

&lt;h2&gt;以 PyTorch 重現偉人們的神經網絡&lt;/h2&gt;

&lt;p&gt;今年十一月的 PyCon HK 的其中一場演講 &lt;a href=&quot;https://www.youtube.com/watch?v=r8H1cZjCfIA&quot;&gt;Resurrecting the dead with deep learning&lt;/a&gt; 將林肯 (Lincoln) 及希特勒 (Hitler) 的語料結合，進行訓練後能打造一個自打嘴巴的文本生成系統，稱之為林克勒 (Lincler)。此次專案則是仿造其精髓，但將文本改成中文，並以 PyTorch 實現（原專案以 Keras 實現）。&lt;/p&gt;

&lt;p&gt;如果跟筆者一樣也是 PyTorch 新手，就一起來邊玩邊練習吧！&lt;/p&gt;

&lt;p&gt;GitHub 專案原始碼：&lt;a href=&quot;https://github.com/pyliaorachel/resurrecting-the-dead-chinese&quot;&gt;pyliaorachel/resurrecting-the-dead-chinese&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;* 以下會簡單提到很多深度學習的概念，皆當作補充即可。欲深入了解可參考提供的連結。&lt;/em&gt;  &lt;/p&gt;

&lt;h4&gt;語料準備&lt;/h4&gt;

&lt;p&gt;這次準備的兩個歷史人物的語料，一是毛澤東的《毛澤東語錄》，一是孔子與其弟子的《論語》。原本是想找蔣中正的《總統蔣公思想言論總集》，但找不到公開的語料，真是可惜。&lt;/p&gt;

&lt;p&gt;資料清理方面，只將原始語料中的一些非人物言論的註解刪除後，一句句排好。另外由於《論語》原文是文言文，所以挑了白話文翻譯，避免結果文白混雜。繁簡轉換方面，原始語料皆為簡體中文，所以不需進行繁簡轉換；如果想自己準備語料進行訓練，可以使用 &lt;a href=&quot;https://github.com/BYVoid/OpenCC&quot;&gt;OpenCC&lt;/a&gt; 將繁簡統一。&lt;/p&gt;

&lt;p&gt;以上清理都相當簡單，只透過文字編輯器的 find &amp;amp; replace 就可以完成（很懶惰我知道）。混合語料則簡單寫了 &lt;a href=&quot;https://github.com/pyliaorachel/resurrecting-the-dead-chinese/blob/master/src/corpus/mix.py&quot;&gt;python script&lt;/a&gt; 把兩個檔案中的句子隨機混排。&lt;/p&gt;

&lt;p&gt;原始和清理後的語料都在 &lt;a href=&quot;https://github.com/pyliaorachel/resurrecting-the-dead-chinese/tree/master/corpus&quot;&gt;corpus 檔案夾&lt;/a&gt;底下。&lt;/p&gt;

&lt;h4&gt;建立模型&lt;/h4&gt;

&lt;h6&gt;輸入/輸出資料&lt;/h6&gt;

&lt;p&gt;簡單複習一下監督式學習。一般監督式學習的訓練過程中，每一筆資料都需要包成&lt;code&gt;(input, target)&lt;/code&gt;的形式；&lt;code&gt;input&lt;/code&gt; 進入模型後會得到一個預測 &lt;code&gt;output&lt;/code&gt;，而這個 &lt;code&gt;output&lt;/code&gt; 和我們的正解 &lt;code&gt;target&lt;/code&gt; 之間會有一個落差 (error)。為了讓落差減小，我們需要慢慢調整模型中參數，最後達到準確的預測，這個就是模型的學習過程。&lt;/p&gt;

&lt;p&gt;這次的任務中，我們讓 &lt;code&gt;input&lt;/code&gt; 為一序列的中文字，&lt;code&gt;target&lt;/code&gt; 則是此序列後的下一個中文字，兩者皆從語料中準備即可。這邊簡單起見，直接以中文字為單位而不再做中文分詞，如果想以詞為單位可以使用&lt;a href=&quot;https://github.com/fxsjy/jieba&quot;&gt;結巴分詞&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;假設輸入序列長度為 5，則&lt;code&gt;这正是我们弟子们学不到的。&lt;/code&gt;會被包成：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# (input, target)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'这正是我们'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'弟'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'正是我们弟'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'子'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'是我们弟子'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'们'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'我们弟子们'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'学'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'们弟子们学'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'不'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'弟子们学不'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'到'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'子们学不到'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'的'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'们学不到的'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'。'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;另外就是，一筆一筆資料輸入後即更新權重，會讓訓練變得很慢。多筆資料包在一起一起訓練，可以加速訓練，此方法稱之為 &lt;a href=&quot;https://machinelearningmastery.com/gentle-introduction-mini-batch-gradient-descent-configure-batch-size/&quot;&gt;mini-batch&lt;/a&gt;。那為什麼不所有資料包成一筆呢？因為這樣一來收斂結果會比較差，而且每次有新資料進來就要整包重新訓練一次；mini-batch 算是一個平衡點，不過 batch size 要多大就需要調校一番。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/pyliaorachel/resurrecting-the-dead-chinese/blob/master/src/train/data.py&quot;&gt;&lt;code&gt;src/train/data.py&lt;/code&gt;&lt;/a&gt;裡有兩個 function 負責準備好模型可以接受的 input：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;parse_corpus&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# 語料裡所有出現過的中文字，此為 vocabulary&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;chars&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sorted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;raw_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 給每個中文字一個對應的 index，比較好做接下來的任務&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;char_to_int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chars&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;int_to_char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chars&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 共生成 N 個 input-target pair，每個 input 長度為 seq_length，target 長度為 1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;n_chars&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;raw_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dataX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# N x seq_length&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dataY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# N x 1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_chars&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seq_length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;seq_in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;raw_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seq_length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;seq_out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;raw_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seq_length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dataX&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;char_to_int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seq_in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dataY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;char_to_int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seq_out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;format_data&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# 採用 mini-batch，尾巴不足 batch_size 的直接捨棄&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;n_patterns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;n_patterns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_patterns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_patterns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;batch_size&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n_patterns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n_patterns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 把 array 每 batch_size 筆資料包成一組，並包成 tensor&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seq_length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;batch_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seq_length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LongTensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;batch_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LongTensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;LSTM 模型&lt;/h6&gt;

&lt;p&gt;PyTorch 建立 NN 的話需要繼承 &lt;code&gt;nn.Module&lt;/code&gt;，並 override &lt;code&gt;__init__&lt;/code&gt; 和 &lt;code&gt;forward&lt;/code&gt; 兩個 method。&lt;a href=&quot;https://github.com/pyliaorachel/resurrecting-the-dead-chinese/blob/master/src/train/model.py&quot;&gt;&lt;code&gt;src/train/model.py&lt;/code&gt;&lt;/a&gt;定義了我們的 NN 架構。&lt;/p&gt;

&lt;p&gt;值得一提的是，輸入的每個中文字都會先轉成 embedding vector，也就是用一個 vector 來表示各個中文字，這在自然語言處理任務中幾乎是必要的處理。&lt;a href=&quot;https://towardsdatascience.com/deep-learning-4-embedding-layers-f9a02d55ac12&quot;&gt;這篇文章&lt;/a&gt;對 embedding vector 有一個很好的介紹，不過簡單來說，因為字詞是類別資料 (categorical data)，用 integer 這種有順序的格式來表示並不恰當，因此轉成 vector 形式，藉由 vector 之間的空間關係來捕捉字詞之間的關聯性。&lt;/p&gt;

&lt;p&gt;Dropout 則是常見的防止&lt;strong&gt;過擬合 (overfitting)&lt;/strong&gt; 的手段，也就是在訓練過程中三不五時捨棄/忽略一些神經元，來減弱他們彼此間的聯合適應性 (co-adaptation)。不能說太多，不然要變 DLadies (DeepLearningLadies) 了，詳可參考&lt;a href=&quot;https://medium.com/@amarbudhiraja/https-medium-com-amarbudhiraja-learning-less-to-learn-better-dropout-in-deep-machine-learning-74334da4bfc5&quot;&gt;此篇&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;這邊設計的架構總共有以下幾層：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Embedding layer: 將以 integer 表示的 character index 轉成 embedding vector&lt;/li&gt;
&lt;li&gt;LSTM layer + dropout: 將輸入序列通過 LSTM 編碼成 hidden state，並加一層 dropout 防止 overfitting&lt;/li&gt;
&lt;li&gt;Fully-connected layer: 把 hidden state 線性轉換成一長度為 length of vocabulary 的 output layer，其中數值當作每個字的得分，得分越高越有機會是下一個預測結果&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_vocab&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;embedding_dim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hidden_dim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dropout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;embedding_dim&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;embedding_dim&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hidden_dim&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hidden_dim&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# nn.Embedding 可以幫我們建立好字典中每個字對應的 vector&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;embeddings&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Embedding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n_vocab&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;embedding_dim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# LSTM layer，形狀為 (input_size, hidden_size, ...)&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lstm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LSTM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;embedding_dim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hidden_dim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dropout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dropout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# Fully-connected layer，把 hidden state 線性轉換成 output&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hidden2out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Linear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hidden_dim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_vocab&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;forward&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seq_in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;# LSTM 接受的 input 形狀為 (timesteps, batch, features)，即 (seq_length, batch_size, embedding_dim)&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;# 所以先把形狀為 (batch_size, seq_length) 的 input 轉置後，再把每個 value (char index) 轉成 embedding vector&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;embeddings&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;embeddings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seq_in&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# LSTM 層的 output (lstm_out) 有每個 timestep 出來的結果（也就是每個字進去都會輸出一個 hidden state）&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;# 這邊我們取最後一層的結果，即最近一次的結果，來預測下一個字&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;lstm_out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lstm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;embeddings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ht&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lstm_out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# 線性轉換至 output&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hidden2out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ht&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;訓練模型&lt;/h4&gt;

&lt;p&gt;資料和模型都有了之後，就可以來訓練了。&lt;a href=&quot;https://github.com/pyliaorachel/resurrecting-the-dead-chinese/blob/master/src/train/train.py&quot;&gt;&lt;code&gt;src/train/train.py&lt;/code&gt;&lt;/a&gt;負責載入資料、訓練、及儲存結果。&lt;/p&gt;

&lt;p&gt;Optimizer 選用 &lt;a href=&quot;https://machinelearningmastery.com/adam-optimization-algorithm-for-deep-learning/&quot;&gt;Adam&lt;/a&gt;，亦可調用其他如 SGD、RMSprop 等 &lt;a href=&quot;http://pytorch.org/docs/master/optim.html&quot;&gt;optimizer&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;Loss function 採用的是 classification 任務常見的 cross-entropy。預測的 &lt;code&gt;output&lt;/code&gt; 會是長度為 number of classes 的 tensor，&lt;code&gt;target&lt;/code&gt; 則是正確 class label，而 PyTorch 裡的 &lt;code&gt;cross_entropy&lt;/code&gt; 會負責把預測結果做一次 log softmax 後，計算跟目標之間的 negative log likelihood，因此預測結果不需要先做 softmax 或 log softmax。需要特別注意的是，不同的深度學習框架會有不同的參數形狀要求，例如 Keras 會需要你把 target 轉成 one-hot encoding 等。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;optimizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epoch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;log_interval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# 設一下 flag&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# Mini-batch 訓練 &lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;batch_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seq_in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;seq_in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Variable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seq_in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Variable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;optimizer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zero_grad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seq_in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;                      &lt;span class=&quot;c&quot;&gt;# 取得預測&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cross_entropy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;      &lt;span class=&quot;c&quot;&gt;# 計算 loss&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;backward&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;                             &lt;span class=&quot;c&quot;&gt;# Backpropagation&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;optimizer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;step&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;                            &lt;span class=&quot;c&quot;&gt;# 更新參數&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# Log 訓練進度&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;batch_i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;log_interval&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Train epoch: {} ({:2.0f}&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Loss: {:.6f}'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epoch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;100.&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;batch_i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# 載入資料，建立模型&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;train_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;char_to_int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int_to_char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chars&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;load_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seq_length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seq_length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;batch_size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;batch_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chars&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;embedding_dim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hidden_dim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dropout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dropout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;optimizer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;optim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Adam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 訓練&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epoch&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epochs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;optimizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epoch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;train_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;log_interval&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log_interval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# 為避免不可抗力因素造成訓練中斷，或訓練太久失去耐心，每幾個 epoch 就儲存一次模型&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epoch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;save_interval&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;產出結果&lt;/h4&gt;

&lt;p&gt;訓練好模型後，接下來就來試試看生成文本。方法是，從語料中隨機選一個序列作為開端，輸入模型得到下一個字後，將之附在序列末，並將原序列頭一個字移除，以此新序列繼續進行預測，直到句子結束。&lt;a href=&quot;https://github.com/pyliaorachel/resurrecting-the-dead-chinese/blob/master/src/generate_text/gen.py&quot;&gt;&lt;code&gt;src/generate_text/gen.py&lt;/code&gt;&lt;/a&gt;負責文本生成。&lt;/p&gt;

&lt;p&gt;但模型給出的 output 是一個長度為 length of vocabulary 的分數 vector，要怎麼挑選下一個字呢？第一直覺是，選分數最高的，即是我寫的&lt;a href=&quot;https://github.com/pyliaorachel/resurrecting-the-dead-chinese/blob/f0cff5a5a100957a42f0a24c3e7b1b25a0a75d86/src/generate_text/gen.py&quot;&gt;第一個版本&lt;/a&gt;。但生成的結果很悲劇（十句）：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;数人民的政策，而不是为了这个人民的，是一个人民的工作，我们的工作是一个人的一个具体的工作，我们的工作是一个人，这是一个人的时候，我们就要使他们在革命中国的人民主要关系，不是要经过这种情况，在社会主义制度和国家政治工作作风，不能用正确的方法去解决。这是一个人民的政策，而是在全国的领导机关，不是为着我们的民主主义，是一个革命的政策，而是在全国的人民主要的，是在革命的政治上，在一个人民内部的矛盾，是一个人民的工作，我们的工作是一个人的一个具体的工作，我们的工作是一个人，这是一个人口作为一个革命的政策，而是在全国的领导机关，不是为着我们的民主主义，是一个革命的政策，而是在全国的人民主要的，是在革命的政治上，在一个人民内部的矛盾，是一个人民的工作，我们的工作是一个人的一个具体的工作，我们的工作是一个人，这是一个人口作为一个革命的政策...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;會發生一直重複的情況，而且產生不了句號，所以句子停不下來。大概是只要接近序列末的那幾個字相似，產出來的分數分佈也相似，因此分數最高的很可能都是同一個字。&lt;/p&gt;

&lt;p&gt;為了避免這種事發生，第二個版本（也就是以下的版本）將分數 vector 轉成機率分佈，並依照此分佈挑選下一個字。例如 vocabulary 裡有三個字 &lt;code&gt;[&amp;#39;你&amp;#39;, &amp;#39;我&amp;#39;, &amp;#39;他&amp;#39;]&lt;/code&gt;，而機率分佈是 &lt;code&gt;[0.8, 0.1, 0.1]&lt;/code&gt;，則挑選十次之中，理想中會有 8 次挑 &amp;#39;你&amp;#39;，各 1 次挑 &amp;#39;我&amp;#39; 和 &amp;#39;他&amp;#39;，而非總是挑 &amp;#39;你&amp;#39; 了。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# 隨機選擇一序列作為開端&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_patterns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;patterns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 共 n_sent 句子要生成&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_sent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 
    &lt;span class=&quot;c&quot;&gt;# 包一下 input&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;seq_in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;seq_in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seq_in&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# batch_size = 1&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;seq_in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Variable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LongTensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seq_in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# 生成此序列下一個字&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pred&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seq_in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pred&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to_prob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;softmax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pred&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# softmax 後轉成機率分佈&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;choice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chars&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pred&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;          &lt;span class=&quot;c&quot;&gt;# 依機率分佈選字&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;char_idx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;char_to_int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# 印出&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# 將字附在原序列後並移除第一個字，作為下一個 input 序列&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;char_idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# 若印出代表句子結尾的標點符號，則完成一個句子生成&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is_end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;# restart_seq 決定要不要重新挑選一個序列，或是完成一個完整段落&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;restart_seq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_patterns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;patterns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;生成的結果有大幅度的改善，下面是一些結果（參數：sequence length = 50, batch size = 32, embedding dimension = 256, hidden dimension = 256, learning rate = 0.0001, dropout = 0.2, epoch = 30; 訓練時間：5~6小時 on 2 GHz Intel Core i5 CPU）：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;在战争中否坚决地实行和全体生活的形势是错误的，那一世界有特点的人们想不另一时，愿意的指导、非英时、半成大党的估计。按照这个人，若不重视显极，而是使他们取得胜利。我也一定要君子使国家吗？可以白有的大子加制，使使他服长。难道这怎么能短良呢？则我早上怎这么样？说得到太的觉多了没才会名季厌。恶—那样里来不会自六方），不奏怨恨，我敢不敬，言语他的推子。君子恭敬仁义。帝国主义已经：说多了，不可见变愿意十五，即后，一战不能打干，就自以只是在那类里的自线之养。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;智的诸侯了，天下的交朝吗？有礼有制度，然后却是殷容易听了。马克思列宁主义者，要学习端木不是教别的方法，不可以说出发死的。了符合的主义形规定的就是无不理的，还有一问当，最简如见同同志同民族领导、干部、活化，相间工互来关头党的整风。但是还每一个整一个新干部，要看教育内部同统权力更等、干部其、活庭和巩固群众。这不是尊重那个问题，就要说弄个根据，不作任何由统一的斗争。但是在我国现在资本主义的剥削和共产党，不是很好地接受社会主义的工作方向。每一个基本作用外，结果有一个专于战役它。党的政治任务对于行动；（要有几先之礼，几然年，不允动地也会必要要使拒主观愿意。十岁伟大还有中国历史这种具体这要的。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;争，我们会主义和平国，而没有把国的人和厌恶。这样的人不宽易。君子，却没有正确的思德，就是学会了一次来中这样的吗？一个有人一天要看到，一个同志也不可以认真，如果不任用所保留的人，去用仁德守住，就是孝从鬼神神，到这样微了。在练兵，都思考情齐智百了，就不说，该容易作等；学斗争取青，不给以那就不去，全年的才能。以发挥为杀王的不能不会得彻底，他来不可以做；不而不上与，拿着我们，也将他打民主观。一定要说是不安的；言论周别的人对亲下，不吃肉，不吃。当然而推举，拿受蒋介石的圣人。宰查回果是什么事了，可以让他自己高兴的事，小人批评。不说话，这是反而不是孝悌。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;雖說生成的句子看起來比較不鬼打牆了，也看得出學習到了一些完整的詞，例如「马克思列宁主义」、「蒋介石」、「君子恭敬仁义」等，不過離正確文法還有不小差距。但因為資源有限，我沒有進行調參，有興趣的人可以試試看能不能把模型訓練的更好。&lt;/p&gt;

&lt;p&gt;分享一下演講裡 Lincler 的一些結果：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;In 1918, I am the warfare. The struggle of civilization. The only answer to absolute liberty is the destruction of the nations.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;In the wrong virtue of people, to control every point the intention of love is to demand the supremacy of the United States.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;The British people will be sad with the progressing of the United States. Distrust the economy.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;據說已經是篩選其中比較好的句子生成了。有興趣的可以聽聽看這場&lt;a href=&quot;https://www.youtube.com/watch?v=r8H1cZjCfIA&quot;&gt;演講&lt;/a&gt;（溫馨提醒：是印度腔喔）。&lt;/p&gt;

&lt;h2&gt;結語&lt;/h2&gt;

&lt;p&gt;Seq2seq 模型為文本生成提供了簡單有效的方法，也為自然語言處理界注入了更多可能性。此篇以《毛澤東語錄》和《論語》為語料，嘗試打造出矛盾的文本生成系統，雖說離可被理解的語言還有一大段差距，卻也不難看出 RNN 和 seq2seq 的潛力。此外，PyTorch 的實作相當好上手且簡單易懂，唯其剛剛崛起，網路上能找到的實例不如 TensorFlow 多，對新手來說挑戰頗多，期望未來社群發展能夠更健全囉。&lt;/p&gt;

&lt;h2&gt;參考資料&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=r8H1cZjCfIA&quot;&gt;PyCon HK 2017 - Resurrecting the dead with deep learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://research.google.com/pubs/pub45610.html&quot;&gt;Google&amp;#39;s Neural Machine Translation System: Bridging the Gap between Human and Machine Translation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.zhinengl.com/2017/01/sequence-to-sequence-learning/&quot;&gt;谷歌翻译背后的技术突破：序列到序列学习&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://harinisuresh.com/2016/10/09/lstms/&quot;&gt;Vanishing Gradients &amp;amp; LSTMs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://karpathy.github.io/2015/05/21/rnn-effectiveness/&quot;&gt;The Unreasonable Effectiveness of Recurrent Neural Networks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://colah.github.io/posts/2015-08-Understanding-LSTMs/&quot;&gt;Understanding LSTM Networks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://machinelearningmastery.com/gentle-introduction-mini-batch-gradient-descent-configure-batch-size/&quot;&gt;A Gentle Introduction to Mini-Batch Gradient Descent and How to Configure Batch Size&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://towardsdatascience.com/deep-learning-4-embedding-layers-f9a02d55ac12&quot;&gt;Deep Learning #4: Why You Need to Start Using Embedding Layers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@amarbudhiraja/https-medium-com-amarbudhiraja-learning-less-to-learn-better-dropout-in-deep-machine-learning-74334da4bfc5&quot;&gt;Dropout in (Deep) Machine learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://machinelearningmastery.com/adam-optimization-algorithm-for-deep-learning/&quot;&gt;Gentle Introduction to the Adam Optimization Algorithm for Deep Learning&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sun, 24 Dec 2017 00:00:00 +0800</pubDate>
        <link>/blog/tech/nlp/2017/12/24/resurrecting-the-dead-chinese.html</link>
        <guid isPermaLink="true">/blog/tech/nlp/2017/12/24/resurrecting-the-dead-chinese.html</guid>
        
        <category>Python</category>
        
        <category>PyTorch</category>
        
        <category>Machine Learning</category>
        
        <category>Deep Learning</category>
        
        <category>Neural Network</category>
        
        <category>Natural Language Processing</category>
        
        <category>PyLadies</category>
        
        
        <category>Blog</category>
        
        <category>Tech</category>
        
        <category>NLP</category>
        
      </item>
    
      <item>
        <title>深度學習新手村：PyTorch入門</title>
        <description>&lt;p&gt;深度學習新手在從學校、網路、或書中習得基礎神經網絡知識後，手癢想建立專案體現深度學習的威力之前，得先決定要玩哪一套深度學習框架。&lt;a href=&quot;https://www.tensorflow.org/&quot;&gt;TensorFlow&lt;/a&gt; 無疑是近來相當火紅的一個，其由 Google 開源，近年來已建立龐大社群基礎。&lt;/p&gt;

&lt;p&gt;但 2017 年初由 Facebook 開源的另一套建立在 &lt;a href=&quot;http://torch.ch/&quot;&gt;Torch&lt;/a&gt; 之上的深度學習框架 &lt;a href=&quot;http://pytorch.org/&quot;&gt;PyTorch&lt;/a&gt; 因其語法簡潔優雅、概念直觀和易上手的特性，甫推出便迅速走紅，儼然已成為瓜分深度學習市場的有力競爭者。藉由這樣的優勢，此篇將引領深度學習新手入門 PyTorch ，簡述其核心概念，並以深度學習領域的 Hello World! 專案 -- MNIST 手寫數字辨識為例，直接帶大家理解 PyTorch 如何打造模型及進行深度學習。&lt;/p&gt;

&lt;!--more--&gt;

&lt;hr&gt;

&lt;p&gt;&lt;em&gt;* 請注意，此篇 PyTorch 建立在 Python3 之上，並以 MacOSX 為環境。&lt;/em&gt;&lt;br&gt;
&lt;em&gt;* 預備知識：基礎神經網絡 &amp;amp; 反向傳播算法（Backpropagation）概念&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://pytorch.org/&quot;&gt;PyTorch&lt;/a&gt; 為 Facebook 在 2017 年初開源的深度學習框架，其建立在 &lt;a href=&quot;http://torch.ch/&quot;&gt;Torch&lt;/a&gt; 之上，且標榜 Python First ，為量身替 Python 語言所打造，使用起來就跟寫一般 Python 專案沒兩樣，也能和其他 Python 套件無痛整合。PyTorch 的優勢在於其概念相當直觀且語法簡潔優雅，因此視為新手入門的一個好選項；再來其輕量架構讓模型得以快速訓練且有效運用資源 [1]。&lt;/p&gt;

&lt;p&gt;網路上已有很多詳盡教學手把手帶你認識 PyTorch 的基本語法，例如&lt;a href=&quot;http://pytorch.org/tutorials/&quot;&gt;官方文件&lt;/a&gt;或&lt;a href=&quot;https://github.com/rguthrie3/DeepLearningForNLPInPytorch/blob/master/Deep%20Learning%20for%20Natural%20Language%20Processing%20with%20Pytorch.ipynb&quot;&gt;社群力量&lt;/a&gt;，這邊就只簡述概念，語法部分則藉由後面 MNIST 實作直接攻破。&lt;/p&gt;

&lt;h2&gt;PyTorch 核心概念&lt;/h2&gt;

&lt;p&gt;首先，讓我們來抓住 PyTorch 精髓吧！&lt;/p&gt;

&lt;h4&gt;基本元素：&lt;code&gt;Tensor&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;一個 Tensor（張量）類似一個高維度向量，也是深度學習裡進行運算的基本元素。這裡比數學上的意義還要廣義，所以可以把它當成任意維度的資料向量。既然此文假設讀者已有基本神經網絡知識，那為什麼 Tensor 會是基本元素應該不難理解吧。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://pytorch.org/docs/master/tensors.html#torch.Tensor&quot;&gt;&lt;code&gt;torch.Tensor&lt;/code&gt;&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;創建 Tensor，可包任意維度向量&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://pytorch.org/docs/master/torch.html#torch.randn&quot;&gt;&lt;code&gt;torch.randn&lt;/code&gt;&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;創建 Tensor，data 隨機&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x1 + x2&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;兩個 Tensor 相加&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://pytorch.org/docs/master/torch.html#torch.cat&quot;&gt;&lt;code&gt;torch.cat&lt;/code&gt;&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;串聯（concatenate）Tensor&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://pytorch.org/docs/master/tensors.html#torch.Tensor.view&quot;&gt;&lt;code&gt;x.view&lt;/code&gt;&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;重塑（reshape）Tensor 維度&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Computational Graph&lt;/h4&gt;

&lt;p&gt;Computational graph 讓你定義 data 要怎麼銜接組合才能取得 output、其中有哪些 parameter、有哪些 activation function 等等，總之你的 model 要運算導數（derivative）及梯度（gradient）需要的資訊都在裡頭。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://pytorch.org/docs/master/autograd.html&quot;&gt;&lt;code&gt;torch.autograd&lt;/code&gt;&lt;/a&gt; 是一個幫你把跟微分有關的事都處理好的重要套件。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://pytorch.org/docs/master/autograd.html#torch.autograd.Variable&quot;&gt;&lt;code&gt;autograd.Variable&lt;/code&gt;&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;上述基本元素 Tensor 其實只有告訴你裡頭的 data 和他的 shape，這些是不足夠整個 graph 運算 derivative 的。&lt;code&gt;autograd.Variable&lt;/code&gt; 是打包 Tensor 和一些額外資訊的元件，例如 &lt;code&gt;z&lt;/code&gt; 是 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 相加而成，那麼用 &lt;code&gt;autograd.Variable&lt;/code&gt; 處理 &lt;code&gt;z&lt;/code&gt; 能夠記錄這個&lt;strong&gt;相加&lt;/strong&gt;的資訊，而非單純把 &lt;code&gt;x+y&lt;/code&gt; 的&lt;strong&gt;結果&lt;/strong&gt;記下；如此一來才能運算 derivative。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://pytorch.org/docs/master/autograd.html#torch.autograd.Variable.backward&quot;&gt;&lt;code&gt;x.backward&lt;/code&gt;&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;從 &lt;code&gt;x&lt;/code&gt; 開始實施 backpropagation 魔法&lt;/li&gt;
&lt;li&gt;被掃到的 variable &lt;code&gt;y&lt;/code&gt; 其 gradient 會在 &lt;code&gt;y.grad&lt;/code&gt; 裡累積&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Functions&lt;/h4&gt;

&lt;p&gt;神經網絡需要用到很多 function，例如 activation function、loss function 等等。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://pytorch.org/docs/master/nn.html&quot;&gt;&lt;code&gt;torch.nn&lt;/code&gt;&lt;/a&gt; 提供了很多 neural network 需要的功能和元件，而&lt;a href=&quot;http://pytorch.org/docs/master/nn.html#torch-nn-functional&quot;&gt;&lt;code&gt;torch.nn.functional&lt;/code&gt;&lt;/a&gt; 也提供了很多常用 function。兩者差別在於， &lt;code&gt;torch.nn.functional&lt;/code&gt; 提供的是純函數，而 &lt;code&gt;torch.nn&lt;/code&gt; 提供的是一個包裝完整的 &lt;code&gt;nn.Module&lt;/code&gt;（也就是可以直接跟其它 function 鏈結起來拿去訓練了）。&lt;/p&gt;

&lt;p&gt;API 基本上就是 function 名字，&lt;code&gt;Linear&lt;/code&gt;、&lt;code&gt;ReLU&lt;/code&gt;、&lt;code&gt;Sigmoid&lt;/code&gt; 之類，很簡單。&lt;/p&gt;

&lt;h4&gt;Training &amp;amp; Optimizer&lt;/h4&gt;

&lt;p&gt;從上面 &lt;code&gt;autograd.Variable&lt;/code&gt; 的介紹裡得知 gradient 已經有辦法算出來了，那算出來後就能以此更新參數，也就是我們能進行模型訓練了。不過深度學習裡還有一些竅門，能大大的優（複雜）化這些學習過程，例如 learning rate 的動態適應、每多少訓練資料要更新參數一次等等，這些演算法的選擇就是&lt;strong&gt;優化器（Optimizer）&lt;/strong&gt;的選擇。&lt;/p&gt;

&lt;p&gt;不過既然我們在新手村，只要知道通常矇著眼選一個能得到更好的效果就行了。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://pytorch.org/docs/master/optim.html&quot;&gt;&lt;code&gt;torch.optim&lt;/code&gt;&lt;/a&gt; 裡陳列了很多 optimizer，常用的例如 &lt;code&gt;SGD&lt;/code&gt;、&lt;code&gt;Adam&lt;/code&gt;、&lt;code&gt;RMSprop&lt;/code&gt; 等等。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://pytorch.org/docs/master/optim.html#optimizer-step&quot;&gt;&lt;code&gt;o.step&lt;/code&gt;&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;更新參數&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;建立 Neural Network&lt;/h4&gt;

&lt;p&gt;終於能來打造 neural network model 了。基本上這個 model 就是一個 class 繼承 &lt;a href=&quot;http://pytorch.org/docs/master/nn.html#torch.nn.Module&quot;&gt;&lt;code&gt;torch.nn.Module&lt;/code&gt;&lt;/a&gt;，只要 override &lt;code&gt;__init__&lt;/code&gt; 和 &lt;code&gt;forward&lt;/code&gt; 就能定義這個 model。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;__init__&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;定義 model 中需要的參數，weight、bias 等等&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://pytorch.org/docs/master/nn.html#torch.nn.Module.forward&quot;&gt;&lt;code&gt;forward&lt;/code&gt;&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;定義 model 接收 input 時，data 要怎麼傳遞、經過哪些 activation function 等等&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;以 PyTorch 打造 MNIST 手寫數字辨識模型&lt;/h2&gt;

&lt;p&gt;前半部分只是介紹一下這個那個在幹嘛、有哪些 API，現在就來實際訓練一個模型吧。&lt;a href=&quot;http://yann.lecun.com/exdb/mnist/&quot;&gt;MNIST&lt;/a&gt; 是一套手寫數字的訓練集，在機器學習界的重要性堪比程式語言的 Hello World! [9] 官方也有提供範例程式。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://corochann.com/wp-content/uploads/2017/02/mnist_plot.png&quot; alt=&quot;MNIST&quot;&gt;&lt;/p&gt;

&lt;p&gt;接下來就是把官方範例去蕪存菁（簡化模型、省略 CUDA 等）、模組化、加上詳細註解、並提供一個互動介面供自行測試，一起用 PyTorch 和 MNIST 入門深度學習。&lt;/p&gt;

&lt;h6&gt;環境設置 &amp;amp; 安裝套件&lt;/h6&gt;

&lt;p&gt;&lt;a href=&quot;http://pytorch.org/&quot;&gt;PyTorch&lt;/a&gt; 官網就跟 PyTorch 本身一樣優雅直觀得沒話說。上去選好你的環境設置，下載套件吧！&lt;/p&gt;

&lt;h6&gt;理解模型&lt;/h6&gt;

&lt;p&gt;Backpropagation 是常見訓練神經網絡的演算法，包含這些基本步驟：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;取得資料集，每筆資料包成 &lt;code&gt;(input, target output)&lt;/code&gt; 形式&lt;/li&gt;
&lt;li&gt;建立模型

&lt;ol&gt;
&lt;li&gt;定義神經網絡中有哪幾層，形狀是如何&lt;/li&gt;
&lt;li&gt;定義資料往前傳遞所需經過的 function，例如 activation function、loss function 等&lt;/li&gt;
&lt;li&gt;挑選 optimizer 和其所需參數，例如 learning rate&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;訓練模型

&lt;ol&gt;
&lt;li&gt;初始化參數&lt;/li&gt;
&lt;li&gt;把 input 通過網絡往前傳（Forward propagation），取得預測 output&lt;/li&gt;
&lt;li&gt;計算 error（目標和預測結果的差距）&lt;/li&gt;
&lt;li&gt;把 error 往回傳（Backward propagation），一一計算每個參數對此 error 的貢獻（取導數）&lt;/li&gt;
&lt;li&gt;更新參數，對 error 貢獻越多處罰越多&lt;/li&gt;
&lt;li&gt;如果 error 過大，重複步驟 2. 至 5.，直到 error 小到可接受，或自己設定要循環幾次（幾個 epoch）&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;儲存模型&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;俗話說，最好的註解就是程式本身。因為 PyTorch 這點做得很好了，我甚至覺得自己的註解相當多餘（還是加減看啦）。請大家自行閱讀&lt;a href=&quot;https://github.com/pyliaorachel/pytorch-mnist-interactive&quot;&gt;完整程式 + 註解&lt;/a&gt;，細節就不再贅述了。&lt;/p&gt;

&lt;h6&gt;實際訓練&lt;/h6&gt;

&lt;ol&gt;
&lt;li&gt;官方範例

&lt;ul&gt;
&lt;li&gt;不想看我註解廢話的可以直接至&lt;a href=&quot;https://github.com/pytorch/examples/tree/master/mnist&quot;&gt;官方範例&lt;/a&gt;下載乾淨的程式，按照上面的步驟跑。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;模組化程式

&lt;ul&gt;
&lt;li&gt;想要在訓練好模型後實際調用來預測自己的手寫圖片體會那感動瞬間的，可以下載&lt;a href=&quot;https://github.com/pyliaorachel/pytorch-mnist-interactive&quot;&gt;敝範例&lt;/a&gt;，按照指示跑。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;途中會 log 一些訊息，告訴你現在的 error 降到多少、準確率提升到多高等等。如果想要自己調參數，在執行指令加上一些 option 即可。&lt;/p&gt;

&lt;h6&gt;訓練結果&lt;/h6&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/pyliaorachel/pytorch-mnist-interactive/blob/master/img/training_log.png?raw=true&quot; alt=&quot;log&quot;&gt;&lt;/p&gt;

&lt;p&gt;跑了10個 epoch 的結果準確率到達99%，還行。有興趣的可以自己調調參數、自己給測資等等。&lt;/p&gt;

&lt;h2&gt;結語&lt;/h2&gt;

&lt;p&gt;PyTorch 入門概念有了之後，是不是覺得語法相當直觀、對新手相當友善？除了電腦視覺和 CNN，也可以用 RNN 玩玩看&lt;a href=&quot;https://github.com/rguthrie3/DeepLearningForNLPInPytorch/blob/master/Deep%20Learning%20for%20Natural%20Language%20Processing%20with%20Pytorch.ipynb&quot;&gt;自然語言處理&lt;/a&gt;。有了這些基礎之後，自己踹踹其它或更大型的深度訓練模型，就能領取勳章揮別新手村啦。&lt;/p&gt;

&lt;h2&gt;參考資料&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/pytorch/pytorch&quot;&gt;GitHub pytorch/pytorch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://pytorch.org/tutorials/&quot;&gt;PyTorch Tutorials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rguthrie3/DeepLearningForNLPInPytorch/blob/master/Deep%20Learning%20for%20Natural%20Language%20Processing%20with%20Pytorch.ipynb&quot;&gt;Deep Learning for Natural Language Processing with Pytorch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ritchieng/the-incredible-pytorch&quot;&gt;GitHub ritchieng/the-incredible-pytorch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jcjohnson/pytorch-examples&quot;&gt;GitHub jsjohnson/pytorch-examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yunjey/pytorch-tutorial&quot;&gt;GitHub yunjey/pytorch-tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://yann.lecun.com/exdb/mnist/&quot;&gt;MNIST Dataset&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://xmfbit.github.io/2017/03/04/pytorch-mnist-example/&quot;&gt;toy demo - PyTorch + MNIST&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.tensorflow.org/get_started/mnist/beginners&quot;&gt;MNIST For ML Beginners (TensorFlow)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://yashk2810.github.io/Applying-Convolutional-Neural-Network-on-the-MNIST-dataset/&quot;&gt;Applying Convolutional Neural Network on the MNIST dataset&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.jiqizhixin.com/articles/2017-10-09-4&quot;&gt;四天速成！香港科技大学 PyTorch 课件分享&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/27382990&quot;&gt;【pytorch】图像基本操作&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;補充資料&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://cs231n.stanford.edu/vecDerivs.pdf&quot;&gt;Vector, Matrix, and Tensor Derivatives&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/towards-data-science/types-of-optimization-algorithms-used-in-neural-networks-and-ways-to-optimize-gradient-95ae5d39529f&quot;&gt;Types of Optimization Algorithms used in Neural Networks and Ways to Optimize Gradient Descent&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Mon, 16 Oct 2017 00:00:00 +0800</pubDate>
        <link>/blog/tech/deeplearning/2017/10/16/getting-started-with-deep-learning-with-pytorch.html</link>
        <guid isPermaLink="true">/blog/tech/deeplearning/2017/10/16/getting-started-with-deep-learning-with-pytorch.html</guid>
        
        <category>Python</category>
        
        <category>PyTorch</category>
        
        <category>Machine Learning</category>
        
        <category>Deep Learning</category>
        
        <category>Neural Network</category>
        
        <category>Computer Vision</category>
        
        <category>PyLadies</category>
        
        
        <category>Blog</category>
        
        <category>Tech</category>
        
        <category>DeepLearning</category>
        
      </item>
    
      <item>
        <title>Python的import陷阱</title>
        <description>&lt;p&gt;在脫離Python幼幼班準備建立稍大型的專案的時候，學習如何組織化你的Python專案是一大要點。Python提供的&lt;strong&gt;module（模組）&lt;/strong&gt;與&lt;strong&gt;package（套件）&lt;/strong&gt;是建立架構的基本元件，但在module之間為了重複使用一些function（函數）或class（類別）而必須互相&lt;strong&gt;import（匯入）&lt;/strong&gt;，使用上一個不注意就會掉入混亂的import陷阱。&lt;/p&gt;

&lt;p&gt;此篇將會從基本module和package介紹起，提點基本import語法及absolute import和relative import的用法與差異，最後舉出幾個常見因為錯誤import觀念造成的錯誤。&lt;/p&gt;

&lt;!--more--&gt;

&lt;hr&gt;

&lt;p&gt;&lt;em&gt;* 請注意，以下只針對Python3進行講解與測試。&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;Module與Package&lt;/h2&gt;

&lt;p&gt;基本上一個file就是一個module，裡頭可以定義function，class，和variable。&lt;br&gt;
把一個module想成一個file，那一個package就是一個folder了。Package可裝有subpackage和module，讓你的專案更條理更組織化，最後一坨打包好還能分給別人使用。&lt;/p&gt;

&lt;p&gt;先看看module。假設有一個module &lt;code&gt;sample_module.py&lt;/code&gt; 裡頭定義了一個function &lt;code&gt;sample_func&lt;/code&gt; ：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sample_func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Hello!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;現在你在同一個目錄裡下有另一個module &lt;code&gt;sample_module_import.py&lt;/code&gt; 想要重複使用這個function，這時可以直接從 &lt;code&gt;sample_module&lt;/code&gt; import拿取：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sample_module&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sample_func&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__main__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sample_func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;跑 &lt;code&gt;python3 sample_module_import.py&lt;/code&gt; 會得到：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Hello!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;再來是package。我們把上面兩個檔案包在一個新的folder &lt;code&gt;sample_package&lt;/code&gt; 底下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sample_package/
├── __init__.py
├── sample_module.py
└── sample_module_import.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;很重要的是新增那個 &lt;code&gt;__init__.py&lt;/code&gt; 檔。它是空的沒關係，但一定要有，有點宣稱自己是一個package的味道。&lt;/p&gt;

&lt;p&gt;這時候如果是進到 &lt;code&gt;sample_package&lt;/code&gt; 裡面跑一樣的指令，那沒差。但既然都打包成package了，通常是需要在package以外的地方下指令的，這時候裡面的import就要稍微做因應。&lt;/p&gt;

&lt;p&gt;假設這時我們在跟 &lt;code&gt;sample_package&lt;/code&gt; 同一個folder底下，讓我們修正一下 &lt;code&gt;sample_package/sample_module_import.py&lt;/code&gt; ：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;s&quot;&gt;'''跑在`sample_package`底下（非常見情況）'''&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# from sample_module import sample_func&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;'''跑在跟`sample_package`同folder底下'''&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;.sample_module&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sample_func&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'''或'''&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# from sample_package.sample_module import sample_func&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__main__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sample_func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;這邊兩種解來自於absolute import和relative import的選擇，等等再提。總之我們可以跑了：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;python3 -m sample_package.sample_module_import
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;修好了。這邊&lt;a href=&quot;https://docs.python.org/2/using/cmdline.html#cmdoption-m&quot;&gt;&lt;code&gt;-m&lt;/code&gt;&lt;/a&gt;是為了讓Python先import你要的package或module給你，然後再執行script。所以這邊 &lt;code&gt;sample_module_import&lt;/code&gt; 在跑的時候，是以 &lt;code&gt;sample_package&lt;/code&gt; 為環境的，這樣那些import才不會出錯。&lt;/p&gt;

&lt;h2&gt;基本import語法&lt;/h2&gt;

&lt;p&gt;前面有看過了，這邊統整介紹一下。如果你想使用在其他module裡定義的function、class、variable等等，就需要在使用它們之前先進行import。通常都會把需要import的module們列在整個file的最一開始，但不是必須。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;s&quot;&gt;'''語法1：import [module]'''&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Import整個`random`module&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 使用`random`module底下的`randint`function&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;'''語法2：from [module] import [name1, name2, ...]'''&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 從`random`module裡import其中一個function`randint`&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt; 

&lt;span class=&quot;c&quot;&gt;# 不一樣的是，使用`randint`的時候就不需要先寫`random`了&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;'''語法3：import [module] as [new_name]'''&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Import整個`random`module，但這個名字可能跟其他地方有衝突，改名成`rd`&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;rd&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 使用`rd`這個名稱取代原本的`random`&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;'''語法4（不推薦）：from [module] import *'''&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Import所有`random`module底下的東西&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 使用`randint`的時候也不需要先寫`random`&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;語法4不推薦原因是容易造成名稱衝突，降低可讀性和可維護性。&lt;/p&gt;

&lt;h2&gt;Absolute Import v.s. Relative Import&lt;/h2&gt;

&lt;p&gt;Python有兩種import方法，&lt;strong&gt;absolute import&lt;/strong&gt;及&lt;strong&gt;relative import&lt;/strong&gt;。Absolute import就是完整使用module路徑，relative import則是使用以當前package為參考的相對路徑。Relative import的需求在於，有時候在改變專案架構的時候，裡面的package和module會拉來拉去，這時候如果這些package裡面使用的是relative import的話，他們的相對關係就不會改變，也就是不需要再一一進入module裡更改路徑。但因為relative import的路徑取決於當前package，所以在哪裡執行就會造成不一樣的結果，一不小心又要噴一堆error；這時absolute import就會減少許多困擾。&lt;/p&gt;

&lt;p&gt;這邊參考&lt;a href=&quot;https://www.python.org/dev/peps/pep-0328/#guido-s-decision&quot;&gt;PEP328&lt;/a&gt;提供的範例。Package架構如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;package/
    __init__.py
    subpackage1/
        __init__.py
        moduleX.py
        moduleY.py
    subpackage2/
        __init__.py
        moduleZ.py
    moduleA.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;現在假設&lt;code&gt;package/subpackage1/moduleX.py&lt;/code&gt;想要從其他module裡import一些東西，則使用下列語法：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;s&quot;&gt;'''[A]表Absolute import範例；[R]表Relative import範例'''&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Import同一個package底下的sibling module `moduleY`&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;package.subpackage1&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;moduleY&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;moduleY&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;.moduleY&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 從同一個package底下的sibling module `moduleY` import `spam`這個function&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;package.subpackage1.moduleY&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spam&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;.moduleY&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spam&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 從隔壁package底下的module `moduleZ` import `eggs`這個function&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;package.subpackage2.moduleZ&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eggs&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;..subpackage2.moduleZ&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eggs&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Import parent package底下的module `moduleA`&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;moduleA&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;..&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;moduleA&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;或&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;...package&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;moduleA&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;要點：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Relative import裡，&lt;code&gt;.&lt;/code&gt;代表上一層，幾個&lt;code&gt;.&lt;/code&gt;就代表上幾層。&lt;/li&gt;
&lt;li&gt;Relative import一律採用 &lt;code&gt;from ... import ...&lt;/code&gt; 語法，即使是從 &lt;code&gt;.&lt;/code&gt; import也要寫 &lt;code&gt;from . import some_module&lt;/code&gt; 而非 &lt;code&gt;import .some_module&lt;/code&gt;。原因是&lt;code&gt;.some_module&lt;/code&gt;這個名稱在expression裡無法出現。Absolute import則無限制。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;常見import陷阱&lt;/h2&gt;

&lt;h4&gt;Circular Import&lt;/h4&gt;

&lt;p&gt;想像一個module &lt;code&gt;A&lt;/code&gt; 在一開始要import另一個module &lt;code&gt;B&lt;/code&gt; 裡的東西，但在匯入module &lt;code&gt;B&lt;/code&gt; 的途中必須先執行它，而很不巧的它也需要從module &lt;code&gt;A&lt;/code&gt; import一些東西。但module &lt;code&gt;A&lt;/code&gt;還正在執行途中，自己都還沒定義好自己的function啊！於是你不讓我我不讓你，這種類似deadlock的情形正是常見的&lt;strong&gt;circular import（循環匯入）&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;讓我們看看範例。現在在 &lt;code&gt;sample_package&lt;/code&gt; 裡有 &lt;code&gt;A&lt;/code&gt; 和 &lt;code&gt;B&lt;/code&gt; 兩個module想互打招呼，程式碼分別如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# A.py&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;.B&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B_greet_back&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;A_say_hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'A says hello!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;B_greet_back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;A_greet_back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'A says hello back!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__main__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;A_say_hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# B.py&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;.A&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_greet_back&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;B_say_hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'B says hello!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;A_greet_back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;B_greet_back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'B says hello back!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__main__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;B_say_hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;內容都一樣，只是&lt;code&gt;A/B&lt;/code&gt;互換。&lt;code&gt;B&lt;/code&gt; 很有禮貌想先打招呼。在與 &lt;code&gt;sample_package&lt;/code&gt; 同目錄底下執行：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;python3 -m sample_package.B

&amp;gt;&amp;gt;&amp;gt;
Traceback &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;most recent call last&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:
  File &lt;span class=&quot;s2&quot;&gt;&quot;/usr/local/Cellar/python3/3.6.2/Frameworks/Python.framework/Versions/3.6/lib/python3.6/runpy.py&quot;&lt;/span&gt;, line 193, &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;_run_module_as_main
    &lt;span class=&quot;s2&quot;&gt;&quot;__main__&quot;&lt;/span&gt;, mod_spec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  File &lt;span class=&quot;s2&quot;&gt;&quot;/usr/local/Cellar/python3/3.6.2/Frameworks/Python.framework/Versions/3.6/lib/python3.6/runpy.py&quot;&lt;/span&gt;, line 85, &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;_run_code
    &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;code, run_globals&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  File &lt;span class=&quot;s2&quot;&gt;&quot;/path/to/sample_package/B.py&quot;&lt;/span&gt;, line 2, &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;
    from .A import A_greet_back
  File &lt;span class=&quot;s2&quot;&gt;&quot;/path/to/sample_package/A.py&quot;&lt;/span&gt;, line 1, &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;
    from .B import B_greet_back
  File &lt;span class=&quot;s2&quot;&gt;&quot;/path/to/sample_package/B.py&quot;&lt;/span&gt;, line 2, &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;
    from .A import A_greet_back
ImportError: cannot import name &lt;span class=&quot;s1&quot;&gt;'A_greet_back'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;觀察到了嗎？&lt;code&gt;B&lt;/code&gt; 試圖import &lt;code&gt;A_greet_back&lt;/code&gt;，但途中先進到 &lt;code&gt;A&lt;/code&gt; 執行，而因為Python是從頭開始一行一行執行下來的，於是在定義 &lt;code&gt;A_greet_back&lt;/code&gt; 之前會先碰到自己的import statement，於是又進入 &lt;code&gt;B&lt;/code&gt;，然後陷入死胡同。&lt;/p&gt;

&lt;p&gt;常見解決這種circular import的方法如下：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Import整個module而非單一attribute  &lt;/p&gt;

&lt;p&gt;把 &lt;code&gt;B.py&lt;/code&gt; 更改成如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# from .A import A_greet_back&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;B_say_hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'B says hello!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# A_greet_back()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A_greet_back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;就不會發生錯誤：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;python3 -m sample_package.B

&amp;gt;&amp;gt;&amp;gt;
B says hello!
A says hello back!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;理由是，執行 &lt;code&gt;from .A import A_greet_back&lt;/code&gt; 被迫要從load進來的 &lt;code&gt;A&lt;/code&gt; module object中找出 &lt;code&gt;A_greet_back&lt;/code&gt; 的定義，但此時這個module object還是空的；而 &lt;code&gt;from . import A&lt;/code&gt; 就只會檢查 &lt;code&gt;A&lt;/code&gt; module object 存不存在，至於 &lt;code&gt;A_greet_back&lt;/code&gt; 存不存在等到需要執行的時候再去找就行了。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;延遲import  &lt;/p&gt;

&lt;p&gt;把 &lt;code&gt;B.py&lt;/code&gt; 更改成如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# 前面全刪&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;B_say_hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;.A&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_greet_back&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'B says hello!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;A_greet_back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;也會成功跑出結果。跟前面類似，Python在跑到這行時才會import &lt;code&gt;A&lt;/code&gt; module，這時因為 &lt;code&gt;B&lt;/code&gt; module都已經load完了，所以不會有circular import的問題。但這個方法比較hacky一點，大概只能在hackathon中使用，否則正式專案裡看到這種難維護的code可能會有生命危險。 &lt;/p&gt;

&lt;p&gt;另一方面，把所有import statement擺到整個module最後面也是類似效果，但也會被打。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;好好釐清架構，避免circular import&lt;/p&gt;

&lt;p&gt;是的，治本方法還是好好思考自己寫的code為什麼會陷入這種危機，然後重新refactor吧。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;Relative Import above Top-level Package&lt;/h4&gt;

&lt;p&gt;還不熟悉relative import的人常常會見到這個error：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ValueError: attempted relative import beyond top-level package
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;讓我們重現一下這個error。把 &lt;code&gt;B.py&lt;/code&gt; 前頭更改成如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# from . import A&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;..sample_package&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;現在我們的路徑位置在與 &lt;code&gt;sample_package&lt;/code&gt; 同目錄底下。跑：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;python3 -m sample_package.B

&amp;gt;&amp;gt;&amp;gt;
Traceback &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;most recent call last&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:
  File &lt;span class=&quot;s2&quot;&gt;&quot;/usr/local/Cellar/python3/3.6.2/Frameworks/Python.framework/Versions/3.6/lib/python3.6/runpy.py&quot;&lt;/span&gt;, line 193, &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;_run_module_as_main
    &lt;span class=&quot;s2&quot;&gt;&quot;__main__&quot;&lt;/span&gt;, mod_spec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  File &lt;span class=&quot;s2&quot;&gt;&quot;/usr/local/Cellar/python3/3.6.2/Frameworks/Python.framework/Versions/3.6/lib/python3.6/runpy.py&quot;&lt;/span&gt;, line 85, &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;_run_code
    &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;code, run_globals&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  File &lt;span class=&quot;s2&quot;&gt;&quot;/path/to/sample_package/B.py&quot;&lt;/span&gt;, line 5, &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;
    from ..sample_package import A
ValueError: attempted relative import beyond top-level package
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;所謂的 &lt;code&gt;top-level package&lt;/code&gt; 就是你所執行的package中最高的那一層，也就是 &lt;code&gt;sample_package&lt;/code&gt;。超過這一層的relative import是不被允許的，指的就是 &lt;code&gt;..sample_package&lt;/code&gt; 這行嘗試跳兩層上去而超過 &lt;code&gt;sample_package&lt;/code&gt;了。  &lt;/p&gt;

&lt;p&gt;可以試試更改當前目錄到上一層（&lt;code&gt;cd ..&lt;/code&gt;），假設叫 &lt;code&gt;parent_folder&lt;/code&gt; ，然後執行 &lt;code&gt;python3 -m parent_folder.sample_package.B&lt;/code&gt;，就會發現error消失了，因為現在的 &lt;code&gt;top-level package&lt;/code&gt; 已經變成 &lt;code&gt;parent_folder&lt;/code&gt;了。&lt;/p&gt;

&lt;h2&gt;結語&lt;/h2&gt;

&lt;p&gt;Import是各大語言必備功能，看似簡單，使用上來說陷阱卻頗多。如果搞不清楚Python中的import是怎麼運作的，除了在整體專案架構上難以靈活設計，更可能要陷入可怕的error海了。&lt;/p&gt;

&lt;p&gt;我寫了一些額外的sample code放上&lt;a href=&quot;https://github.com/pyliaorachel/python-import-traps&quot;&gt;github&lt;/a&gt;了，有不清楚的地方可以直接參考。&lt;/p&gt;

&lt;h2&gt;參考資料&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.python.org/2/tutorial/modules.html&quot;&gt;Python Documentation - Modules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.python.org/3/reference/import.html&quot;&gt;Python Documnetation - the Import System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.tutorialspoint.com/python/python_modules.htm&quot;&gt;tutorialspoint - Python Modules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.python.org/dev/peps/pep-0328/#guido-s-decision&quot;&gt;PEP328 -- Imports: Multi-Line and Absolute/Relative&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://effbot.org/zone/import-confusion.htm&quot;&gt;Importing Python Modules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.blog.pythonlibrary.org/2016/03/01/python-101-all-about-imports/&quot;&gt;Python 101: All about imports&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 15 Sep 2017 00:00:00 +0800</pubDate>
        <link>/blog/tech/python/2017/09/15/pythons-import-trap.html</link>
        <guid isPermaLink="true">/blog/tech/python/2017/09/15/pythons-import-trap.html</guid>
        
        <category>Python</category>
        
        <category>PyLadies</category>
        
        
        <category>Blog</category>
        
        <category>Tech</category>
        
        <category>Python</category>
        
      </item>
    
      <item>
        <title>Getting Started with Docker Running Flask, RedisDB, and NGINX</title>
        <description>&lt;p&gt;&lt;strong&gt;Docker&lt;/strong&gt; is a trending term nowadays. 
The concept is called container, which provides isolation for different applications and
makes possible for the application to be shipped and run on a diversity of platforms.&lt;/p&gt;

&lt;p&gt;In this tutorial, the basic concepts of Docker will be covered, some basic commands introduced, and finally a tutorial on
how to deploy a &lt;strong&gt;Flask&lt;/strong&gt; app connected to a &lt;strong&gt;Redis&lt;/strong&gt; database and served on &lt;strong&gt;NGINX&lt;/strong&gt; with docker network will be covered.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2&gt;Content&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Introducing Docker &amp;amp; Setup&lt;/li&gt;
&lt;li&gt;Basic Commands&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Hands On Time: A Flask Project on Docker&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;Introducing Docker&lt;/h2&gt;

&lt;h4&gt;The Purpose of Containers&lt;/h4&gt;

&lt;p&gt;For biginners, you can think of &lt;strong&gt;container&lt;/strong&gt; as a &lt;strong&gt;virtual machine&lt;/strong&gt;, or even just a machine. 
The underlying infrastructure and mechanism is of course not the same, but you will know the purpose of using containers: &lt;strong&gt;running applications independently&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;For developers, you often bump into the problem when you want to ship a single application to a different platform 
-- everything regarding the environment might need to be reconfigured again, which means another round of pain. 
With docker, all the dependencies are packed together with the code into a single container, which you can just lift and go.&lt;/p&gt;

&lt;p&gt;Unlike bulky VMs, which include the entire OS kernel, containers are more lightweight and require less resource.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://www.docker.com/sites/default/files/Container%402x.png&quot; alt=&quot;container infrastructure&quot; width=&quot;300px&quot; height=&quot;300px&quot; /&gt;
  &lt;img src=&quot;https://www.docker.com/sites/default/files/VM%402x.png&quot; alt=&quot;vm infrastructure&quot; width=&quot;300px&quot; height=&quot;300px&quot; /&gt;
&lt;/p&gt;

&lt;h4&gt;Setup&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.docker.com/get-started/#setup&quot;&gt;Install &amp;amp; Setup Docker&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.docker.com/compose/install/&quot;&gt;Install Docker Compose&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;Glossary&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://hub.docker.com/&quot;&gt;DockerHub&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;A place for sharing images&lt;/strong&gt;.
Share your image, or pull existing images from here.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.docker.com/engine/userguide/storagedriver/imagesandcontainers/&quot;&gt;Image&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;A package including code, libraries, environment variables, and config files that can be run&lt;/strong&gt;.
Think of it as a set of configurations for a single environment. Hence images can be created, downloaded, shared, etc.
All it waits for is to be executed, which becomes a container.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.docker.com/engine/userguide/storagedriver/imagesandcontainers/&quot;&gt;Container&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;A running instance of an image&lt;/strong&gt;.
Images are configurations residing in storage, and containers bring them into memory.
Think of &lt;strong&gt;image&lt;/strong&gt; as a certain static environment configuration, and &lt;strong&gt;containers&lt;/strong&gt; are created once you load and run the environment; there can be many container instances running a certain image, but one image defines only one environment.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.docker.com/engine/swarm/how-swarm-mode-works/services/&quot;&gt;Service&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;An image for a microservice in the context of some larger applications which you with to run in distributed environment&lt;/strong&gt;. You can scale services by starting a set of replicated containers. Docker compose is used to define a set of services.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.docker.com/engine/tutorials/dockervolumes/#data-volumes&quot;&gt;Volume&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;A directory providing persistent and sharable data&lt;/strong&gt;.
With out volumes, data will be destroyed once the container is removed.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.docker.com/get-started/part2/#dockerfile&quot;&gt;Dockerfile&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;An environment configuration file for starting your container.&lt;/strong&gt; 
The file is composed of a set of instructions related to setting up the environment, 
such as &lt;em&gt;move this and that to docker&lt;/em&gt;, &lt;em&gt;make this and that port accessible&lt;/em&gt;, &lt;em&gt;run this and that commands when starting&lt;/em&gt;, etc.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.docker.com/engine/userguide/networking/&quot;&gt;Docker Network&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;A mechanism for a cluster of containers to communicate with each other.&lt;/strong&gt; 
For a single project, it may contain several containers, one for web app, one for database, one for proxy server, etc.
Docker network provides a way for them to communicate with each other, while different docker networks remain isolated. More conveniently, while the IP address of each container is dynamic, the name of it in a network is static, hence provide a way to access, for example, container &lt;code&gt;example&lt;/code&gt; with port &lt;code&gt;8080&lt;/code&gt; published, via &lt;code&gt;http://example:8080&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.docker.com/compose/overview/&quot;&gt;Docker Compose&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;A tool for defining and running a cluster of containers.&lt;/strong&gt;
For the single project consisting of serveral containers, you may have to &lt;code&gt;docker run&lt;/code&gt; them individually to start the single service.
Docker compose lets you create and run your services with a single command. Definitions are written in &lt;code&gt;docker-compose.yml&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;Don&amp;#39;t Mix Up...&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/21553353/what-is-the-difference-between-cmd-and-entrypoint-in-a-dockerfile&quot;&gt;&lt;code&gt;ENTRYPOINT&lt;/code&gt; v.s. &lt;code&gt;CMD&lt;/code&gt;&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Both somehow specify which commands to run when started. 
The default &lt;code&gt;ENTRYPOINT&lt;/code&gt;, or &lt;code&gt;entrypoint&lt;/code&gt; in &lt;code&gt;docker-compose.yml&lt;/code&gt;, is &lt;code&gt;/bin/sh -c&lt;/code&gt;; the default &lt;code&gt;CMD&lt;/code&gt; is &lt;code&gt;bash&lt;/code&gt;. 
Consider the command &lt;code&gt;docker run -it some-image /bin/bash&lt;/code&gt;; everything after &lt;code&gt;some-image&lt;/code&gt; is the &lt;code&gt;CMD&lt;/code&gt; (in this case &lt;code&gt;/bin/bash&lt;/code&gt;). 
Running this command will run &lt;code&gt;ENTRYPOINT + CMD&lt;/code&gt;, i.e. &lt;code&gt;/bin/sh -c /bin/bash&lt;/code&gt;.
E.g. if you specify the &lt;code&gt;ENTRYPOINT&lt;/code&gt; as &lt;code&gt;ls&lt;/code&gt; and &lt;code&gt;CMD&lt;/code&gt; as &lt;code&gt;.&lt;/code&gt;, the full command looks like &lt;code&gt;docker run --entrypoint=&amp;quot;ls&amp;quot; some-image .&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/22111060/difference-between-expose-and-publish-in-docker&quot;&gt;&lt;code&gt;EXPOSE&lt;/code&gt; v.s. &lt;code&gt;-p&lt;/code&gt;&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;EXPOSE&lt;/code&gt;, or &lt;code&gt;expose&lt;/code&gt; in &lt;code&gt;docker-compose.yml&lt;/code&gt;, is for inter-container communications, e.g. using docker network; 
the port exposed won&amp;#39;t be accessible to outside of the docker. 
&lt;code&gt;-p&lt;/code&gt;, or &lt;code&gt;ports&lt;/code&gt; in &lt;code&gt;docker-compose.yml&lt;/code&gt;, publishes the port to the world, including all other containers.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;Basic Commands&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://docs.docker.com/engine/reference/commandline/image/&quot;&gt;Image&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;c&quot;&gt;# List the current images you have and their details&lt;/span&gt;
docker images

&lt;span class=&quot;c&quot;&gt;# Download/upload an image from registry&lt;/span&gt;
docker pull &amp;lt;image-name&amp;gt;[:&amp;lt;tag&amp;gt;]
    &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; docker pull nginx:latest
    &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; docker pull someuser/his-image

docker push &amp;lt;image-name&amp;gt;[:&amp;lt;tag&amp;gt;]
    &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; docker push me/my-image

&lt;span class=&quot;c&quot;&gt;# Remove images&lt;/span&gt;
docker rmi &amp;lt;image-name|image-id|image-tag&amp;gt;

&lt;span class=&quot;c&quot;&gt;# Remove all images&lt;/span&gt;
docker rmi &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;docker images -q&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Create image using Dockerfile under specified path&lt;/span&gt;
docker build -t &amp;lt;image-name&amp;gt;[:&amp;lt;tag&amp;gt;] &amp;lt;path-to-directory-containing-dockerfile&amp;gt;
    &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; docker build -t me/my-image .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://docs.docker.com/engine/reference/run/&quot;&gt;Container&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;c&quot;&gt;# List all running containers&lt;/span&gt;
docker ps

&lt;span class=&quot;c&quot;&gt;# Show container details&lt;/span&gt;
docker inspect &amp;lt;container-name|container-id&amp;gt;

&lt;span class=&quot;c&quot;&gt;# Run an image&lt;/span&gt;
docker run &amp;lt;image-name&amp;gt;

&lt;span class=&quot;c&quot;&gt;# Run an image with container name assigned&lt;/span&gt;
docker run --name &amp;lt;container-name&amp;gt; &amp;lt;image-name&amp;gt;

&lt;span class=&quot;c&quot;&gt;# Run an image in interative mode, interact with the bash shell created in the container&lt;/span&gt;
docker run -it &amp;lt;image-name&amp;gt; /bin/bash

&lt;span class=&quot;c&quot;&gt;# Run an image in detached mode, i.e. in background&lt;/span&gt;
docker run -d &amp;lt;image-name&amp;gt;

&lt;span class=&quot;c&quot;&gt;# Automatically remove the container when it exits&lt;/span&gt;
docker run --rm &amp;lt;image-name&amp;gt;

&lt;span class=&quot;c&quot;&gt;# Run an image on published port, mapping the port exposed by the container to the host port on my machine&lt;/span&gt;
docker run -p &amp;lt;host-port&amp;gt;:&amp;lt;container-exposed-port&amp;gt; &amp;lt;image-name&amp;gt;
    &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; docker run -p 80:8080 nginx

&lt;span class=&quot;c&quot;&gt;# Run an image with volume specified, sharing the directory in the user's path to the container's path&lt;/span&gt;
docker run -v &amp;lt;user-path&amp;gt;:&amp;lt;container-path&amp;gt; &amp;lt;image-name&amp;gt;
    &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; docker run -v /etc/nginx:/etc/nginx nginx

&lt;span class=&quot;c&quot;&gt;# Stop a container&lt;/span&gt;
docker stop &amp;lt;container-name&amp;gt;

&lt;span class=&quot;c&quot;&gt;# Remove a container&lt;/span&gt;
docker rm &amp;lt;container-name|container-id&amp;gt;

&lt;span class=&quot;c&quot;&gt;# Remove all containers&lt;/span&gt;
docker rm &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;docker ps -a -q&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://docs.docker.com/engine/reference/commandline/network/&quot;&gt;Docker Network&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;c&quot;&gt;# List all networks&lt;/span&gt;
docker network ls

&lt;span class=&quot;c&quot;&gt;# Create a network&lt;/span&gt;
docker network create &amp;lt;network-name&amp;gt;

&lt;span class=&quot;c&quot;&gt;# Connect a network to a container&lt;/span&gt;
docker network connect &amp;lt;network-name&amp;gt; &amp;lt;container-name&amp;gt;

&lt;span class=&quot;c&quot;&gt;# Or, run a container with network specified&lt;/span&gt;
docker run --net &amp;lt;network-name&amp;gt; &amp;lt;image-name&amp;gt;

&lt;span class=&quot;c&quot;&gt;# Show network details&lt;/span&gt;
docker network inspect &amp;lt;network-name&amp;gt;

&lt;span class=&quot;c&quot;&gt;# Remove a network&lt;/span&gt;
docker network rm &amp;lt;network-name&amp;gt;

&lt;span class=&quot;c&quot;&gt;# Disconnet a container from a network&lt;/span&gt;
docker network disconnect &amp;lt;network-name&amp;gt; &amp;lt;container-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://docs.docker.com/compose/reference/overview/&quot;&gt;Docker Compose&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;c&quot;&gt;# (Re)create and run the service&lt;/span&gt;
docker-compose up

&lt;span class=&quot;c&quot;&gt;# Remove stopped services&lt;/span&gt;
docker-compose rm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;Hands On Time: A Flask Project on Docker&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/pyliaorachel/docker-flask-redis-nginx-ssl&quot;&gt;Source code&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In this tutorial, we will create a network first so that containers can communicate within this network. Then we create and test the 3 containers, flask app, redis db, and nginx server, one by one. Finally, we demonstrate how to use docker compose to start the 3 services all at once.&lt;/p&gt;

&lt;h4&gt;Init Project&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Create project named &lt;code&gt;example&lt;/code&gt; with the structure below. Different services are seperated into different folders, each running a container (or serveral containers, if you want to scale).&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;.
├── README.md
└── src
    ├── docker-compose.yml                      &lt;span class=&quot;c&quot;&gt;# docker compose configuration&lt;/span&gt;
    ├── flaskapp                                &lt;span class=&quot;c&quot;&gt;# Service 1&lt;/span&gt;
    │   ├── Dockerfile                            &lt;span class=&quot;c&quot;&gt;# image configuration&lt;/span&gt;
    │   ├── __init__.py
    │   ├── example
    │   │   ├── __init__.py
    │   │   ├── app.py                            &lt;span class=&quot;c&quot;&gt;# flask app entry&lt;/span&gt;
    │   │   ├── db.py                             &lt;span class=&quot;c&quot;&gt;# APIs to redis db&lt;/span&gt;
    │   │   └── wsgi.py                           &lt;span class=&quot;c&quot;&gt;# WSGI server entry&lt;/span&gt;
    │   ├── requirements.txt                      &lt;span class=&quot;c&quot;&gt;# dependency information (production)&lt;/span&gt;
    │   └── setup.py                              &lt;span class=&quot;c&quot;&gt;# dependency information (development)&lt;/span&gt;
    ├── nginx                                   &lt;span class=&quot;c&quot;&gt;# Service 2&lt;/span&gt;
    │   ├── Dockerfile                            &lt;span class=&quot;c&quot;&gt;# image configuration&lt;/span&gt;
    │   ├── __init__.py
    │   └── nginx.conf                            &lt;span class=&quot;c&quot;&gt;# nginx server configuration&lt;/span&gt;
    └── redisdb                                 &lt;span class=&quot;c&quot;&gt;# Service 3&lt;/span&gt;
        ├── Dockerfile                            &lt;span class=&quot;c&quot;&gt;# image configuration&lt;/span&gt;
        ├── __init__.py
        └── redis.conf                            &lt;span class=&quot;c&quot;&gt;# redis server configuration&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create &lt;code&gt;virtualenv&lt;/code&gt; for each container. Since only &lt;code&gt;flaskapp&lt;/code&gt; need a python environment, we only create this one.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;src/flaskapp
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;virtualenv venv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install Packages in &lt;code&gt;virtualenv&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;src/flaskapp
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;venv/bin/activate
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;venv&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pip3 install -e . &lt;span class=&quot;c&quot;&gt;# dev mode&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;venv&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;deactivate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Note that &lt;code&gt;virtualenv&lt;/code&gt; is optional. It can help you test your project in isolated python environment before you deploy it on docker.&lt;/p&gt;

&lt;h4&gt;Create Docker Network&lt;/h4&gt;

&lt;p&gt;Create a &lt;a href=&quot;https://docs.docker.com/engine/userguide/networking/&quot;&gt;Docker network&lt;/a&gt; for communication between the 3 containers below. We will name the network &lt;code&gt;example&lt;/code&gt;, which is the same as our project name.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;docker network create example
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Test&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;docker network ls
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;NETWORK ID          NAME                DRIVER              SCOPE
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;...
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;abcdefghijkl        example             bridge              &lt;span class=&quot;nb&quot;&gt;local&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Flask App Container&lt;/h4&gt;

&lt;p&gt;The following assumes &lt;code&gt;venv&lt;/code&gt; in &lt;code&gt;src/flaskapp&lt;/code&gt; is activated.&lt;/p&gt;

&lt;h6&gt;Add Flask App &amp;amp; Gunicorn&lt;/h6&gt;

&lt;p&gt;See &lt;code&gt;src/flaskapp/example/app.py&lt;/code&gt; and &lt;code&gt;src/flaskapp/example/wsgi.py&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Test&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;venv&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;src/flaskapp
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;venv&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gunicorn --bind 0.0.0.0:8080 example.wsgi

&lt;span class=&quot;c&quot;&gt;# Open browser and go to `localhost:8080`. You should see `Hello World!`.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Freeze dependencies into &lt;code&gt;requirements.txt&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;venv&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pip3 freeze | grep -v &lt;span class=&quot;s1&quot;&gt;'exampleflask'&lt;/span&gt; &amp;gt; requirements.txt &lt;span class=&quot;c&quot;&gt;# ignore dependency on itself&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h6&gt;&lt;a href=&quot;https://www.smartfile.com/blog/dockerizing-a-python-flask-application/&quot;&gt;Deploy on Docker&lt;/a&gt;&lt;/h6&gt;

&lt;p&gt;See &lt;code&gt;src/flaskapp/Dockerfile&lt;/code&gt;. &lt;code&gt;venv&lt;/code&gt; is made ignored by adding it in &lt;code&gt;.dockerignore&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Build image with tag &lt;code&gt;yourusername/exampleflask&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;src/flaskapp
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;docker build -t yourusername/exampleflask .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Run container on image &lt;code&gt;yourusername/exampleflask&lt;/code&gt; with name &lt;code&gt;exampleflask&lt;/code&gt;, publish port &lt;code&gt;8080&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;docker run -d --rm -p 8080:8080 --name exampleflask yourusername/exampleflask
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Test&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Open browser and go to &lt;code&gt;localhost:8080&lt;/code&gt;. You should see &lt;code&gt;Hello World!&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Redis DB Container&lt;/h4&gt;

&lt;p&gt;The following assumes &lt;code&gt;venv&lt;/code&gt; in &lt;code&gt;src/flaskapp&lt;/code&gt; is activated.&lt;/p&gt;

&lt;h6&gt;Add Redis DB to Flask App&lt;/h6&gt;

&lt;p&gt;See &lt;code&gt;src/flaskapp/example/db.py&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Test&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Install &lt;a href=&quot;https://redis.io/topics/quickstart&quot;&gt;redis-server&lt;/a&gt; on your local machine first for testing&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Start the server on default port `6397`&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;redis-server

&lt;span class=&quot;c&quot;&gt;# Start the flask app&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;venv&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;src/flaskapp
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;venv&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gunicorn --bind 0.0.0.0:8080 example.wsgi

&lt;span class=&quot;c&quot;&gt;# Open browser and go to `localhost:8080/&amp;lt;your-name&amp;gt;`. You should see `Hello &amp;lt;your-name&amp;gt;!`.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h6&gt;&lt;a href=&quot;https://docs.docker.com/samples/redis/#start-a-redis-instance&quot;&gt;Deploy on Docker&lt;/a&gt;&lt;/h6&gt;

&lt;p&gt;See &lt;code&gt;src/redisdb/Dockerfile&lt;/code&gt; and &lt;code&gt;src/redisdb/redis.conf&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Build image with tag &lt;code&gt;yourusername/exampleredis&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;redisdb
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;docker build -t yourusername/exampleredis .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Run container on image &lt;code&gt;yourusername/exampleredis&lt;/code&gt; with name &lt;code&gt;exampleredis&lt;/code&gt;, publish port &lt;code&gt;6379&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;docker run -d --rm -p 6379:6379 --name exampleredis yourusername/exampleredis
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Test&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;redis-cli
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;127.0.0.1:6379&amp;gt;

&lt;span class=&quot;c&quot;&gt;# This is wrong&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;not connected&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Stop the containers, now run &lt;code&gt;flaskapp&lt;/code&gt; and &lt;code&gt;redisdb&lt;/code&gt; in docker network &lt;code&gt;example&lt;/code&gt; for communication&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;docker stop exampleflask exampleredis

&lt;span class=&quot;c&quot;&gt;# No need to publish port for redis, &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# as the port is `EXPOSE`d in `Dockerfile` to other containers in the same docker network&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;docker run -d --rm --net example --name exampleredis yourusername/exampleredis
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;docker run -d --rm -p 8080:8080 --net example --name exampleflask yourusername/exampleflask
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Test&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Open browser and go to &lt;code&gt;localhost:8080/&amp;lt;your-name&amp;gt;&lt;/code&gt;. You should see &lt;code&gt;Hello &amp;lt;your-name&amp;gt;!&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Note&lt;/em&gt; that &lt;code&gt;Dockerfile&lt;/code&gt; is needed only when you want to use your customized redis server configuration written in &lt;code&gt;redis.conf&lt;/code&gt;. 
If you don&amp;#39;t need a customized configuration, you don&amp;#39;t need to build a new image yourself and can simply use the base image of &lt;code&gt;redis&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;docker run -d --rm --net example --name exampleredis redis redis-server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then modify &lt;code&gt;docker-compose.yml&lt;/code&gt; accordingly.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;nn&quot;&gt;...&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;redis&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;redis&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;container_name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;exampleredis&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt; that &lt;code&gt;bind 127.0.0.1&lt;/code&gt; in the &lt;code&gt;redis.conf&lt;/code&gt; file &lt;strong&gt;SHOULD&lt;/strong&gt; be changed into &lt;code&gt;bind 0.0.0.0&lt;/code&gt; or else other containers still cannot access the redis server.&lt;/p&gt;

&lt;h4&gt;NGINX Container&lt;/h4&gt;

&lt;h6&gt;Setup an NGINX Server&lt;/h6&gt;

&lt;p&gt;For &lt;code&gt;HTTP&lt;/code&gt; requests, see &lt;code&gt;src/nginx/nginx.conf.sample&lt;/code&gt; and follow &lt;a href=&quot;https://pyliaorachel.github.io/blog/tech/system/2017/07/07/flask-app-with-gunicorn-on-nginx-server-upon-aws-ec2-linux.html&quot;&gt;this tutorial&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For &lt;code&gt;HTTPS&lt;/code&gt;requests, see &lt;code&gt;src/nginx/nginx-ssl.conf.sample&lt;/code&gt; and follow &lt;a href=&quot;https://pyliaorachel.github.io/blog/tech/system/2017/07/14/nginx-server-ssl-setup-on-aws-ec2-linux-with-letsencrypt.html&quot;&gt;this tutoiral&lt;/a&gt;. Make sure that you have used &lt;a href=&quot;https://letsencrypt.org/&quot;&gt;letsencrypt&lt;/a&gt; or other means to retrieve the certificate and keys.&lt;/p&gt;

&lt;p&gt;Choose either of them, modify the &lt;code&gt;&amp;lt;your-domain-name&amp;gt;&lt;/code&gt; (and &lt;code&gt;your.domain.name&lt;/code&gt; for &lt;code&gt;HTTPS&lt;/code&gt;) in the &lt;code&gt;*.sample&lt;/code&gt; file, and name it &lt;code&gt;nginx.conf&lt;/code&gt;. For HTTPS, if you did not use &lt;code&gt;letsencrypt&lt;/code&gt;, also change the &lt;code&gt;ssl_certificate&lt;/code&gt; and &lt;code&gt;ssl_certificate_key&lt;/code&gt; to the corresponding paths.&lt;/p&gt;

&lt;h6&gt;&lt;a href=&quot;https://hub.docker.com/_/nginx/&quot;&gt;Deploy on Docker&lt;/a&gt;&lt;/h6&gt;

&lt;p&gt;See &lt;code&gt;src/nginx/Dockerfile&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Build image with tag &lt;code&gt;yourusername/examplenginx&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;src/nginx
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;docker build -t yourusername/examplenginx .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Run container on image &lt;code&gt;yourusername/examplenginx&lt;/code&gt; with name &lt;code&gt;examplenginx&lt;/code&gt;, publish port &lt;code&gt;80&lt;/code&gt; (and &lt;code&gt;443&lt;/code&gt; for &lt;code&gt;HTTPS&lt;/code&gt;). (&lt;em&gt;Note that -p 8080:8080 is not needed anymore in starting the flask app container, as we will not access this port directly from the browser anymore but instead access this nginx proxy server&lt;/em&gt;)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;c&quot;&gt;# HTTP&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;docker run -d --rm --net example -p 80:80 --name examplenginx yourusername/examplenginx

&lt;span class=&quot;c&quot;&gt;# HTTPS, share the directory containing SSL certificate with -v&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;docker run -d --rm --net example -p 80:80 -p 443:443 -v /etc/letsencrypt:/etc/letsencrypt --name examplenginx yourusername/examplenginx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Test&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;HTTP&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;Open browser and go to &lt;code&gt;http://localhost&lt;/code&gt;. You should see &lt;code&gt;Hello World!&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;HTTPS&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;Open browser and go to &lt;code&gt;https://localhost&lt;/code&gt;. You should see &lt;code&gt;Hello World!&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Wrap up the Project with Docker Compose&lt;/h4&gt;

&lt;p&gt;After testing individual containers, you can wrap all the commands up into a single &lt;code&gt;docker-compose.yml&lt;/code&gt; file, and everything can be started in a single command. All the parameters passed in to the commands when you started the containers are now specified in &lt;code&gt;docker-compose.yml&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Docker network is not needed anymore, as docker compose creates a default network for all its services. But to build up a more complex network topology, you can create your custom networks in the &lt;code&gt;docker-compose.yml&lt;/code&gt; file as well.&lt;/em&gt;&lt;/p&gt;

&lt;h6&gt;&lt;a href=&quot;https://runnable.com/docker/docker-compose-networking&quot;&gt;Deploy with Docker Compose&lt;/a&gt;&lt;/h6&gt;

&lt;p&gt;See &lt;code&gt;src/docker-compose.yml&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Start docker compose&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;src
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;docker-compose up
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Test&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;HTTP&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;Open browser and go to &lt;code&gt;http://localhost&lt;/code&gt;. You should see &lt;code&gt;Hello World!&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;HTTPS&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;Open browser and go to &lt;code&gt;https://localhost&lt;/code&gt;. You should see &lt;code&gt;Hello World!&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;h4&gt;Debug Tips&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Use &lt;code&gt;-it&lt;/code&gt; to run containers in interactive mode so that you can test, view logs, curl other containers, etc. under the environment the app is run in&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker run -it --rm -p 8080:8080 --net example --name exampleflask yourusername/exampleflask /bin/bash
  &amp;gt; root@abcdefghijkl:~#

  &lt;span class=&quot;c&quot;&gt;# try curl other containers in the same network&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;root@abcdefghijkl:~# apt-get -qq update &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get -yqq install curl
  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;root@abcdefghijkl:~# curl &amp;lt;other-container&amp;gt;:&amp;lt;port&amp;gt;
  &amp;gt; ...

  &lt;span class=&quot;c&quot;&gt;# list networks&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;root@abcdefghijkl:~# cat /etc/hosts
  &amp;gt; ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Print the logs of a container&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker logs exampleflask
  &amp;gt; ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;List the running containers to ensure they didn&amp;#39;t encounter errors&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker ps
  CONTAINER ID        IMAGE                       COMMAND                  CREATED             STATUS              PORTS                    NAMES
  abcdefghijkl        yourusername/exampleflask   &lt;span class=&quot;s2&quot;&gt;&quot;gunicorn --bind 0...&quot;&lt;/span&gt;   some &lt;span class=&quot;nb&quot;&gt;time &lt;/span&gt;ago       Up some &lt;span class=&quot;nb&quot;&gt;time        &lt;/span&gt;0.0.0.0:8080-&amp;gt;8080/tcp   exampleflask
  mnopqrstuvwx        yourusername/exampleredis   &lt;span class=&quot;s2&quot;&gt;&quot;docker-entrypoint...&quot;&lt;/span&gt;   some &lt;span class=&quot;nb&quot;&gt;time &lt;/span&gt;ago       Up some &lt;span class=&quot;nb&quot;&gt;time        &lt;/span&gt;6379/tcp                 exampleredis
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;List information of the network to ensure the containers are run within&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;  &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker network inspect example
  &amp;gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;s2&quot;&gt;&quot;Name&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;example&quot;&lt;/span&gt;,
          &lt;span class=&quot;s2&quot;&gt;&quot;Id&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;...&quot;&lt;/span&gt;,
          &lt;span class=&quot;s2&quot;&gt;&quot;Created&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;...&quot;&lt;/span&gt;,
          &lt;span class=&quot;s2&quot;&gt;&quot;Scope&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;local&quot;&lt;/span&gt;,
          &lt;span class=&quot;s2&quot;&gt;&quot;Driver&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;bridge&quot;&lt;/span&gt;,
          &lt;span class=&quot;s2&quot;&gt;&quot;EnableIPv6&quot;&lt;/span&gt;: &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;,
          // ...other properties
          &lt;span class=&quot;s2&quot;&gt;&quot;Containers&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
              &lt;span class=&quot;s2&quot;&gt;&quot;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                  &lt;span class=&quot;s2&quot;&gt;&quot;Name&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;exampleredis&quot;&lt;/span&gt;,
                  &lt;span class=&quot;s2&quot;&gt;&quot;EndpointID&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy&quot;&lt;/span&gt;,
                  &lt;span class=&quot;s2&quot;&gt;&quot;MacAddress&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;aa:bb:cc:dd:ee:ff&quot;&lt;/span&gt;,
                  &lt;span class=&quot;s2&quot;&gt;&quot;IPv4Address&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;w.x.y.z/a&quot;&lt;/span&gt;,
                  &lt;span class=&quot;s2&quot;&gt;&quot;IPv6Address&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
              &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
              // ...other container info
          &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
          // ...other properties
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;h2&gt;References&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.docker.com/&quot;&gt;Official Doc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.patricksoftwareblog.com/how-to-configure-nginx-for-a-flask-web-application/&quot;&gt;How to Configure NGINX for a Flask Web Application&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.codeship.com/orchestrate-containers-for-development-with-docker-compose/&quot;&gt;Orchestrate Containers for Development with Docker Compose&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.smartfile.com/blog/dockerizing-a-python-flask-application/&quot;&gt;Dockerizing a Python Flask Application&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.docker.com/samples/redis/&quot;&gt;Docker Redis Samples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://runnable.com/docker/docker-compose-networking&quot;&gt;Docker Compose Networking&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 04 Aug 2017 00:00:00 +0800</pubDate>
        <link>/tutorial/devops/docker/2017/08/04/getting-started-with-docker-running-flask-redisdb-and-nginx.html</link>
        <guid isPermaLink="true">/tutorial/devops/docker/2017/08/04/getting-started-with-docker-running-flask-redisdb-and-nginx.html</guid>
        
        <category>docker</category>
        
        <category>flask</category>
        
        <category>redisdb</category>
        
        <category>nginx</category>
        
        
        <category>Tutorial</category>
        
        <category>DevOps</category>
        
        <category>Docker</category>
        
      </item>
    
      <item>
        <title>Nginx Server SSL Setup on AWS EC2 Linux with Letsencrypt</title>
        <description>&lt;p&gt;This post is a followup on &lt;a href=&quot;https://pyliaorachel.github.io/blog/tech/system/2017/07/07/flask-app-with-gunicorn-on-nginx-server-upon-aws-ec2-linux.html&quot;&gt;my previous post on setting up an nginx server on AWS EC2 instance&lt;/a&gt;, and now we are going to support HTTPS to secure our website using a free SSL certificate authority (CA) &lt;a href=&quot;https://letsencrypt.org/&quot;&gt;letsencrypt&lt;/a&gt;.&lt;/p&gt;

&lt;!--more--&gt;

&lt;hr&gt;

&lt;p&gt;Before you start:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Obtain a domain name and set it up in your EC2 console to point to the public DNS.&lt;/li&gt;
&lt;li&gt;Understand the basic mechanism of &lt;a href=&quot;https://letsencrypt.org/how-it-works/&quot;&gt;letsencrypt&lt;/a&gt;. This is key to understanding why your setup does or does not work.&lt;/li&gt;
&lt;li&gt;Remember to open up 443 port and allow source from &lt;code&gt;0.0.0.0/0&lt;/code&gt; in your EC2 console so that ACME can hit on you.&lt;/li&gt;
&lt;li&gt;We are going to use &lt;a href=&quot;https://certbot.eff.org/&quot;&gt;certbot&lt;/a&gt;, which handles all the tedious works to communicate with &lt;code&gt;letsencrypt&lt;/code&gt; for us. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And here are the steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Obtain the certificate using &lt;code&gt;certbot&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Modify your &lt;code&gt;nginx&lt;/code&gt; configuration to enable SSL&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;Obtain the Certificate&lt;/h4&gt;

&lt;p&gt;Get &lt;code&gt;certbot&lt;/code&gt; first:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;wget https://dl.eff.org/certbot-auto
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;chmod a+x certbot-auto
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There are several plugins to use to help us retrieve the certificate. Two popular ones are &lt;a href=&quot;http://letsencrypt.readthedocs.io/en/latest/using.html#webroot&quot;&gt;webroot&lt;/a&gt; and &lt;a href=&quot;http://letsencrypt.readthedocs.io/en/latest/using.html#standalone&quot;&gt;standalone&lt;/a&gt;. If you do not want to stop your server, use &lt;code&gt;webroot&lt;/code&gt;; if you do not want to use existing server software, use &lt;code&gt;standalone&lt;/code&gt;. We will use &lt;code&gt;standalone&lt;/code&gt; below.&lt;/p&gt;

&lt;blockquote&gt;
&lt;h6&gt;Using webroot&lt;/h6&gt;

&lt;p&gt;To retrieve the certificate from the CA, your server needs to solve some &lt;a href=&quot;http://letsencrypt.readthedocs.io/en/latest/using.html#getting-certificates-and-choosing-plugins&quot;&gt;challenges&lt;/a&gt;. The challenge is elaborated &lt;a href=&quot;https://letsencrypt.org/how-it-works/&quot;&gt;here&lt;/a&gt;. If you choose to use &lt;code&gt;webroot&lt;/code&gt; as the plugin, the thing to note is that the configuration of your server needs to be able to serve the files created in &lt;code&gt;${webroot}/.well-known/acme-challenge&lt;/code&gt;. You might want to verify that &lt;code&gt;GET /.well-known/acme-challenge&lt;/code&gt; is accessible first.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To run as standalone, remember to close your services that listen on 80 or 443 ports.&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s write a config file first. We&amp;#39;ll use &lt;code&gt;example.com&lt;/code&gt; as our domain name. At &lt;code&gt;/etc/letsencrypt/configs/example.com.conf&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-conf&quot; data-lang=&quot;conf&quot;&gt;&lt;span class=&quot;c&quot;&gt;# domains to retrieve certificate
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;domains&lt;/span&gt; = &lt;span class=&quot;n&quot;&gt;example&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# increase key size
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rsa&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; = &lt;span class=&quot;m&quot;&gt;4096&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# the CA endpoint server
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;server&lt;/span&gt; = &lt;span class=&quot;n&quot;&gt;https&lt;/span&gt;://&lt;span class=&quot;n&quot;&gt;acme&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;v01&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;api&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;letsencrypt&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;directory&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# the email to receive renewal reminders, IIRC
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email&lt;/span&gt; = &lt;span class=&quot;n&quot;&gt;example&lt;/span&gt;@&lt;span class=&quot;n&quot;&gt;example&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt; 

&lt;span class=&quot;c&quot;&gt;# turn off the ncurses UI, we want this to be run as a cronjob
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; = &lt;span class=&quot;n&quot;&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run &lt;code&gt;certbot&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;./certbot-auto --standalone --config /etc/letsencrypt/configs/example.com.conf certonly
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can skip the above config file as well:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;./certbot-auto --standalone -d example.com certonly
&lt;span class=&quot;c&quot;&gt;# ...Answer some config questions&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now you should see &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;
IMPORTANT NOTES:
 - Congratulations! Your certificate and chain have been saved at
   /etc/letsencrypt/live/example.com/fullchain.pem. Your cert will
   expire on xxxx-xx-xx. To obtain a new version of the certificate in
   the future, simply run Let's Encrypt again.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can verify that the certificate and keys exist:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;# Certificate
/etc/letsencrypt/live/example.com/cert.pem

# Full Chain 
/etc/letsencrypt/live/example.com/fullchain.pem

# Private Key 
/etc/letsencrypt/live/example.com/privkey.pem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Modify &lt;code&gt;nginx&lt;/code&gt; configuration&lt;/h4&gt;

&lt;p&gt;Now you&amp;#39;ve got the certificate, we need to configure the nginx for it to take up HTTPS requests.&lt;/p&gt;

&lt;p&gt;Open up your &lt;code&gt;/etc/nginx/nginx.conf&lt;/code&gt; and modify:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-conf&quot; data-lang=&quot;conf&quot;&gt;...

&lt;span class=&quot;n&quot;&gt;http&lt;/span&gt; {

    ...

    &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt; {
        &lt;span class=&quot;n&quot;&gt;listen&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;80&lt;/span&gt;;
        &lt;span class=&quot;n&quot;&gt;server_name&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;example&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;;
        &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;         /&lt;span class=&quot;n&quot;&gt;usr&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;share&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;nginx&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;;

        &lt;span class=&quot;c&quot;&gt;# Load configuration files for the default server block.
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;include&lt;/span&gt; /&lt;span class=&quot;n&quot;&gt;etc&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;nginx&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;/*.&lt;span class=&quot;n&quot;&gt;conf&lt;/span&gt;;

        &lt;span class=&quot;n&quot;&gt;location&lt;/span&gt; / {
            &lt;span class=&quot;c&quot;&gt;# redirect to HTTPS
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;301&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;https&lt;/span&gt;://$&lt;span class=&quot;n&quot;&gt;server_name&lt;/span&gt;$&lt;span class=&quot;n&quot;&gt;request_uri&lt;/span&gt;;
        }

        ...
    }

    &lt;span class=&quot;c&quot;&gt;# Settings for a TLS enabled server.
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt; {
        &lt;span class=&quot;n&quot;&gt;listen&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;443&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ssl&lt;/span&gt;;
        &lt;span class=&quot;n&quot;&gt;server_name&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;example&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;;
        &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;         /&lt;span class=&quot;n&quot;&gt;usr&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;share&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;nginx&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;;

        &lt;span class=&quot;n&quot;&gt;ssl_certificate&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/etc/letsencrypt/live/example.com/fullchain.pem&quot;&lt;/span&gt;;
        &lt;span class=&quot;n&quot;&gt;ssl_certificate_key&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/etc/letsencrypt/live/example.com/privkey.pem&quot;&lt;/span&gt;;

        &lt;span class=&quot;c&quot;&gt;# Automatically route HTTP to HTTPS
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;add_header&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Strict&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;Transport&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;Security&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;max-age=31536000&quot;&lt;/span&gt;;

        &lt;span class=&quot;n&quot;&gt;include&lt;/span&gt; /&lt;span class=&quot;n&quot;&gt;etc&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;nginx&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;/*.&lt;span class=&quot;n&quot;&gt;conf&lt;/span&gt;;

        &lt;span class=&quot;n&quot;&gt;location&lt;/span&gt; / {
            &lt;span class=&quot;c&quot;&gt;# These are esstential, or your flask app may not correctly redirect
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;proxy_set_header&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Host&lt;/span&gt; $&lt;span class=&quot;n&quot;&gt;host&lt;/span&gt;;
            &lt;span class=&quot;n&quot;&gt;proxy_set_header&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;Real&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;IP&lt;/span&gt; $&lt;span class=&quot;n&quot;&gt;remote_addr&lt;/span&gt;;
            &lt;span class=&quot;n&quot;&gt;proxy_set_header&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;Forwarded&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;Proto&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;https&lt;/span&gt;;
            &lt;span class=&quot;n&quot;&gt;proxy_set_header&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;Forwarded&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;Host&lt;/span&gt; $&lt;span class=&quot;n&quot;&gt;host&lt;/span&gt;;
            &lt;span class=&quot;n&quot;&gt;proxy_set_header&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;Forwarded&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;For&lt;/span&gt; $&lt;span class=&quot;n&quot;&gt;proxy_add_x_forwarded_for&lt;/span&gt;;

            &lt;span class=&quot;c&quot;&gt;# Pass to our WSGI server
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;proxy_pass&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;://&lt;span class=&quot;n&quot;&gt;unix&lt;/span&gt;:/&lt;span class=&quot;n&quot;&gt;home&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;ec2&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;myproject&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;myproject&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;sock&lt;/span&gt;;
        }

        ...
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Reload your &lt;code&gt;nginx&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo service nginx reload
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now you should access your website using &lt;code&gt;https&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Not that the certificate expires in 3 months, so you may want to refer to the nice tutorials in the reference links to set up a cron job and make the renewals.&lt;/p&gt;

&lt;blockquote&gt;
&lt;h6&gt;Debug Tips&lt;/h6&gt;

&lt;ol&gt;
&lt;li&gt;Logs reside in &lt;code&gt;/var/log/letsencrypt/letsencrypt.log&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;If there are permissoin problems, run &lt;code&gt;sudo su - nginx -s /bin/bash -c &amp;quot;ls /home/ec2-user/myproject/myproject.sock&amp;quot;&lt;/code&gt; to test permission from the viewpoint of &lt;code&gt;nginx&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;h2&gt;References&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://letsencrypt.readthedocs.io/en/latest/using.html&quot;&gt;Certbot Userguide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.freecodecamp.org/going-https-on-amazon-ec2-ubuntu-14-04-with-lets-encrypt-certbot-on-nginx-696770649e76&quot;&gt;Using the Let’s Encrypt Certbot to get HTTPS on your Amazon EC2 NGINX box&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/xrstf/581981008b6be0d2224f&quot;&gt;Let&amp;#39;s Encrypt on Ubuntu 14.04, nginx with webroot auth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://loune.net/2016/01/https-with-lets-encrypt-ssl-and-nginx/&quot;&gt;HTTPS with Let’s Encrypt SSL and Nginx (using certbot)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://nouveauframework.org/blog/installing-letsencrypts-free-ssl-amazon-linux/&quot;&gt;Installing LetsEncrypt’s free SSL on Amazon Linux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 14 Jul 2017 00:00:00 +0800</pubDate>
        <link>/blog/tech/system/2017/07/14/nginx-server-ssl-setup-on-aws-ec2-linux-with-letsencrypt.html</link>
        <guid isPermaLink="true">/blog/tech/system/2017/07/14/nginx-server-ssl-setup-on-aws-ec2-linux-with-letsencrypt.html</guid>
        
        <category>ssl</category>
        
        <category>letsencrypt</category>
        
        <category>nginx</category>
        
        <category>aws</category>
        
        
        <category>Blog</category>
        
        <category>Tech</category>
        
        <category>System</category>
        
      </item>
    
      <item>
        <title>Flask App with Gunicorn on Nginx Server upon AWS EC2 Linux</title>
        <description>&lt;p&gt;The whole setup is modified from this &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-serve-flask-applications-with-gunicorn-and-nginx-on-ubuntu-14-04&quot;&gt;tutorial&lt;/a&gt;,
with the pain and gain from the alternative deployment on an AWS EC2 Linux server.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Setup Environment&lt;/li&gt;
&lt;li&gt;Creating a Flask App&lt;/li&gt;
&lt;li&gt;Binding with Gunicorn&lt;/li&gt;
&lt;li&gt;Creating an Upstart Script for Running Gunicorn Server&lt;/li&gt;
&lt;li&gt;Running with Nginx on AWS EC2&lt;/li&gt;
&lt;/ol&gt;

&lt;!--more--&gt;

&lt;hr&gt;

&lt;h4&gt;Setup Environment&lt;/h4&gt;

&lt;p&gt;Install python development tools &amp;amp; &lt;code&gt;nginx&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo yum update
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo yum install python-pip python-dev nginx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Install &lt;code&gt;virtualenv&lt;/code&gt; from &lt;code&gt;pip&lt;/code&gt; so that the python packages for the flask app will be in isolation.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo pip install virtualenv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Create the project &amp;amp; setup the virtual environment.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;c&quot;&gt;# create project&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;mkdir myproject
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;myproject

&lt;span class=&quot;c&quot;&gt;# create virtualenv&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;virtualenv venv

&lt;span class=&quot;c&quot;&gt;# activate virtualenv&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ./venv/bin/activate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now the prompt should look like:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;(venv)user@host:~/myproject$ &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Creating a Flask App&lt;/h4&gt;

&lt;p&gt;Install the dependencies under your virtualenv.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;(venv)user@host:~/myproject$ &lt;/span&gt;pip install gunicorn flask
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Create the app entry file &lt;code&gt;~/myproject/app.py&lt;/code&gt; and write the simplest flask app:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;flask&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Flask&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;application&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Flask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@application.route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;__main__&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'0.0.0.0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'8080'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Note that you need to make sure your app is run on an allowed port of the EC2 instance. 
Check which ports are allowed under &lt;code&gt;AWS EC2 Dashboard &amp;gt; Instances &amp;gt; (select your instance) &amp;gt; Security groups &amp;gt; view inbound rules&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Test your flask app.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;(venv)user@host:~/myproject$ &lt;/span&gt;python app.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Go to your browser and enter the url to your server, appending the port number you specified in &lt;code&gt;app.py&lt;/code&gt;. 
You should see &lt;code&gt;Hello World!&lt;/code&gt; displayed.&lt;/p&gt;

&lt;h4&gt;Binding with Gunicorn&lt;/h4&gt;

&lt;p&gt;Create the WSGI entrypoint &lt;code&gt;~/myproject/wsgi.py&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;application&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;__main__&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Test it.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;(venv)user@host:~/myproject$ &lt;/span&gt;gunicorn --bind 0.0.0.0:8080 wsgi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;If you didn&amp;#39;t name your app as &lt;code&gt;application&lt;/code&gt;, for example as &lt;code&gt;app&lt;/code&gt;, 
use &lt;code&gt;wsgi:app&lt;/code&gt; instead of &lt;code&gt;wsgi&lt;/code&gt;, since &lt;code&gt;application&lt;/code&gt; is the name to be picked up by default.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Go to your browser again and read the &lt;code&gt;Hello World!&lt;/code&gt; response.&lt;/p&gt;

&lt;h4&gt;Creating an Upstart Script for Running Gunicorn Server&lt;/h4&gt;

&lt;p&gt;Now let&amp;#39;s make Linux automatically start the server upon booting by providing the upstart script.&lt;/p&gt;

&lt;p&gt;Create a configuration file:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo vim /etc/init/myproject.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Write a little more complicated version than the original tutorial to help you debug:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-conf&quot; data-lang=&quot;conf&quot;&gt;&lt;span class=&quot;n&quot;&gt;description&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Gunicorn application server running myproject&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;runlevel&lt;/span&gt; [&lt;span class=&quot;m&quot;&gt;2345&lt;/span&gt;]
&lt;span class=&quot;n&quot;&gt;stop&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;runlevel&lt;/span&gt; [!&lt;span class=&quot;m&quot;&gt;2345&lt;/span&gt;]

&lt;span class=&quot;n&quot;&gt;respawn&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PATH&lt;/span&gt;=/&lt;span class=&quot;n&quot;&gt;home&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;ec2&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;myproject&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;venv&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;bin&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PROGRAM_NAME&lt;/span&gt;=&lt;span class=&quot;s2&quot;&gt;&quot;myproject&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;USERNAME&lt;/span&gt;=&lt;span class=&quot;s2&quot;&gt;&quot;ec2-user&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Main script to be run
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;[`date -u +%Y-%m-%dT%T.%3NZ`] (sys) Ready to run...&quot;&lt;/span&gt; &amp;gt;&amp;gt; /&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;/$&lt;span class=&quot;n&quot;&gt;PROGRAM_NAME&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HOME&lt;/span&gt;=&lt;span class=&quot;s2&quot;&gt;&quot;/home/ec2-user&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;echo&lt;/span&gt; $$ &amp;gt; /&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;/$&lt;span class=&quot;n&quot;&gt;PROGRAM_NAME&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt; /&lt;span class=&quot;n&quot;&gt;home&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;ec2&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;myproject&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# exec sudo -u ec2-user gunicorn --workers 3 --bind unix:myproject.sock -m 000 wsgi &amp;gt;&amp;gt; /var/log/$PROGRAM_NAME.sys.log 2&amp;gt;&amp;amp;1
&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;# exec su -s /bin/sh -c 'exec &quot;$0&quot; &quot;$@&quot;' ec2-user -- gunicorn --workers 3 --bind unix:myproject.sock -m 000 wsgi &amp;gt;&amp;gt; /var/log/$PROGRAM_NAME.sys.log 2&amp;gt;&amp;amp;1
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gunicorn&lt;/span&gt; --&lt;span class=&quot;n&quot;&gt;workers&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; --&lt;span class=&quot;n&quot;&gt;bind&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unix&lt;/span&gt;:&lt;span class=&quot;n&quot;&gt;myproject&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;sock&lt;/span&gt; -&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;000&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wsgi&lt;/span&gt; &amp;gt;&amp;gt; /&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;/$&lt;span class=&quot;n&quot;&gt;PROGRAM_NAME&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&amp;gt;&amp;amp;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Script for debug purpose, run before starting
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pre&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;[`date -u +%Y-%m-%dT%T.%3NZ`] (sys) Starting&quot;&lt;/span&gt; &amp;gt;&amp;gt; /&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;/$&lt;span class=&quot;n&quot;&gt;PROGRAM_NAME&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Script for debug purpose, run before stopping
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pre&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;stop&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;rm&lt;/span&gt; /&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;/$&lt;span class=&quot;n&quot;&gt;PROGRAM_NAME&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;/
    &lt;span class=&quot;n&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;[`date -u +%Y-%m-%dT%T.%3NZ`] (sys) Stopping&quot;&lt;/span&gt; &amp;gt;&amp;gt; /&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;/$&lt;span class=&quot;n&quot;&gt;PROGRAM_NAME&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notes here:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;PATH&lt;/code&gt; is for running the server under our virtual environment&lt;/li&gt;
&lt;li&gt;Note the commented out &lt;code&gt;exec&lt;/code&gt; scripts that produce errors; 
I intended to switch user by doing that, since &lt;code&gt;setuid&lt;/code&gt; and &lt;code&gt;setgid&lt;/code&gt; is not supported on EC2 Linux instance. 
These commands are from &lt;a href=&quot;https://www.thedevopsdoctors.com/blog/2016/4/8/init-scripts-for-web-apps-on-linux-and-why-you-should-be-using-them&quot;&gt;these&lt;/a&gt; &lt;a href=&quot;https://deepumohan.com/tech/setting-up-apache-airflow-on-aws-ec2-instance/&quot;&gt;places&lt;/a&gt; and &lt;a href=&quot;https://serverfault.com/questions/357060/how-should-i-use-sudo-from-an-upstart-script&quot;&gt;here&lt;/a&gt;. Feel free to provide a correct version...
So now the server is run under &lt;code&gt;root&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-m&lt;/code&gt; flag is the umask; for umask value &lt;code&gt;000&lt;/code&gt;, the permission would be &lt;code&gt;777&lt;/code&gt;. This is insecure though, but since I have not found a way to set the access right to a specific user and group, the hooking with nginx only works when the permission is allowed for all users (as the nginx server we will set up later runs as user &lt;code&gt;nginx&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Echos and &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; are for debugging; see the logs at &lt;code&gt;/var/log/myproject.sys.log&lt;/code&gt; if you cannot start your server.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Test it.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;c&quot;&gt;# reload configuration files from /etc/init/*.conf&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo initctl reload-configuration

&lt;span class=&quot;c&quot;&gt;# see if the new job is listed&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo initctl list

&lt;span class=&quot;c&quot;&gt;# try start your server (job); the job name is without the '.conf' extension&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo initctl start myproject

&lt;span class=&quot;c&quot;&gt;# if job is not listed, or error displays and says 'myproject' is not known, there's probably errors in the conf file&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# fix them and go on&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# check if it's actually running&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo initctl status myproject
&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;myproject start/running, process xxxx

&lt;span class=&quot;c&quot;&gt;# or check with&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ps aux | grep gunicorn

&lt;span class=&quot;c&quot;&gt;# if the job is not running, see the log at '/var/log/myproject.sys.log'&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# you can echo more messages in the conf file for your own debug purpose&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# you should also notice a socket file created at '/home/ec2-user/myproject/myproject.sock'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Running with Nginx on AWS EC2&lt;/h4&gt;

&lt;p&gt;Now setup the nginx server to redirect the traffic received at port 80 (http) to the WSGI (Gunicorn) server running at the unix socket.&lt;/p&gt;

&lt;p&gt;Open the &lt;code&gt;/etc/nginx/nginx.conf&lt;/code&gt; file, find the section and write:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-conf&quot; data-lang=&quot;conf&quot;&gt;...
&lt;span class=&quot;n&quot;&gt;server&lt;/span&gt; {
        &lt;span class=&quot;n&quot;&gt;listen&lt;/span&gt;       &lt;span class=&quot;m&quot;&gt;80&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;default_server&lt;/span&gt;;
        &lt;span class=&quot;n&quot;&gt;listen&lt;/span&gt;       [::]:&lt;span class=&quot;m&quot;&gt;80&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;default_server&lt;/span&gt;;
        &lt;span class=&quot;n&quot;&gt;server_name&lt;/span&gt;  &amp;lt;&lt;span class=&quot;n&quot;&gt;your&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;domain&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&amp;gt;;                                    &lt;span class=&quot;c&quot;&gt;# &amp;lt;- replace with your own one
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;         /&lt;span class=&quot;n&quot;&gt;usr&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;share&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;nginx&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;;

        ...

        &lt;span class=&quot;n&quot;&gt;location&lt;/span&gt; / {
            &lt;span class=&quot;n&quot;&gt;proxy_pass&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;://&lt;span class=&quot;n&quot;&gt;unix&lt;/span&gt;:/&lt;span class=&quot;n&quot;&gt;home&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;ec2&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;myproject&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;myproject&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;sock&lt;/span&gt;; &lt;span class=&quot;c&quot;&gt;# &amp;lt;- add this
&lt;/span&gt;        }

        ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will route the traffic to the specified socket.&lt;/p&gt;

&lt;p&gt;Test it.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo nginx -t
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If ok, start the server:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo service nginx restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Go to the browser, and without specifying the port number now (default to 80). The request will hit the nginx proxy server, and the nginx server will pass it to the WSGI server, which talks to the flask app. Check if it successfully returns &lt;code&gt;Hello World!&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If not, there may be multiple reasons. The one that I encountered is solved by changing the permission of the home directory:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;chmod 711 /home/ec2-user
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Remember to restart.&lt;/p&gt;

&lt;blockquote&gt;
&lt;h6&gt;Debug Tips&lt;/h6&gt;

&lt;ol&gt;
&lt;li&gt;Echo message to &lt;code&gt;/var/log/xxx.sys.log&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tail -f /var/log/nginx/access.log&lt;/code&gt; to check nginx logs&lt;/li&gt;
&lt;li&gt;&lt;code&gt;netstat -anp | less&lt;/code&gt; to show network status&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;h2&gt;References&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-serve-flask-applications-with-gunicorn-and-nginx-on-ubuntu-14-04&quot;&gt;How To Serve Flask Applications with Gunicorn and Nginx on Ubuntu 14.04&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://nginx.org/en/docs/beginners_guide.html#conf_structure&quot;&gt;NGINX Beginner&amp;#39;s Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 07 Jul 2017 00:00:00 +0800</pubDate>
        <link>/blog/tech/system/2017/07/07/flask-app-with-gunicorn-on-nginx-server-upon-aws-ec2-linux.html</link>
        <guid isPermaLink="true">/blog/tech/system/2017/07/07/flask-app-with-gunicorn-on-nginx-server-upon-aws-ec2-linux.html</guid>
        
        <category>flask</category>
        
        <category>gunicorn</category>
        
        <category>nginx</category>
        
        <category>aws</category>
        
        
        <category>Blog</category>
        
        <category>Tech</category>
        
        <category>System</category>
        
      </item>
    
      <item>
        <title>ESP8266 with Arduino - Trials and Errors</title>
        <description>&lt;p&gt;ESP8266 is a popular WiFi module for its extremely affordable price. However, more errors tend to be encountered during the setup of this primitive module. &lt;/p&gt;

&lt;p&gt;In this tutorial, the basic steps of setting up ESP8266 through an Arduino board would be covered, and some personal trials and errors will be shared in hope to save people&amp;#39;s time and life if they are stuck with the same problems as I did.&lt;/p&gt;

&lt;!--more--&gt;

&lt;hr&gt;

&lt;p&gt;&lt;em&gt;I am actually an Arduino beginner and a software person. But in turn, I faced more errors than others, managed to solved them, and have more to share with other people who are also new to Arduino and ESP8266 WiFi module!&lt;/em&gt;&lt;/p&gt;

&lt;h1&gt;Introduction &amp;amp; Setup&lt;/h1&gt;

&lt;h2&gt;What is ESP8266?&lt;/h2&gt;

&lt;p&gt;An extremely affordable hardware component ($USD 3) to connect to WiFi. &lt;/p&gt;

&lt;p&gt;Comes with a variety of different models, which are all based on the same chip. The most popular model is ESP-03, which is of similar price to ESP-01 that I will be using in this tutorial, but with more ports (&lt;em&gt;so regretful, should have picked this one&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i2.wp.com/randomnerdtutorials.com/wp-content/uploads/2015/01/all_esp_modules1.png?resize=600%2C337&quot; alt=&quot;ESP models&quot;&gt;&lt;/p&gt;

&lt;h2&gt;Components&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://world.taobao.com/item/40484626466.htm&quot;&gt;ESP8266 WiFi module ESP-01&lt;/a&gt; (or other)&lt;/li&gt;
&lt;li&gt;Arduino Mega board (or others)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://world.taobao.com/item/522587064231.htm?spm=a312a.7700714.0.0.LOoy8V#detail&quot;&gt;Logic level converter&lt;/a&gt; (optional)&lt;/li&gt;
&lt;li&gt;Breadboard, wires, ...&lt;/li&gt;
&lt;li&gt;Arduino IDE (optional)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;Before You Start...&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;If you don&amp;#39;t know what &lt;strong&gt;AT command&lt;/strong&gt; is, &lt;strong&gt;DON&amp;#39;T SKIP THE SECTION INTRODUCING IT&lt;/strong&gt;. I&amp;#39;ll make it simple, I promise, but don&amp;#39;t directly dive into writing the codes before you know the basics of AT commands, like I did - you&amp;#39;ll end up wasting more time dealing with errors.&lt;/li&gt;
&lt;li&gt;Always start with the most basic examples.&lt;/li&gt;
&lt;li&gt;Just to let you know, &lt;strong&gt;Arduino is not necessary for you to program ESP8266&lt;/strong&gt;. Interestingly, more tutorials I found online deal with it with a USB to serial converter such as the &lt;strong&gt;FTDI232R&lt;/strong&gt; module. Follow this tutorial if you have an Arduino board with you, or else you can follow the nice tutorials I took reference on in the reference list.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Arduino IDE is also not mandatory&lt;/strong&gt;, there are other ways to write program and upload to ESP8266. But I didn&amp;#39;t do research on it, as that is not my intention for my project.&lt;/li&gt;
&lt;li&gt;Setting up a bare ESP8266 module without other assisting development board is &lt;strong&gt;FRUSTRATING&lt;/strong&gt;. If you don&amp;#39;t have as much confidence as I did and are just finding a quick way to hack it out for assignments without budget concerns, then go ahead and buy any of those development borads and make your life easier.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;Getting Started!&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Hooking up ESP8266 + Sending AT Commands&lt;/li&gt;
&lt;li&gt;Programing ESP8266&lt;/li&gt;
&lt;li&gt;Examples

&lt;ol&gt;
&lt;li&gt;Client Example - Programming ESP8266 Like Arduino&lt;/li&gt;
&lt;li&gt;Client Example - Talking to ESP8266 via Arduino&lt;/li&gt;
&lt;li&gt;Server Example - Programming ESP8266 Like Arduino&lt;/li&gt;
&lt;li&gt;Server Example - Talking to ESP8266 via Arduino&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;1. Hooking Up ESP8266 + Sending AT Commands&lt;/h2&gt;

&lt;p&gt;Here are the pins for ESP-01 model:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/pyliaorachel/pyliaorachel.github.io/master/assets/post_img/ESP8266-pins.png&quot; alt=&quot;pins&quot;&gt;&lt;/p&gt;

&lt;h3&gt;Connections&lt;/h3&gt;

&lt;div style='margin-bottom: 5px;'&gt;
    &lt;img src='https://raw.githubusercontent.com/pyliaorachel/pyliaorachel.github.io/master/assets/post_img/circuit_1.jpg' width='32%'/&gt;
    &lt;img src='https://raw.githubusercontent.com/pyliaorachel/pyliaorachel.github.io/master/assets/post_img/circuit_2.jpg' width='32%'/&gt;
    &lt;img src='https://raw.githubusercontent.com/pyliaorachel/pyliaorachel.github.io/master/assets/post_img/circuit_4.jpg' width='32%'/&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/pyliaorachel/pyliaorachel.github.io/master/assets/post_img/circuit_3.jpg&quot; alt=&quot;connections&quot;&gt;&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align: center&quot;&gt;ESP8266&lt;/th&gt;
&lt;th style=&quot;text-align: center&quot;&gt;Arduino&lt;/th&gt;
&lt;th style=&quot;text-align: center&quot;&gt;Others&lt;/th&gt;
&lt;th style=&quot;text-align: left&quot;&gt;Purpose&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: center&quot;&gt;Vcc&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;3.3V&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;Power supply&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: center&quot;&gt;GND&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;GND&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;GND&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;Ground&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: center&quot;&gt;URXD&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;Rx / Tx&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;Receive data in&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: center&quot;&gt;UTXD&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;Tx / Rx&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;Transmit data out&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: center&quot;&gt;CH_PD&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;Normally 3.3V&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;Chip power down&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: center&quot;&gt;RST&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;3.3V for normal operations / GND for reset&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;Reset&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: center&quot;&gt;GPIO0&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;- for normal operations / GND for flashing firmware&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;General purpose I/O pins, but used in flashing firmware&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align: center&quot;&gt;GPIO2&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
&lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
&lt;td style=&quot;text-align: left&quot;&gt;General purpose I/O pin&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;h5&gt;Key Notes&lt;/h5&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;NEVER connect Vcc and other pins to 5V.&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;ESP8266 operates on 3.3V; connecting pins to 5V may damage the module.&lt;/li&gt;
&lt;li&gt;For Rx/Tx pins, the one receiving data through Arduino board should theoretically also be logically shifted down to 3.3V; but many people didn&amp;#39;t encounter problem connecting them directly to each other&amp;#39;s pins, including me.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DON&amp;#39;T connect 3.3V power pin of Arduino to ESP8266. Use a logic level converter to bring 5V down to 3.3V.&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;The max limit of current flowing out of that pin is around 50 mA, which usually is not enough. That&amp;#39;s why we need a &lt;strong&gt;logic level converter&lt;/strong&gt;; there are &lt;a href=&quot;http://randomnerdtutorials.com/how-to-level-shift-5v-to-3-3v/&quot;&gt;other ways&lt;/a&gt; to bring 5V down to 3.3V, but using logic level converter ensures a better transmission performance. You can also connect it to external power source, which should be the best way to ensure stability.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rx-Rx, Tx-Tx: uploading program from computer to ESP8266 via Arduino board; Rx-Tx, Tx-Rx: letting Arduino board talk to ESP8266.&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Think of Rx-Rx, Tx-Tx as making Arduino board a channel between the computer and ESP8266; whatever goes to the Arduino board goes to ESP8266, and whatever ESP8266 sends back goes to the computer.&lt;/li&gt;
&lt;li&gt;Think of Rx-Tx, Tx-Rx as making Arduino talk to ESP8266, so probably you would have some program in Arduino sending and receiving data/commands via its own serial ports.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;I don&amp;#39;t know what CH_PD port does. Normally just leave it at 3.3V.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;If thinking of ESP8266 as an Arduino board, then Rx, Tx, GPIO0, and GPIO2 are the possible digital pins, where Rx/Tx are the predefined Serial ports.&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;If you are programming directly into ESP8266, then when using up Rx and Tx, you would probably find yourself out of Serial ports for debugging. I&amp;#39;m not sure how it can be solved, but probably you can &lt;a href=&quot;https://github.com/esp8266/Arduino/blob/master/doc/reference.md&quot;&gt;set GPIO2 as the TX pin for debugging&lt;/a&gt; or &lt;a href=&quot;http://www.forward.com.au/pfod/ESP8266/GPIOpins/index.html&quot;&gt;extend your ports&lt;/a&gt;. Not sure if they make sense for ESP-01 model (try it and tell me).&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.forward.com.au/pfod/ESP8266/GPIOpins/index.html&quot;&gt;Learn more on GPIO ports&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;Basics of AT Commands&lt;/h3&gt;

&lt;p&gt;If you have experience using terminals, then AT commands are of the same concept as those commands you put into the terminal. In terminal, when you input &lt;code&gt;ls&lt;/code&gt; and send, some programs would be run, then some outputs would be sent back to your terminal window and shown. You interact via the terminal with your computer software with a set of commands available.&lt;/p&gt;

&lt;p&gt;Similarly, &lt;strong&gt;you interact via the serial monitor with your ESP8266 with a set of AT commands available&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Simple, isn&amp;#39;t it? Instead of guiding you through how to send the various AT commands, I&amp;#39;ll only use 2 AT commands to test the module in the following section - &lt;code&gt;AT&lt;/code&gt; and &lt;code&gt;AT+GMR&lt;/code&gt;. You should try more yourself looking at &lt;a href=&quot;https://www.espressif.com/sites/default/files/documentation/4a-esp8266_at_instruction_set_en.pdf&quot;&gt;this doc&lt;/a&gt;, including how to scan for available WiFis and connect to them via AT commands, but I do not tend to terrify you with a bunch of those commands, as they are not needed if you are using libraries that wraps up those commands for you.&lt;/p&gt;

&lt;p&gt;But knowing how this mechanism drives the interaction with ESP8266 is essential in effective comprehension of the libraries used in the following sections.&lt;/p&gt;

&lt;h3&gt;Testing with Andruino IDE&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Connection: Rx-Rx, Tx-Tx, RST-3.3V, GPIO0 &amp;amp; GPIO2 floating.&lt;/em&gt;&lt;br&gt;
Note that you are directly talking to ESP8266 via Arduino board as a channel.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Connect and power up your Arduino board &amp;amp; ESP8266&lt;/li&gt;
&lt;li&gt;Make sure you Arduino board isn&amp;#39;t loaded with other programs. Either reset your Arduino baord, or upload a &lt;code&gt;BareMinimum&lt;/code&gt; example program to it&lt;/li&gt;
&lt;li&gt;Open up Arduino IDE, select &lt;code&gt;Tools &amp;gt; Port &amp;gt; YourConnectedPort&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Open up &lt;code&gt;Serial Monitor&lt;/code&gt;, and listen to baudrate &lt;code&gt;115200&lt;/code&gt;. You may see some messages bump up; those should be from ESP8266. Recognize the &lt;code&gt;ready&lt;/code&gt; message at the end. See image in step 7

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Try other baudrates if you are seeing random symbols, or seeing nothing&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Select &lt;code&gt;Both NL &amp;amp; CR&lt;/code&gt; option - it adds &lt;code&gt;\r\n&lt;/code&gt; after your input line. Necessary for sending a valid AT command&lt;/li&gt;
&lt;li&gt;Input &lt;code&gt;AT&lt;/code&gt; in your input box and press &lt;code&gt;enter&lt;/code&gt;. You should see the response &lt;code&gt;OK&lt;/code&gt; from ESP8266
&lt;img src=&quot;https://raw.githubusercontent.com/pyliaorachel/pyliaorachel.github.io/master/assets/post_img/AT.png&quot; alt=&quot;AT&quot;&gt;&lt;/li&gt;
&lt;li&gt;Input &lt;code&gt;AT+GMR&lt;/code&gt; in your input box and press &lt;code&gt;enter&lt;/code&gt;. You should see the version information of your ESP8266
&lt;img src=&quot;https://raw.githubusercontent.com/pyliaorachel/pyliaorachel.github.io/master/assets/post_img/AT+GMR.png&quot; alt=&quot;AT+GMR&quot;&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If everything shown is as expected, congratulations, your ESP8266 is working, and you can move on to the programming section. If not, then go to the troubleshooting section for help.&lt;/p&gt;

&lt;h4&gt;Alternative1: Testing with PuTTY on Windows&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;Connection: Rx-Rx, Tx-Tx, RST-3.3V, GPIO0 &amp;amp; GPIO2 floating.&lt;/em&gt;&lt;br&gt;
Note that you are directly talking to ESP8266 via Arduino board as a channel.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Connect and power up your Arduino board &amp;amp; ESP8266&lt;/li&gt;
&lt;li&gt;Make sure you Arduino board isn&amp;#39;t loaded with other programs. Either reset your Arduino baord, or upload a &lt;code&gt;BareMinimum&lt;/code&gt; example program to it if so&lt;/li&gt;
&lt;li&gt;Check the serial port number of your device under &lt;code&gt;Device Manager &amp;gt; Ports &amp;gt; USB Serial Port&lt;/code&gt; or &lt;code&gt;Arduino IDE &amp;gt; Tools &amp;gt; Port&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Open up PuTTY, select &lt;code&gt;Connection type &amp;gt; Serial&lt;/code&gt;, input &lt;code&gt;Serial line &amp;gt; COMX&lt;/code&gt; where &lt;code&gt;COMX&lt;/code&gt; is your connected serial port number, &lt;code&gt;Speed &amp;gt; 115200&lt;/code&gt; or other baudrates that work. Press &lt;code&gt;Open&lt;/code&gt;. Some messages bump up as in Arduino IDE&lt;/li&gt;
&lt;li&gt;Enter &lt;code&gt;AT&lt;/code&gt;, &lt;strong&gt;hold down &lt;code&gt;Ctrl&lt;/code&gt; key, press &lt;code&gt;m&lt;/code&gt; key, press &lt;code&gt;j&lt;/code&gt; key, release &lt;code&gt;Ctrl&lt;/code&gt; key&lt;/strong&gt;. This sends an &lt;code&gt;AT&lt;/code&gt; command ending with &lt;code&gt;\r\n&lt;/code&gt;. You should see the response &lt;code&gt;OK&lt;/code&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/pyliaorachel/pyliaorachel.github.io/master/assets/post_img/AT_PUTTY.png&quot; alt=&quot;AT&quot;&gt;&lt;/li&gt;
&lt;li&gt;Enter &lt;code&gt;AT+GMR&lt;/code&gt; and do the same thing as above. You should see the version information
&lt;img src=&quot;https://raw.githubusercontent.com/pyliaorachel/pyliaorachel.github.io/master/assets/post_img/AT+GMR_PUTTY.png&quot; alt=&quot;AT+GMR&quot;&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;Alternative2: Testing with Arduino Board&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;Connection: Rx-Tx1, Tx-Rx1, RST-3.3V, GPIO0 &amp;amp; GPIO2 floating for Mega; Rx-D2, Tx-D3, RST-3.3V, GPIO0 &amp;amp; GPIO2 floating for Uno.&lt;/em&gt;&lt;br&gt;
Note that your Arduino board is the one talking to ESP8266.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Connect and power up your Arduino board &amp;amp; ESP8266&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Open up a new Arduino &lt;code&gt;BareMinimum&lt;/code&gt; example, copy and paste the following code:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// For boards with more than 1 hardware serial ports e.g. Mega
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;115200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;             &lt;span class=&quot;c1&quot;&gt;// Debug message talking on baudrate 115200
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;Serial1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;115200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;            &lt;span class=&quot;c1&quot;&gt;// ESP talking on baudrate 115200
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Serial1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;available&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;// ESP wants to talk to you
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Serial1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;// Log out what ESP wants to say
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;available&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;         &lt;span class=&quot;c1&quot;&gt;// You want to talk to ESP (you input and send something via the input field)
&lt;/span&gt;    &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chars&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;// Read 1 byte (1 char) at a time
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;Serial1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chars&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;           &lt;span class=&quot;c1&quot;&gt;// Tell ESP your words/commands 1 byte (1 char) at a time
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Serial&lt;/code&gt; is for logging your debug message; &lt;code&gt;Serial1&lt;/code&gt; is the &lt;code&gt;Tx1/Rx2&lt;/code&gt; pair which your ESP module is connected to.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// For boards with only 1 hardware serial port e.g. Uno, we have to use SoftwareSerial ports, i.e. take other digital output pins as your serial port
&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;SoftwareSerial.h&amp;gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SoftwareSerial&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ESP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* RX:D3, TX:D2 */&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;115200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;             &lt;span class=&quot;c1&quot;&gt;// Debug message talking on baudrate 115200
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;ESP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;115200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;                &lt;span class=&quot;c1&quot;&gt;// ESP talking on baudrate 115200
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ESP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;available&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;            &lt;span class=&quot;c1&quot;&gt;// ESP wants to talk to you
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ESP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;       &lt;span class=&quot;c1&quot;&gt;// Log out what ESP wants to say
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;available&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;         &lt;span class=&quot;c1&quot;&gt;// You want to talk to ESP (you input and send something via the input field)
&lt;/span&gt;    &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chars&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;// Read 1 byte (1 char) at a time
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;ESP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chars&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;               &lt;span class=&quot;c1&quot;&gt;// Tell ESP your words/commands 1 byte (1 char) at a time
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SoftwareSerial&lt;/code&gt; library is necessary if you are having only 1 Serial port and you want it to be the debug port.&lt;/li&gt;
&lt;li&gt;Try &lt;code&gt;AT+GMR&lt;/code&gt; command; if you see the message corrupted, i.e. some parts of the message is somehow not readable, don&amp;#39;t assume you&amp;#39;re ok. see troubleshooting section.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Select &lt;code&gt;Tools &amp;gt; Board &amp;gt; YourConnectedArduinoBoard&lt;/code&gt;, &lt;code&gt;Tools &amp;gt; Port &amp;gt; YourConnectedPort&lt;/code&gt;. Upload the program&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The following steps are the same as step 4 ~ step 7 in the main testing method &lt;strong&gt;Testing with Andruino IDE&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;2. Programing ESP8266&lt;/h2&gt;

&lt;p&gt;There are basically 2 ways of using the ESP8266 module: &lt;strong&gt;programming ESP8266 like Arduino&lt;/strong&gt; and &lt;strong&gt;talking to ESP8266 via Arduino&lt;/strong&gt;. Strictly speaking, the latter one may not really mean to &lt;strong&gt;program&lt;/strong&gt; the module; it is the program we upload into Arduino board that sends commands to ESP8266 on behalf of us.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Programming ESP8266 like Arduino&lt;/strong&gt;: directly upload programs to ESP8266 and treat it like Arduino&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Talking to ESP8266 via Arduino&lt;/strong&gt;: upload program into Arduino board that sends commands to ESP8266 on behalf of us&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I didn&amp;#39;t notice the different programming methods at first, and follow whatever the first tutorial I found online that is workable, that is to &lt;strong&gt;program ESP8266 like Arduino&lt;/strong&gt;. But later I found that I really need another serial port for communication in addition to the debug port! There are workarounds, as stated in &lt;code&gt;Getting Started! &amp;gt; Hooking Up ESP8266 + Sending AT Commands &amp;gt; Connections &amp;gt; Key Notes&lt;/code&gt; in this tutorial, but I was too tired to try so. Then I switched to the other method, in which the debug port is the Mega&amp;#39;s. &lt;/p&gt;

&lt;p&gt;However, the latter method is less stable then the first one, as errors tend to come out more often with the extra communication between Arduino and ESP. Choose whatever suits your purpose the best.&lt;/p&gt;

&lt;h3&gt;Programming ESP8266 Like Arduino&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Connection: Rx-Rx, Tx-Tx, RST-3.3V, GPIO0 &amp;amp; GPIO2 floating.&lt;/em&gt;&lt;br&gt;
Library: &lt;a href=&quot;https://github.com/esp8266/arduino#installing-with-boards-manager&quot;&gt;esp8266/arduino&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Go through the &lt;a href=&quot;https://github.com/esp8266/arduino#installing-with-boards-manager&quot;&gt;installation guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Open up any examples under &lt;code&gt;File &amp;gt; Examples &amp;gt; WiFi&lt;/code&gt;, for example, the &lt;code&gt;SimpleWebServerWiFi&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Replace the &lt;code&gt;ssid&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt; with a reachable WiFi AP at your place

&lt;ul&gt;
&lt;li&gt;See troubleshooting for the requirements on the AP network&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Change the baudrate to a workable one, in our case, &lt;code&gt;115200&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Select &lt;code&gt;Tools &amp;gt; Board &amp;gt; ESP8266 Modules &amp;gt; Generic ESP8266 Module&lt;/code&gt; (or others if you&amp;#39;re not using bare ESP8266), &lt;code&gt;Tools &amp;gt; Port &amp;gt; YourConnectedPort&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Upload the program to ESP

&lt;ol&gt;
&lt;li&gt;Diconnect power to ESP&lt;/li&gt;
&lt;li&gt;Bring &lt;code&gt;GPIO0&lt;/code&gt; to ground&lt;/li&gt;
&lt;li&gt;Power up ESP&lt;/li&gt;
&lt;li&gt;Pull out &lt;code&gt;GPIO0&lt;/code&gt; to float&lt;/li&gt;
&lt;li&gt;Click the upload button in IDE&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;You should see something like this:
&lt;img src=&quot;https://raw.githubusercontent.com/pyliaorachel/pyliaorachel.github.io/master/assets/post_img/Upload_to_ESP.png&quot; alt=&quot;Upload to ESP&quot;&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;Talking to ESP8266 via Arduino&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Connection: Rx-Tx1, Tx-Rx1, RST-3.3V, GPIO0 &amp;amp; GPIO2 floating.&lt;/em&gt;&lt;br&gt;
Library: &lt;a href=&quot;https://github.com/itead/ITEADLIB_Arduino_WeeESP8266&quot;&gt;itead/ITEADLIB_Arduino_WeeESP8266&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Install the library

&lt;ol&gt;
&lt;li&gt;Download the library as a &lt;code&gt;zip&lt;/code&gt; file&lt;/li&gt;
&lt;li&gt;Under &lt;code&gt;Sketch &amp;gt; Include Libaray&lt;/code&gt;, select &lt;code&gt;Add .ZIP Library...&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Choose your downloaded &lt;code&gt;zip&lt;/code&gt; file&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;Open up any examples under &lt;code&gt;File &amp;gt; Examples &amp;gt; ITEADLIB_Arduino_WeeESP8266&lt;/code&gt;, for example, the &lt;code&gt;ConnectWiFi&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Replace the &lt;code&gt;ssid&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt; with a reachable WiFi AP at your place

&lt;ul&gt;
&lt;li&gt;See troubleshooting for the requirements on the AP network&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Change the baudrate to a workable one, in our case, &lt;code&gt;115200&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Select &lt;code&gt;Tools &amp;gt; Board &amp;gt; Arduino AVR Boards &amp;gt; Arduino/Genuino Mega or Mega2560&lt;/code&gt; (or others), &lt;code&gt;Tools &amp;gt; Port &amp;gt; YourConnectedPort&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Upload the program to Arduino board&lt;/li&gt;
&lt;li&gt;Open up the serial monitor, and you should see messages showing the program interacting with ESP&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;3. Examples&lt;/h2&gt;

&lt;p&gt;The examples are modified from the ones included in the libraries, but I&amp;#39;ll put more comments in the code.&lt;/p&gt;

&lt;h3&gt;1. Client Example - Programming ESP8266 Like Arduino&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Connection: Rx-Rx, Tx-Tx, RST-3.3V, GPIO0 &amp;amp; GPIO2 floating.&lt;/em&gt;&lt;br&gt;
&lt;code&gt;HTTPClient&lt;/code&gt; is a wrapper of &lt;code&gt;WiFiWebClient&lt;/code&gt;, which is more easy to use. No need to wrap the request message yourself.&lt;br&gt;
Modified from: &lt;a href=&quot;https://github.com/esp8266/Arduino/blob/master/libraries/ESP8266HTTPClient/examples/BasicHttpClient/BasicHttpClient.ino&quot;&gt;esp8266/arduino - BasicHttpClient&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/* Posting values from 0 to 255 onto dweet.io */&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;ESP8266WiFi.h&amp;gt;
#include &amp;lt;ESP8266HTTPClient.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define MAX 255
#define MIN 0
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ssid&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;xxx&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;xxx&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urlPath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;http://dweet.io/dweet/for/thing-name?value=&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                &lt;span class=&quot;c1&quot;&gt;// dweet.io is a simple messaging host for IoT devices
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;IPAddress&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ip_static&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;192&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;168&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;137&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;                                                 &lt;span class=&quot;c1&quot;&gt;// Use a static IP address
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IPAddress&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gateway&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;192&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;168&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;137&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;                                                   &lt;span class=&quot;c1&quot;&gt;// Gateway should be the IP of your connected hotspot device
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IPAddress&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subnet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;                                                    &lt;span class=&quot;c1&quot;&gt;// Check subnet  through that device as well
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;115200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;                                                             &lt;span class=&quot;c1&quot;&gt;// Serial for debug messages, since we're using ESP like Arduino
&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Connect to WiFi network
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;WiFi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ip_static&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gateway&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subnet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;WiFi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ssid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\r&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\r&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Working to connect&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// Wait for connection
&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WiFi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WL_CONNECTED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Connected to &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ssid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;IP address: &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WiFi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;localIP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WiFi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WL_CONNECTED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;HTTPClient&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Create URI for the request
&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;sprintf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;%s%d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urlPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;connecting to &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;                                                                  &lt;span class=&quot;c1&quot;&gt;// TCP handshake with host 
&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpCode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;                                                        &lt;span class=&quot;c1&quot;&gt;// GET request, return response
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;httpCode: &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;httpCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;httpCode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;payload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;payload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;                                                                        &lt;span class=&quot;c1&quot;&gt;// Close TCP connection
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;2. Client Example - Talking to ESP8266 via Arduino&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Connection: Rx-Tx1, Tx-Rx1, RST-3.3V, GPIO0 &amp;amp; GPIO2 floating.&lt;/em&gt;&lt;br&gt;
Modified from: &lt;a href=&quot;https://github.com/itead/ITEADLIB_Arduino_WeeESP8266/blob/master/examples/HTTPGET/HTTPGET.ino&quot;&gt;ITEADLIB_Arduino_WeeESP8266 - HTTPGET&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &quot;ESP8266.h&quot;
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define SSID        &quot;xxx&quot;
#define PASSWORD    &quot;xxx&quot;
#define HOST_NAME   &quot;dweet.io&quot;
#define HOST_PORT   (80)
&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ESP8266&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wifi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Serial1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;115200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;115200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;setup begin&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;FW Version:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wifi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getVersion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c_str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wifi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setOprToStationSoftAP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;to station + softap ok&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;to station + softap err&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wifi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;joinAP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SSID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PASSWORD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Join AP success&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;IP:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wifi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getLocalIP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c_str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;       
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Join AP failure&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wifi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;disableMUX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;single ok&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;single err&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;setup end&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wifi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;createTCP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HOST_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HOST_PORT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;create tcp ok&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;create tcp err&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;GET /dweet/for/thing-name?value=1 HTTP/1.1&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Host: dweet.io&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Connection: keep-alive&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n\r\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;wifi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;strlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

    &lt;span class=&quot;kt&quot;&gt;uint32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wifi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;len&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Received:[&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;]&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wifi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;releaseTCP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;release tcp ok&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;release tcp err&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;3. Server Example - Programming ESP8266 Like Arduino&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Connection: Rx-Rx, Tx-Tx, RST-3.3V, GPIO0 &amp;amp; GPIO2 floating.&lt;/em&gt;&lt;br&gt;
Modified from: &lt;a href=&quot;https://learn.adafruit.com/esp8266-temperature-slash-humidity-webserver/code&quot;&gt;Adafruit - ESP8266 Temperature / Humidity Webserver&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;ESP8266WiFi.h&amp;gt;
#include &amp;lt;WiFiClient.h&amp;gt;
#include &amp;lt;ESP8266WebServer.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ssid&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;xxx&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;xxx&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;ESP8266WebServer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;                                                           &lt;span class=&quot;c1&quot;&gt;// Listening on port 80
&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                                                                   &lt;span class=&quot;c1&quot;&gt;// String to display
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;handle_root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;text/plain&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hello from esp8266!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;                               &lt;span class=&quot;c1&quot;&gt;// If accessing root, respond this message
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// You can open the Arduino IDE Serial Monitor window to see what the code is doing
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;115200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// Connect to WiFi network
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;WiFi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ssid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\r&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\r&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Working to connect&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// Wait for connection
&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WiFi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WL_CONNECTED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Connected to &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ssid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;IP address: &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WiFi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;localIP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;handle_root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;                                                         &lt;span class=&quot;c1&quot;&gt;// If client requests root page, handle it with handle_root subroutine
&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/test&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[](){&lt;/span&gt;                                                             &lt;span class=&quot;c1&quot;&gt;// If client requests /test page, handle it with the code section 
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;webString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;text/plain&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;HTTP server started&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handleClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;                                                                &lt;span class=&quot;c1&quot;&gt;// Waiting for clients to connect
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;4. Server Example - Talking to ESP8266 via Arduino&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;To be released.&lt;/em&gt;&lt;/p&gt;

&lt;h1&gt;Trouble Shooting&lt;/h1&gt;

&lt;h4&gt;1. Hooking Up ESP8266 + Sending AT Commands&lt;/h4&gt;

&lt;h6&gt;Testing with Andruino IDE&lt;/h6&gt;

&lt;ul&gt;
&lt;li&gt;If you do not see &lt;code&gt;ready&lt;/code&gt; as the response message, and you find that you can&amp;#39;t send any commands out or receive any responses, your ESP8266 is probably stuck. Try:

&lt;ul&gt;
&lt;li&gt;Reset: &lt;strong&gt;pull GPIO0 to GND, pull RST to GND, pull RST back to Vcc, pull GPIO0 out to floating&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;If not working, power off ESP and power on ESP. Reset again.&lt;/li&gt;
&lt;li&gt;If not working, follow &lt;a href=&quot;https://www.allaboutcircuits.com/projects/update-the-firmware-in-your-esp8266-wi-fi-module/&quot;&gt;this guide&lt;/a&gt; on updating your firmware to the latest version. &lt;strong&gt;This is really recommended!!!&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Download the latest &lt;a href=&quot;http://bbs.espressif.com/viewtopic.php?f=57&amp;amp;t=433&quot;&gt;Flash Download Tool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Download the latest &lt;a href=&quot;http://bbs.espressif.com/viewtopic.php?f=46&amp;amp;t=850&quot;&gt;ESP8266 SDK&lt;/a&gt;. Choose &lt;strong&gt;Non-OS SDK&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h6&gt;Testing with Andruino Board&lt;/h6&gt;

&lt;ul&gt;
&lt;li&gt;If you&amp;#39;re using Arduino Uno and ESP is sending you responses that doesn&amp;#39;t appear readable, the data might be corrupted due to the high baudrate &lt;code&gt;115200&lt;/code&gt; that Arduino Uno cannot withstand, or some voltage level problems. Try:

&lt;ul&gt;
&lt;li&gt;Ensure every GNDs are connected, including the ESP&amp;#39;s and Arduino&amp;#39;s GND pins.&lt;/li&gt;
&lt;li&gt;If not working, lower the baudrate.&lt;/li&gt;
&lt;li&gt;If not working, switch to Mega or other boards.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;2. Programing ESP8266&lt;/h4&gt;

&lt;h6&gt;Programming ESP8266 Like Arduino&lt;/h6&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If you don&amp;#39;t know what &lt;code&gt;ssid&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt; are, &lt;code&gt;ssid&lt;/code&gt; is the network name you would see when you want to connect to WiFi in the available WiFi list e.g. &lt;code&gt;eduroam&lt;/code&gt;, and &lt;code&gt;password&lt;/code&gt; is the password. Note that there&amp;#39;s no options for &lt;code&gt;username&lt;/code&gt;, because ESP8266 doesn&amp;#39;t accept enterprise protected access points (WPA2_Enterprise)! So you need to have a private AP available. Some common connection points are from:
&lt;img src=&quot;https://raw.githubusercontent.com/pyliaorachel/pyliaorachel.github.io/master/assets/post_img/available_network_types.png&quot; alt=&quot;Available network types&quot;&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Your router&lt;/li&gt;
&lt;li&gt;Your mobile phone hotspot&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Your shared hotspot from a computer that is connected to network cables&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Under Windows platforms, there is a convenient way to share its network as hotspot:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Open command prompt, run:  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;netsh wlan show drivers  
netsh wlan set hostednetwork mode=allow ssid=your-preferred-name key=your-preferred-password
netsh wlan start hostednetwork
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Make sure the network is allowed to be shared&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Press &lt;code&gt;Windows + r&lt;/code&gt; key, enter &lt;code&gt;ncpa.cpl&lt;/code&gt;. This opens up &lt;code&gt;Network Connections&lt;/code&gt; panel.&lt;/li&gt;
&lt;li&gt;Right-click &lt;code&gt;Wi-Fi &amp;gt; properties&lt;/code&gt;, switch to &lt;code&gt;Sharing&lt;/code&gt; and check the first checkbox under &lt;code&gt;Internet Connection Sharing&lt;/code&gt; that reads &lt;code&gt;Allow other network users to connect...&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Test hotspot&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Take out your mobile phone, connect to hotspot, and try to go to a website. If everything is fine, then you are good to go.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you cannot see the uploading progress message, but instead see a lot of mysterious errors such as &lt;code&gt;espcomm_open failed&lt;/code&gt;, &lt;code&gt;espcomm_sync failed&lt;/code&gt;, and a whole bunch of other possibilities, try:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Check your port selection is the right one. Check your circuit connections, ensure the &lt;code&gt;GND&lt;/code&gt;s are connected.&lt;/li&gt;
&lt;li&gt;If not working, repeat the upload process as state in step 6.&lt;/li&gt;
&lt;li&gt;If not working, power off ESP and power on ESP. Upload again.&lt;/li&gt;
&lt;li&gt;If not working, unplug your USB and plug in again. Upload again.&lt;/li&gt;
&lt;li&gt;If not working, follow &lt;a href=&quot;https://www.allaboutcircuits.com/projects/update-the-firmware-in-your-esp8266-wi-fi-module/&quot;&gt;this guide&lt;/a&gt; on updating your firmware to the latest version. &lt;strong&gt;This is really recommended!!!&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Download the latest &lt;a href=&quot;http://bbs.espressif.com/viewtopic.php?f=57&amp;amp;t=433&quot;&gt;Flash Download Tool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Download the latest &lt;a href=&quot;http://bbs.espressif.com/viewtopic.php?f=46&amp;amp;t=850&quot;&gt;ESP8266 SDK&lt;/a&gt;. Choose &lt;strong&gt;Non-OS SDK&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you&amp;#39;re testing as a server, and have no response after you ping the IP address of ESP, try:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Connect you computer with WiFi under the same network as ESP8266&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h6&gt;Talking to ESP8266 via Arduino&lt;/h6&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If you&amp;#39;re using Arduino Uno and ESP is sending you responses that doesn&amp;#39;t appear readable, the data might be corrupted due to the high baudrate &lt;code&gt;115200&lt;/code&gt; that Arduino Uno cannot withstand, or some voltage level problems. Try:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ensure every GNDs are connected, including the ESP&amp;#39;s and Arduino&amp;#39;s GND pins.&lt;/li&gt;
&lt;li&gt;If not working, lower the baudrate.&lt;/li&gt;
&lt;li&gt;If not working, switch to Mega or other boards.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you&amp;#39;re testing as a server, and have no response after you ping the IP address of ESP, try:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Connect you computer with WiFi under the same network as ESP8266&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;So I believe that&amp;#39;s all you need to know to successfully setup an ESP8266 module - ok I guess it&amp;#39;s pretty much. Now you know how frustrating the process might be setting up this WiFi module for a software person, and how the cheap price comes with a huge cost. &lt;/p&gt;

&lt;p&gt;But I believe I was the one who encountered most of the errors people are likely to encounter and managed to solve them somehow, so I hope the troubleshooting part is comprehensive enough to cover all of your problems. To me, every error popped up appeared to have 100 different possible suggested solutions online, and I almost tried all of them to finally identify one possible valid solution, or sometimes even none of them are valid. I have to say, ESP8266 still have its long way to go.&lt;/p&gt;

&lt;p&gt;Finally, I really have to thank the people who wrote the tutorials, instructables, guides, and documentations online, which are mostly included in the following references (cannot put them all). &lt;/p&gt;

&lt;p&gt;&lt;em&gt;I will post the sample codes up to GitHub along with a summary of this tutorial as a cheatsheet later if I find time.&lt;/em&gt;&lt;/p&gt;

&lt;h1&gt;References&lt;/h1&gt;

&lt;p&gt;I bet I&amp;#39;ve searched through 100 webpages along my journey on setting up ESP8266 without an error. The * starred * ones are the recommended ones that really helped me a lot along my way. Others are more or less the same, but I also took reference on.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Setting up ESP8266 via USB/TTL converter

&lt;ul&gt;
&lt;li&gt;* &lt;a href=&quot;http://www.instructables.com/id/ESP8266-Wi-fi-module-explain-and-connection/?ALLSTEPS&quot;&gt;ESP8266 Wi Fi Module Explain and Connection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://rancidbacon.com/files/kiwicon8/ESP8266_WiFi_Module_Quick_Start_Guide_v_1.0.4.pdf&quot;&gt;ESP8266 WiFi Module Quick Start Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.esp8266.com/wiki/doku.php?id=getting-started-with-the-esp8266&quot;&gt;Getting Started with ESP8266&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.allaboutcircuits.com/projects/breadboard-and-program-an-esp-01-circuit-with-the-arduino-ide/&quot;&gt;Breadboard and Program an ESP-01 Circuit with the Arduino IDE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://randomnerdtutorials.com/how-to-install-esp8266-board-arduino-ide/&quot;&gt;How to Install the ESP8266 Board in Arduino IDE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://makezine.com/2015/04/01/installing-building-arduino-sketch-5-microcontroller/&quot;&gt;Installing and Building an Arduino Sketch for the $5 ESP8266 Microcontroller&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://fab.cba.mit.edu/classes/863.14/tutorials/Programming/serialwifi.html&quot;&gt;Serial-to-WiFi Tutorial using ESP8266&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Programming ESP8266 like Arduino

&lt;ul&gt;
&lt;li&gt;* &lt;a href=&quot;https://learn.adafruit.com/esp8266-temperature-slash-humidity-webserver/overview&quot;&gt;ESP8266 Temperature / Humidity Webserver&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;A little bit outdated on IDE setup, but the program uploading steps saved my life!&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;* &lt;a href=&quot;http://www.whatimade.today/esp8266-easiest-way-to-program-so-far/&quot;&gt;ESP8266 - Easiest way to program so far (Using Arduino IDE)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.hackster.io/rayburne/esp8266-01-using-arduino-ide-67a124&quot;&gt;ESP8266-01 using Arduino IDE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.geekstips.com/esp8266-arduino-tutorial-iot-code-example/&quot;&gt;ESP8266 ARDUINO TUTORIAL – WIFI MODULE COMPLETE REVIEW&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Talking to ESP8266 via Arduino

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://dalpix.com/blog/connecting-your-arduino-wifi-esp-8266-module&quot;&gt;Connecting your Arduino to WiFi via an ESP-8266 module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.instructables.com/id/Beginners-Guide-to-ESP8266-and-Tweeting-Using-ESP8/&quot;&gt;Beginner&amp;#39;s Guide to ESP8266 and Tweeting Using ESP8266&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Note that the author said the connection of Rx/Tx depends on the version of ESP8266. Sorry but I doubt that.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Other nice and comprehensive tutorials

&lt;ul&gt;
&lt;li&gt;* &lt;a href=&quot;https://mlwmlw.org/2015/07/%E6%B7%B1%E5%85%A5%E6%B7%BA%E5%87%BA-wifi-%E6%99%B6%E7%89%87-esp8266-with-arduino/&quot;&gt;深入淺出 Wifi 晶片 ESP8266 with Arduino&lt;/a&gt; &lt;em&gt;Chinese&lt;/em&gt; &lt;em&gt;(台灣人好棒棒)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;* &lt;a href=&quot;https://www.allaboutcircuits.com/projects/update-the-firmware-in-your-esp8266-wi-fi-module/&quot;&gt;Update the Firmware in Your ESP8266 Wi-Fi Module&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Other examples

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.homeautomationforgeeks.com/ESP8266_samples.shtml&quot;&gt;ESP8266 Samples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Karang/Ardunet&quot;&gt;Arduino port for ESP8266&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Documentations

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.espressif.com/sites/default/files/documentation/4a-esp8266_at_instruction_set_en.pdf&quot;&gt;AT Command Set&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://room-15.github.io/blog/2015/03/26/esp8266-at-command-reference/#AT+CIPSTATUS&quot;&gt;ESP8266 - AT Command Reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 13 Apr 2017 00:00:00 +0800</pubDate>
        <link>/tutorial/hardware/arduino/2017/04/13/esp8266-with-arduino-trials-and-errors.html</link>
        <guid isPermaLink="true">/tutorial/hardware/arduino/2017/04/13/esp8266-with-arduino-trials-and-errors.html</guid>
        
        <category>arduino</category>
        
        <category>esp8266</category>
        
        
        <category>Tutorial</category>
        
        <category>Hardware</category>
        
        <category>Arduino</category>
        
      </item>
    
      <item>
        <title>Django SQLite DB Cleanup</title>
        <description>&lt;p&gt;To beginners of Django, you may want to play with the sqlite db configuration commands before you actually implement something related to your project. The cleanup afterwards may be harmful due to the lack of clear instructions found online, and many cleanup should be done manually. Some useful commands and solutions to weird issues will be addressed.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h4&gt;DB Commands&lt;/h4&gt;

&lt;h6&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/1.10/topics/migrations/&quot;&gt;Migrations&lt;/a&gt;&lt;/h6&gt;

&lt;p&gt;&lt;code&gt;python manage.py makemigrations&lt;/code&gt;: creating new migrations based on the changes you have made to your models&lt;br&gt;
&lt;code&gt;python manage.py migrate&lt;/code&gt;: applying &amp;amp; unapplying migrations&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Issues

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/9373871/django-migrate-table-forum-user-already-exists&quot;&gt;table not exists errors&lt;/a&gt; occur

&lt;ul&gt;
&lt;li&gt;Run &lt;code&gt;python manage.py migrate --fake&lt;/code&gt; instead&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/21457563/operationalerror-no-such-column&quot;&gt;column not exists errors&lt;/a&gt; occur

&lt;ul&gt;
&lt;li&gt;Probably due to schema changes not synced with DB tables; check schema with &lt;code&gt;python manage.py inspectdb&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Suggest cleaning up the entire database in the following section&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h6&gt;Clean Up&lt;/h6&gt;

&lt;p&gt;This is only used when you want to clean up the &lt;strong&gt;entire database&lt;/strong&gt;, e.g. you&amp;#39;re playing with your DB and wants to start implementing real things now.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Dump all data in the DB: &lt;code&gt;python manage.py flush&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://simpleisbetterthancomplex.com/tutorial/2016/07/26/how-to-reset-migrations.html&quot;&gt;Reset migrations&lt;/a&gt;:&lt;br&gt;
&lt;code&gt;find . -path &amp;quot;*/migrations/*.py&amp;quot; -not -name &amp;quot;__init__.py&amp;quot; -delete&lt;/code&gt;&lt;br&gt;
&lt;code&gt;find . -path &amp;quot;*/migrations/*.pyc&amp;quot;  -delete&lt;/code&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.techiediaries.com/how-to-reset-migrations-in-django-17-18-19-and-110/&quot;&gt;Discard current schema&lt;/a&gt;: &lt;code&gt;rm db.sqlite3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Run migrations again&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now all things should be reset.&lt;/p&gt;

&lt;h6&gt;Schema&lt;/h6&gt;

&lt;p&gt;Suppose now you already have a bunch of data and you really don&amp;#39;t wanna dump them away. But after you modify the models, you found that the database schema won&amp;#39;t be updated!  &lt;/p&gt;

&lt;p&gt;Here is the suggested way:  &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;sqlite3 db.sqlite&lt;/code&gt;: enter the sqlite3 shell&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; .schema&lt;/code&gt;: check schema&lt;/li&gt;
&lt;li&gt;Verify your schema. If not matched with models, identify the outdated table and proceed with the following steps; otherwise, there must be other problems.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; drop table [table_name]&lt;/code&gt;: drop the table&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; create table [table_name] (...);&lt;/code&gt;: create the table again manually with the updated fields&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://simpleisbetterthancomplex.com/tutorial/2016/07/26/how-to-reset-migrations.html&quot;&gt;Reset migrations&lt;/a&gt;:&lt;br&gt;
&lt;code&gt;find . -path &amp;quot;*/migrations/*.py&amp;quot; -not -name &amp;quot;__init__.py&amp;quot; -delete&lt;/code&gt;&lt;br&gt;
&lt;code&gt;find . -path &amp;quot;*/migrations/*.pyc&amp;quot;  -delete&lt;/code&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Run migrations again&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now you can check schema with &lt;code&gt;python manage.py inspectdb&lt;/code&gt; again, and the related model should be updated.  &lt;/p&gt;

&lt;p&gt;This might not be the most perfect solution, but I bet there is no other simple way to update the schema without dumping the database all away; at least after all of the research, this is the only effective way I found to solve my problem. &lt;/p&gt;
</description>
        <pubDate>Wed, 29 Mar 2017 00:00:00 +0800</pubDate>
        <link>/blog/tech/django/2017/03/29/django-sqlite-db-cleanup.html</link>
        <guid isPermaLink="true">/blog/tech/django/2017/03/29/django-sqlite-db-cleanup.html</guid>
        
        <category>django</category>
        
        <category>sqlite</category>
        
        
        <category>Blog</category>
        
        <category>Tech</category>
        
        <category>Django</category>
        
      </item>
    
  </channel>
</rss>
